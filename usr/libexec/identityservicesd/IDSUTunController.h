//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDeviceConnectionInfo, IDSLinkManager, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface IDSUTunController : NSObject
{
    struct SimpleNSStringToObjectTable _deviceConnectionInfoTableByCbuuid;	// 8 = 0x8
    struct _opaque_pthread_mutex_t _deviceConnectionInfoTableByCbuuidLock;	// 32 = 0x20
    IDSLinkManager *_linkManager;	// 96 = 0x60
    _Bool _logPackets;	// 104 = 0x68
    _Bool _vifShouldReadMultiple;	// 105 = 0x69
    unsigned int _vifMaxPendingPackets;	// 108 = 0x6c
    _Bool _vifUseChannel;	// 112 = 0x70
    _Bool _hasFixedDestination;	// 113 = 0x71
    _Bool _encryptionEnabled;	// 114 = 0x72
    _Bool _controlChannelEncryptionDisabled;	// 115 = 0x73
    struct os_unfair_lock_s _controlChannelVersionCacheLock;	// 116 = 0x74
    NSMutableDictionary *_controlChannelVersionCache;	// 120 = 0x78
    _Bool _isSimulateResetLoopTest;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_ipsecQueue;	// 136 = 0x88
    _Bool _useBTDatagramPipe;	// 144 = 0x90
    _Bool _ignoreUTunChannelWriteSignal;	// 145 = 0x91
    IDSDeviceConnectionInfo *_testDeviceConnectionInfo;	// 152 = 0x98
}

+ (id)sharedInstance;	// IMP=0x00200000005b2bf0
- (void).cxx_destruct;	// IMP=0x00200000005ef210
@property(readonly, nonatomic) IDSLinkManager *linkManager; // @synthesize linkManager=_linkManager;
- (void)onTransportThread_StopBTDatagramLinkForDefaultPairedDevice;	// IMP=0x00100000005ef1b0
- (unsigned long long)onTransportThread_SendWithConnectionContext:(id)arg1 packetBuffer:(CDStruct_4a5a3501 *)arg2;	// IMP=0x00100000005eefb0
- (void)clearStats;	// IMP=0x00100000005eed20
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x00100000005ee620
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x00100000005ee5e0
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x00100000005ee580
- (void)link:(id)arg1 hasSpaceAvailable:(_Bool)arg2 deviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000005ee4e0
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000005ee120
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000005ee090
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_4a5a3501 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000005ed960
- (void)sendSuspendOTRNegotiationMessage:(id)arg1;	// IMP=0x00100000005ed700
- (void)sendOTRNegotiationMessage:(id)arg1 negotiationCount:(unsigned int)arg2 negotiationData:(id)arg3;	// IMP=0x00100000005ed3e0
- (void)setLinkPreferences:(id)arg1;	// IMP=0x00100000005ed210
- (void)setPreferInfraWiFi:(_Bool)arg1;	// IMP=0x00100000005ecf90
- (unsigned long long)totalPacketsReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005eca70
- (unsigned long long)totalPacketsSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005ec550
- (id)perServiceDataReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005ebcd0
- (id)perServiceDataSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005eb450
- (id)perServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005eb070
- (id)onTransportThread_PerServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000005ea590
- (id)copyLinkStatsDict;	// IMP=0x00100000005ea320
- (void)deletePairedDevice:(id)arg1;	// IMP=0x00100000005ea070
- (void)connectPairedDevice:(id)arg1;	// IMP=0x00100000005e9dc0
- (void)addPairedDevice:(id)arg1 shouldPairDirectlyOverIPsec:(_Bool)arg2;	// IMP=0x00100000005e9ae0
- (void)addPairedDevice:(id)arg1;	// IMP=0x00100000005e9a80
- (void)tearDownEncryptionForDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;	// IMP=0x00100000005e9780
- (void)obliterateConnectionInfoForCBUUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 completionQueue:(id)arg3;	// IMP=0x00100000005e9070
- (void)obliterateConnectionInfoWithCompletionBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2;	// IMP=0x00100000005e8fe0
- (void)obliterateConnectionInfoForCBUUID:(id)arg1;	// IMP=0x00100000005e8e60
- (void)startLocalSetup;	// IMP=0x00100000005e8da0
- (void)onTransportThread_requestChildConnectionIDForLinkID:(BOOL)arg1 sessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x00100000005e8ce0
- (void)onTransportThread_setClientUniquePID:(unsigned long long)arg1 sessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x00100000005e8c20
- (void)onTransportThread_sendConnectedLinkToAVCForSessionID:(id)arg1;	// IMP=0x00100000005e8bc0
- (void)onTransportThread_updateParticipantType:(unsigned short)arg1 forSessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 sessionStateCounter:(unsigned int)arg5;	// IMP=0x00100000005e8af0
- (unsigned long long)onTransportThread_createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3 relayGroupID:(id)arg4 relaySessionID:(id)arg5;	// IMP=0x00100000005e8a00
- (unsigned long long)onTransportThread_participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3 relayGroupID:(id)arg4 relaySessionID:(id)arg5;	// IMP=0x00100000005e8910
- (void)onTransportThread_registerPluginForGroup:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 options:(id)arg4;	// IMP=0x00100000005e8830
- (void)onTransportThread_setUPlusOneModeForSessionID:(id)arg1 isUPlusOneEnabled:(_Bool)arg2;	// IMP=0x00100000005e87c0
- (void)onTransportThread_updateSessionURIToParticipantIDs:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionInfo:(id)arg4;	// IMP=0x00100000005e86e0
- (void)onTransportThread_updateSessionParticipants:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 participants:(id)arg4;	// IMP=0x00100000005e8600
- (void)onTransportThread_getSessionInfo:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 options:(id)arg4;	// IMP=0x00100000005e8520
- (void)onTransportThread_setRemoteDeviceVersion:(id)arg1 version:(unsigned int)arg2;	// IMP=0x00100000005e84b0
- (void)onTransportThread_removeParticipantIDsWithSessionID:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 participantIDs:(id)arg4 sessionStateCounter:(unsigned int)arg5;	// IMP=0x00100000005e83d0
- (void)onTransportThread_manageDesignatedDestinationsWithSessionID:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 destinations:(id)arg4 withType:(unsigned short)arg5 sessionStateCounter:(unsigned int)arg6;	// IMP=0x00100000005e82d0
- (unsigned long long)onTransportThread_getLinkType:(id)arg1;	// IMP=0x00100000005e8270
- (void)onTransportThread_sendStatsRequestWithOptions:(id)arg1 options:(id)arg2;	// IMP=0x00100000005e81e0
- (void)onTransportThread_flushLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x00100000005e8150
- (void)onTransportThread_queryLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x00100000005e80c0
- (void)onTransportThread_stopLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x00100000005e8030
- (void)onTransportThread_startLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x00100000005e7fa0
- (void)onTransportThread_CurrentCellularSignalStrength:(id)arg1 signalRaw:(int *)arg2 signalStrength:(int *)arg3 signalGrade:(int *)arg4;	// IMP=0x00100000005e7eb0
- (void)onTransportThread_receiveJoinNotificationFromAParticipant:(id)arg1;	// IMP=0x00100000005e7e50
- (void)onTransportThread_setWiFiAssistState:(id)arg1 isWiFiAssistEnabled:(_Bool)arg2;	// IMP=0x00100000005e7de0
- (void)onTransportThread_StopKeepAlive:(id)arg1 linkIDs:(id)arg2;	// IMP=0x00100000005e7d50
- (void)onTransportThread_UpdateProtocolQualityOfService:(id)arg1 linkID:(BOOL)arg2 isGood:(_Bool)arg3;	// IMP=0x00100000005e7cd0
- (void)onTransportThread_DropIPPackets:(id)arg1 linkID:(BOOL)arg2 payloadArray:(id)arg3;	// IMP=0x00100000005e7c30
- (void)onTransportThread_SetPacketNotificationFilter:(id)arg1 linkID:(BOOL)arg2 uniqueTag:(unsigned int)arg3 isEnabled:(_Bool)arg4;	// IMP=0x00100000005e7ba0
- (void)onTransportThread_SetDefaultUnderlyingLink:(id)arg1 linkID:(BOOL)arg2;	// IMP=0x00100000005e7b30
- (void)onTransportThread_requestMaterialsForSession:(id)arg1 participantIDs:(id)arg2 materialType:(int)arg3;	// IMP=0x00100000005e7a90
- (void)onTransportThread_setServerDesiredMaterialsForSession:(id)arg1 materials:(id)arg2 signer:(CDUnknownBlockType)arg3;	// IMP=0x00100000005e79e0
- (void)onTransportThread_SendKeyMaterialMessage:(id)arg1 relayGroupID:(id)arg2 keyMaterialMessageData:(id)arg3 destinationURIs:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000005e78d0
- (void)onTransportThread_SendSKEData:(id)arg1 skeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000005e7820
- (void)getLinkInformationForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005e75e0
- (void)handleAllocateRequestFailureForDevice:(id)arg1 requestID:(id)arg2 errorCode:(int)arg3;	// IMP=0x00100000005e7450
- (void)setTimeBase:(id)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000005e72e0
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000005e71b0
- (void)setAcceptedRelaySession:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;	// IMP=0x00100000005e6fe0
- (void)disconnectGlobalLinkForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005e6d70
- (void)connectGlobalLinkForDevice:(id)arg1 sessionInfo:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3 withLocalInterfacePreference:(int)arg4;	// IMP=0x00100000005e6aa0
- (void)startGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000005e6970
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBufferArray:(struct **)arg2 arraySize:(int)arg3;	// IMP=0x00100000005e6870
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBuffer:(CDStruct_4a5a3501 *)arg2;	// IMP=0x00100000005e67d0
- (void)stopGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000005e6430
- (void)startConnectionForDevice:(id)arg1 isInitiator:(_Bool)arg2 remotePartyID:(id)arg3 useStunMICheck:(_Bool)arg4;	// IMP=0x00100000005e6260
- (void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000005e6080
- (void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000005e5ea0
- (void)stopUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000005e5b00
- (void)startUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000005e59d0
- (void)releasePortIfNecessary:(struct IDSPortMap *)arg1 port:(unsigned short)arg2;	// IMP=0x00100000005e58b0
- (void)resumeSocketWithOptions:(id)arg1 shouldLogCall:(_Bool)arg2;	// IMP=0x00100000005e5000
- (void)suspendSocketWithOptions:(id)arg1;	// IMP=0x00100000005e4a70
- (void)checkSuspendTrafficForDevice:(id)arg1 wait:(_Bool)arg2;	// IMP=0x00100000005e4660
- (void)doCheckSuspendTrafficForDevice:(id)arg1;	// IMP=0x00100000005e3f70
- (void)closeSocketWithOptions:(id)arg1;	// IMP=0x00100000005e3f10
- (void)closeSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000005e31d0
- (void)cleanupSocketsForClient:(id)arg1;	// IMP=0x00100000005e2020
- (void)openSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000005dfdc0
- (void)prepareDefaultPairedConnectionInfoWithDeviceUniqueID:(id)arg1 shouldUseIPsecLink:(_Bool)arg2;	// IMP=0x00100000005df5c0
- (id)_prepareConnectionInfoWithCBUUID:(id)arg1 deviceUniqueID:(id)arg2 shouldUseIPsecLink:(_Bool)arg3 identityPair:(id)arg4 remoteDeviceEncryptionInfo:(id)arg5;	// IMP=0x00100000005df350
- (id)defaultPairedDeviceIdentityPair;	// IMP=0x00100000005df2f0
- (void)closeDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x00100000005deae0
- (void)setupDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x00100000005db7a0
- (id)controlChannelVersionForCbuuid:(id)arg1;	// IMP=0x00100000005db6e0
- (void)receiveControlChannelMessage:(id)arg1 fromCbuuid:(id)arg2 deviceUniqueID:(id)arg3;	// IMP=0x00100000005d0150
- (id)stringComponentsForServiceConnectorService:(id)arg1;	// IMP=0x00100000005d00d0
- (void)startCompressionForConnection:(id)arg1 deviceConnectionInfo:(id)arg2;	// IMP=0x00100000005ceff0
- (int)processCompressionResponse:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000005cd520
- (int)processCompressionRequest:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000005cb430
- (void)internalOpenSocketWithDestination:(id)arg1 localSA:(id)arg2 remoteSA:(id)arg3 protocol:(int)arg4 trafficClass:(int)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000005ca730
- (_Bool)handleIncomingPacket:(CDStruct_4a5a3501 *)arg1 fromDeviceToken:(id)arg2;	// IMP=0x00100000005c6a30
- (void)resetAllConnectionsForDevice:(id)arg1;	// IMP=0x00100000005c6680
- (void)removeConnection:(id)arg1 fromDeviceConnectionInfo:(id)arg2 removeCode:(long long)arg3 removeReason:(id)arg4;	// IMP=0x00100000005c5ce0
- (id)initWithName:(id)arg1 address:(id)arg2 andTestTransport:(id)arg3;	// IMP=0x00100000005c5c40
- (void)resetUTunTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000005c5630
- (void)resetIPsecTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000005c5440
- (void)resetTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000005c5380
- (void)startControlChannelWithDevice:(id)arg1 endpoint:(id)arg2;	// IMP=0x00100000005c3870
- (void)didConnectControlChannelForDeviceConnectionInfo:(id)arg1 connection:(id)arg2 error:(id)arg3;	// IMP=0x00100000005c2270
- (void)prepareControlChannelForDeviceConnectionInfo:(id)arg1 genericConnection:(id)arg2;	// IMP=0x00100000005c20c0
- (void)internalStartConnectionWithEndpoint:(id)arg1 service:(const char *)arg2 parameters:(id)arg3 serviceConnector:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000005c16c0
- (id)init;	// IMP=0x00100000005c1090
- (id)setupNewDeviceConnectionInfoForCbuuid:(id)arg1 deviceUniqueID:(id)arg2 identityPair:(id)arg3 remoteDeviceEncryptionInfo:(id)arg4 shouldUseIPsecLink:(_Bool)arg5;	// IMP=0x00100000005bf530
- (_Bool)setupIPsecLinkForDeviceConnectionInfo:(id)arg1;	// IMP=0x00100000005bf210
- (void)startDataChannelWithDevice:(id)arg1 genericConnection:(id)arg2 serviceConnectorService:(id)arg3 endpoint:(id)arg4;	// IMP=0x00100000005b69c0
- (_Bool)setupUTunForDeviceConnectionInfo:(id)arg1;	// IMP=0x00100000005b60f0
- (unsigned char)handleUtunChannelWrite:(id)arg1 source:(struct sockaddr *)arg2 destination:(struct sockaddr *)arg3 upperProtocol:(unsigned char)arg4 bytes:(const void *)arg5 bytesLen:(unsigned long long)arg6;	// IMP=0x00100000005b6080
- (void)handleUtunChannelRead:(id)arg1 limit:(unsigned int)arg2;	// IMP=0x00100000005b6030
- (void)handleIPPayload:(const void *)arg1 bytesLength:(unsigned long long)arg2 source:(struct sockaddr *)arg3 destination:(struct sockaddr *)arg4 upperProtocol:(unsigned char)arg5 forDeviceConnectionInfo:(id)arg6 flush:(_Bool)arg7 callerShouldStop:(_Bool *)arg8;	// IMP=0x00100000005b5fc0
- (void)_getStallDetectorForConnection:(id)arg1 deviceConnecionInfo:(id)arg2;	// IMP=0x00100000005b5890
- (void)_reloadSettings;	// IMP=0x00100000005b5880
- (void)reloadSettings;	// IMP=0x00100000005b3280

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

