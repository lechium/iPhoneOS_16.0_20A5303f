//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSError, NSMapTable, NSMutableArray, SQLiteConnectionOptions;
@protocol SQLiteConnectionDelegate;

@interface SQLiteConnection : NSObject
{
    NSMutableArray *_afterTransactionBlocks;	// 8 = 0x8
    struct sqlite3 *_database;	// 16 = 0x10
    id <SQLiteConnectionDelegate> _delegate;	// 24 = 0x18
    _Bool _didResetForCorruption;	// 32 = 0x20
    NSMapTable *_preparedStatements;	// 40 = 0x28
    long long _transactionDepth;	// 48 = 0x30
    _Bool _transactionWantsRollback;	// 56 = 0x38
    SQLiteConnectionOptions *_options;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x002000000008d4da
@property(readonly, copy, nonatomic) SQLiteConnectionOptions *options; // @synthesize options=_options;
@property(nonatomic) __weak id <SQLiteConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_verifiedStatementForSQL:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008d322
- (id)_verifiedStatementForPreparedStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008d16e
- (id)_statementForPreparedStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008d04f
- (_Bool)_resetAfterIOError;	// IMP=0x001000000008cd76
- (_Bool)_resetAfterCorruptionError;	// IMP=0x001000000008cd08
- (id)_prepareStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008cb32
- (_Bool)_performResetAfterCorruptionError;	// IMP=0x001000000008c8c5
- (_Bool)_open;	// IMP=0x001000000008c7df
- (void)_flushAfterTransactionBlocks;	// IMP=0x001000000008c613
- (void)_finalizeAllStatements;	// IMP=0x001000000008c494
- (_Bool)_executeWithError:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000008c241
- (_Bool)_executeStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008c180
- (_Bool);	// IMP=0x001000000008c11f
- (_Bool)executeWithError:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000008c10d
@property(readonly, copy, nonatomic) NSError *currentError;
- (_Bool)tableExists:(id)arg1;	// IMP=0x001000000008bf80
- (_Bool)truncate;	// IMP=0x001000000008bef8
- (id)prepareStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008bdb1
- (void)performTransaction:(CDUnknownBlockType)arg1;	// IMP=0x001000000008bc07
- (_Bool)performSavepoint:(CDUnknownBlockType)arg1;	// IMP=0x001000000008b9e3
- (_Bool)open;	// IMP=0x001000000008b9d1
@property(readonly, nonatomic) long long lastChangeCount;
- (_Bool)finalizePreparedStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008b88d
- (_Bool)executeStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;	// IMP=0x001000000008b6f2
- (_Bool)executeStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008b6dd
- (void)executeQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;	// IMP=0x001000000008b546
- (_Bool)executePreparedStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;	// IMP=0x001000000008b42f
- (_Bool)executePreparedStatement:(id)arg1 error:(id *)arg2;	// IMP=0x001000000008b41a
- (void)executePreparedQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;	// IMP=0x001000000008b2e8
- (void)dispatchAfterTransaction:(CDUnknownBlockType)arg1;	// IMP=0x001000000008b23a
- (_Bool)close;	// IMP=0x001000000008b228
- (void)dealloc;	// IMP=0x001000000008b133
- (id)initWithOptions:(id)arg1;	// IMP=0x001000000008b08c

@end

