//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PrototypeTools/PTSettings.h>

@class SBFAnimationSettings, SBFFluidBehaviorSettings;

@interface PUIDPointerSettings : PTSettings
{
    _Bool _shouldPeriodicallyRefreshClientTransform;	// 8 = 0x8
    _Bool _underlappingContentAllowed;	// 9 = 0x9
    _Bool _shouldRecenterOnButtonDown;	// 10 = 0xa
    _Bool _shouldRecenterAfterLiftingFinger;	// 11 = 0xb
    _Bool _shouldRecenterAfterDelayOnMouseMovement;	// 12 = 0xc
    _Bool _decelerationEnabled;	// 13 = 0xd
    _Bool _decelerationTargetLookupEnabled;	// 14 = 0xe
    _Bool _pointerSlipEnabled;	// 15 = 0xf
    _Bool _allowPositionToPositionAnimations;	// 16 = 0x10
    _Bool _showDebugColors;	// 17 = 0x11
    double _systemPointerSize;	// 24 = 0x18
    double _axLargeSystemPointerCenterDotSize;	// 32 = 0x20
    double _systemPointerPressedScale;	// 40 = 0x28
    double _tapToClickButtonDownTime;	// 48 = 0x30
    double _periodicClientTransformRefreshInterval;	// 56 = 0x38
    double _delayBeforeRecenteringAfterMouseMovement;	// 64 = 0x40
    double _underlayingPointerPressedScaleFactor;	// 72 = 0x48
    double _specularStandardLongestSideBaseMultiplier;	// 80 = 0x50
    double _specularStandardOpacityMultiplier;	// 88 = 0x58
    double _specularProminentLongestSideBaseMultiplier;	// 96 = 0x60
    double _specularProminentOpacityMultiplier;	// 104 = 0x68
    double _minimumVelocityThresholdForDeceleration;	// 112 = 0x70
    double _pointerVelocitySmoothingWeight;	// 120 = 0x78
    double _decelerationTargetLookupResolution;	// 128 = 0x80
    double _decelerationTargetLookupRadius;	// 136 = 0x88
    double _decelerationTargetLookupConeAngleInDegrees;	// 144 = 0x90
    double _systemInteractionsDecelerationTargetLookupRadius;	// 152 = 0x98
    double _minimumVelocityThresholdForExpandedDecelerationLookup;	// 160 = 0xa0
    double _customMorphInitialVelocityProgressMultiplier;	// 168 = 0xa8
    SBFFluidBehaviorSettings *_customShapeMorphAnimationSettings;	// 176 = 0xb0
    double _velocityThresholdForClientInteraction;	// 184 = 0xb8
    double _durationToAverageVelocityForClientInteractionThreshold;	// 192 = 0xc0
    double _automaticRegionExitDelayInterval;	// 200 = 0xc8
    double _rampingMinimumSlipThreshold;	// 208 = 0xd0
    SBFFluidBehaviorSettings *_standardShapeAnimationSettings;	// 216 = 0xd8
    SBFFluidBehaviorSettings *_systemPointerPositionAnimationSettings;	// 224 = 0xe0
    SBFFluidBehaviorSettings *_systemPointerPositionHighQualityFrequencyAnimationSettings;	// 232 = 0xe8
    SBFFluidBehaviorSettings *_focusedContentPositionAnimationSettings;	// 240 = 0xf0
    SBFFluidBehaviorSettings *_focusedPointerPositionAnimationSettings;	// 248 = 0xf8
    SBFFluidBehaviorSettings *_textContentPointerPositionAnimationSettings;	// 256 = 0x100
    SBFFluidBehaviorSettings *_rampingExitAnimationSettings;	// 264 = 0x108
    SBFFluidBehaviorSettings *_zTransitionOpacityAnimationSettings;	// 272 = 0x110
    SBFFluidBehaviorSettings *_specularOpacityAnimationSettings;	// 280 = 0x118
    SBFFluidBehaviorSettings *_pressedScaleAnimationSettings;	// 288 = 0x120
    SBFFluidBehaviorSettings *_materialTransitionAnimationSettings;	// 296 = 0x128
    SBFAnimationSettings *_recenteringAnimationSettings;	// 304 = 0x130
    SBFAnimationSettings *_mouseRecenteringAnimationSettings;	// 312 = 0x138
    double _visibleToHiddenPointerScale;	// 320 = 0x140
    double _visibleToHiddenPointerBlurRadius;	// 328 = 0x148
    double _hiddenToVisiblePointerScale;	// 336 = 0x150
    double _hiddenToVisiblePointerBlurRadius;	// 344 = 0x158
    double _delayBeforeUnhidingOnTrackpadTouchDown;	// 352 = 0x160
    double _autohideDurationForSystemPointer;	// 360 = 0x168
    double _autohideDurationForFocusedPointer;	// 368 = 0x170
    double _autohideDurationForSystemPointerMouse;	// 376 = 0x178
    double _autohideDurationForFocusedPointerMouse;	// 384 = 0x180
    SBFFluidBehaviorSettings *_visibleToHiddenAnimationSettings;	// 392 = 0x188
    SBFFluidBehaviorSettings *_visibleToHiddenScaleAnimationSettings;	// 400 = 0x190
    SBFFluidBehaviorSettings *_hiddenToVisibleAnimationSettings;	// 408 = 0x198
    SBFFluidBehaviorSettings *_hiddenToVisibleScaleAnimationSettings;	// 416 = 0x1a0
    SBFFluidBehaviorSettings *_visibleIntensityAnimationSettings;	// 424 = 0x1a8
    double _flexibleRectIntensityReductionRange;	// 432 = 0x1b0
    double _minFlexibleRectLightLuminanceIntensity;	// 440 = 0x1b8
    double _minFlexibleRectDarkLuminanceIntensity;	// 448 = 0x1c0
    double _positionToPositionAnimationThreshold;	// 456 = 0x1c8
    SBFFluidBehaviorSettings *_pointerAccessoryAnimationSettings;	// 464 = 0x1d0
}

+ (id)settingsControllerModule;	// IMP=0x0040000000017b41
- (void).cxx_destruct;	// IMP=0x002000000001a903
@property(nonatomic) _Bool showDebugColors; // @synthesize showDebugColors=_showDebugColors;
@property(retain, nonatomic) SBFFluidBehaviorSettings *pointerAccessoryAnimationSettings; // @synthesize pointerAccessoryAnimationSettings=_pointerAccessoryAnimationSettings;
@property(nonatomic) double positionToPositionAnimationThreshold; // @synthesize positionToPositionAnimationThreshold=_positionToPositionAnimationThreshold;
@property(nonatomic) _Bool allowPositionToPositionAnimations; // @synthesize allowPositionToPositionAnimations=_allowPositionToPositionAnimations;
@property(nonatomic) double minFlexibleRectDarkLuminanceIntensity; // @synthesize minFlexibleRectDarkLuminanceIntensity=_minFlexibleRectDarkLuminanceIntensity;
@property(nonatomic) double minFlexibleRectLightLuminanceIntensity; // @synthesize minFlexibleRectLightLuminanceIntensity=_minFlexibleRectLightLuminanceIntensity;
@property(nonatomic) double flexibleRectIntensityReductionRange; // @synthesize flexibleRectIntensityReductionRange=_flexibleRectIntensityReductionRange;
@property(retain, nonatomic) SBFFluidBehaviorSettings *visibleIntensityAnimationSettings; // @synthesize visibleIntensityAnimationSettings=_visibleIntensityAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *hiddenToVisibleScaleAnimationSettings; // @synthesize hiddenToVisibleScaleAnimationSettings=_hiddenToVisibleScaleAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *hiddenToVisibleAnimationSettings; // @synthesize hiddenToVisibleAnimationSettings=_hiddenToVisibleAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *visibleToHiddenScaleAnimationSettings; // @synthesize visibleToHiddenScaleAnimationSettings=_visibleToHiddenScaleAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *visibleToHiddenAnimationSettings; // @synthesize visibleToHiddenAnimationSettings=_visibleToHiddenAnimationSettings;
@property(nonatomic) double autohideDurationForFocusedPointerMouse; // @synthesize autohideDurationForFocusedPointerMouse=_autohideDurationForFocusedPointerMouse;
@property(nonatomic) double autohideDurationForSystemPointerMouse; // @synthesize autohideDurationForSystemPointerMouse=_autohideDurationForSystemPointerMouse;
@property(nonatomic) double autohideDurationForFocusedPointer; // @synthesize autohideDurationForFocusedPointer=_autohideDurationForFocusedPointer;
@property(nonatomic) double autohideDurationForSystemPointer; // @synthesize autohideDurationForSystemPointer=_autohideDurationForSystemPointer;
@property(nonatomic) double delayBeforeUnhidingOnTrackpadTouchDown; // @synthesize delayBeforeUnhidingOnTrackpadTouchDown=_delayBeforeUnhidingOnTrackpadTouchDown;
@property(nonatomic) double hiddenToVisiblePointerBlurRadius; // @synthesize hiddenToVisiblePointerBlurRadius=_hiddenToVisiblePointerBlurRadius;
@property(nonatomic) double hiddenToVisiblePointerScale; // @synthesize hiddenToVisiblePointerScale=_hiddenToVisiblePointerScale;
@property(nonatomic) double visibleToHiddenPointerBlurRadius; // @synthesize visibleToHiddenPointerBlurRadius=_visibleToHiddenPointerBlurRadius;
@property(nonatomic) double visibleToHiddenPointerScale; // @synthesize visibleToHiddenPointerScale=_visibleToHiddenPointerScale;
@property(retain, nonatomic) SBFAnimationSettings *mouseRecenteringAnimationSettings; // @synthesize mouseRecenteringAnimationSettings=_mouseRecenteringAnimationSettings;
@property(retain, nonatomic) SBFAnimationSettings *recenteringAnimationSettings; // @synthesize recenteringAnimationSettings=_recenteringAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *materialTransitionAnimationSettings; // @synthesize materialTransitionAnimationSettings=_materialTransitionAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *pressedScaleAnimationSettings; // @synthesize pressedScaleAnimationSettings=_pressedScaleAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *specularOpacityAnimationSettings; // @synthesize specularOpacityAnimationSettings=_specularOpacityAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *zTransitionOpacityAnimationSettings; // @synthesize zTransitionOpacityAnimationSettings=_zTransitionOpacityAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *rampingExitAnimationSettings; // @synthesize rampingExitAnimationSettings=_rampingExitAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *textContentPointerPositionAnimationSettings; // @synthesize textContentPointerPositionAnimationSettings=_textContentPointerPositionAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *focusedPointerPositionAnimationSettings; // @synthesize focusedPointerPositionAnimationSettings=_focusedPointerPositionAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *focusedContentPositionAnimationSettings; // @synthesize focusedContentPositionAnimationSettings=_focusedContentPositionAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *systemPointerPositionHighQualityFrequencyAnimationSettings; // @synthesize systemPointerPositionHighQualityFrequencyAnimationSettings=_systemPointerPositionHighQualityFrequencyAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *systemPointerPositionAnimationSettings; // @synthesize systemPointerPositionAnimationSettings=_systemPointerPositionAnimationSettings;
@property(retain, nonatomic) SBFFluidBehaviorSettings *standardShapeAnimationSettings; // @synthesize standardShapeAnimationSettings=_standardShapeAnimationSettings;
@property(nonatomic) double rampingMinimumSlipThreshold; // @synthesize rampingMinimumSlipThreshold=_rampingMinimumSlipThreshold;
@property(nonatomic, getter=isPointerSlipEnabled) _Bool pointerSlipEnabled; // @synthesize pointerSlipEnabled=_pointerSlipEnabled;
@property(nonatomic) double automaticRegionExitDelayInterval; // @synthesize automaticRegionExitDelayInterval=_automaticRegionExitDelayInterval;
@property(nonatomic) double durationToAverageVelocityForClientInteractionThreshold; // @synthesize durationToAverageVelocityForClientInteractionThreshold=_durationToAverageVelocityForClientInteractionThreshold;
@property(nonatomic) double velocityThresholdForClientInteraction; // @synthesize velocityThresholdForClientInteraction=_velocityThresholdForClientInteraction;
@property(retain, nonatomic) SBFFluidBehaviorSettings *customShapeMorphAnimationSettings; // @synthesize customShapeMorphAnimationSettings=_customShapeMorphAnimationSettings;
@property(nonatomic) double customMorphInitialVelocityProgressMultiplier; // @synthesize customMorphInitialVelocityProgressMultiplier=_customMorphInitialVelocityProgressMultiplier;
@property(nonatomic) double minimumVelocityThresholdForExpandedDecelerationLookup; // @synthesize minimumVelocityThresholdForExpandedDecelerationLookup=_minimumVelocityThresholdForExpandedDecelerationLookup;
@property(nonatomic) double systemInteractionsDecelerationTargetLookupRadius; // @synthesize systemInteractionsDecelerationTargetLookupRadius=_systemInteractionsDecelerationTargetLookupRadius;
@property(nonatomic) double decelerationTargetLookupConeAngleInDegrees; // @synthesize decelerationTargetLookupConeAngleInDegrees=_decelerationTargetLookupConeAngleInDegrees;
@property(nonatomic) double decelerationTargetLookupRadius; // @synthesize decelerationTargetLookupRadius=_decelerationTargetLookupRadius;
@property(nonatomic) double decelerationTargetLookupResolution; // @synthesize decelerationTargetLookupResolution=_decelerationTargetLookupResolution;
@property(nonatomic, getter=isDecelerationTargetLookupEnabled) _Bool decelerationTargetLookupEnabled; // @synthesize decelerationTargetLookupEnabled=_decelerationTargetLookupEnabled;
@property(nonatomic) double pointerVelocitySmoothingWeight; // @synthesize pointerVelocitySmoothingWeight=_pointerVelocitySmoothingWeight;
@property(nonatomic) double minimumVelocityThresholdForDeceleration; // @synthesize minimumVelocityThresholdForDeceleration=_minimumVelocityThresholdForDeceleration;
@property(nonatomic, getter=isDecelerationEnabled) _Bool decelerationEnabled; // @synthesize decelerationEnabled=_decelerationEnabled;
@property(nonatomic) double specularProminentOpacityMultiplier; // @synthesize specularProminentOpacityMultiplier=_specularProminentOpacityMultiplier;
@property(nonatomic) double specularProminentLongestSideBaseMultiplier; // @synthesize specularProminentLongestSideBaseMultiplier=_specularProminentLongestSideBaseMultiplier;
@property(nonatomic) double specularStandardOpacityMultiplier; // @synthesize specularStandardOpacityMultiplier=_specularStandardOpacityMultiplier;
@property(nonatomic) double specularStandardLongestSideBaseMultiplier; // @synthesize specularStandardLongestSideBaseMultiplier=_specularStandardLongestSideBaseMultiplier;
@property(nonatomic) double underlayingPointerPressedScaleFactor; // @synthesize underlayingPointerPressedScaleFactor=_underlayingPointerPressedScaleFactor;
@property(nonatomic) double delayBeforeRecenteringAfterMouseMovement; // @synthesize delayBeforeRecenteringAfterMouseMovement=_delayBeforeRecenteringAfterMouseMovement;
@property(nonatomic) _Bool shouldRecenterAfterDelayOnMouseMovement; // @synthesize shouldRecenterAfterDelayOnMouseMovement=_shouldRecenterAfterDelayOnMouseMovement;
@property(nonatomic) _Bool shouldRecenterAfterLiftingFinger; // @synthesize shouldRecenterAfterLiftingFinger=_shouldRecenterAfterLiftingFinger;
@property(nonatomic) _Bool shouldRecenterOnButtonDown; // @synthesize shouldRecenterOnButtonDown=_shouldRecenterOnButtonDown;
@property(nonatomic, getter=isUnderlappingContentAllowed) _Bool underlappingContentAllowed; // @synthesize underlappingContentAllowed=_underlappingContentAllowed;
@property(nonatomic) double periodicClientTransformRefreshInterval; // @synthesize periodicClientTransformRefreshInterval=_periodicClientTransformRefreshInterval;
@property(nonatomic) _Bool shouldPeriodicallyRefreshClientTransform; // @synthesize shouldPeriodicallyRefreshClientTransform=_shouldPeriodicallyRefreshClientTransform;
@property(nonatomic) double tapToClickButtonDownTime; // @synthesize tapToClickButtonDownTime=_tapToClickButtonDownTime;
@property(nonatomic) double systemPointerPressedScale; // @synthesize systemPointerPressedScale=_systemPointerPressedScale;
@property(nonatomic) double axLargeSystemPointerCenterDotSize; // @synthesize axLargeSystemPointerCenterDotSize=_axLargeSystemPointerCenterDotSize;
@property(nonatomic) double systemPointerSize; // @synthesize systemPointerSize=_systemPointerSize;
- (void)setDefaultValues;	// IMP=0x0010000000016afa

@end

