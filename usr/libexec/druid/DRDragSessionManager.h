//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DRDispatchTimer, DRKeyboardArbiter, DRLockObserver, DRSystemConnection, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, NSXPCListener;
@protocol DRDragSessionManagerDelegate, OS_dispatch_queue;

@interface DRDragSessionManager : NSObject
{
    unsigned int _lastSessionIdentifier;	// 8 = 0x8
    id <DRDragSessionManagerDelegate> _delegate;	// 16 = 0x10
    NSMutableArray *_dragSessions;	// 24 = 0x18
    NSHashTable *_keyboardSessions;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_xpcQueue;	// 40 = 0x28
    NSXPCListener *_sourceListener;	// 48 = 0x30
    NSXPCListener *;	// 56 = 0x38
    DRSystemConnection *_systemConnection;	// 64 = 0x40
    DRKeyboardArbiter *_keyboardArbiter;	// 72 = 0x48
    DRLockObserver *_lockObserver;	// 80 = 0x50
    NSMutableDictionary *_touchStreamsByDisplayIdentifier;	// 88 = 0x58
    DRDispatchTimer *_pointerWatchdogTimer;	// 96 = 0x60
    NSMutableDictionary *_pointerServiceAssertionsByDisplayIdentifier;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_transformUpdateQueue;	// 112 = 0x70
}

+ (id)sharedSessionManager;	// IMP=0x0020000000025154
- (void).cxx_destruct;	// IMP=0x002000000002fb52
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *transformUpdateQueue; // @synthesize transformUpdateQueue=_transformUpdateQueue;
@property(readonly, nonatomic) NSMutableDictionary *pointerServiceAssertionsByDisplayIdentifier; // @synthesize pointerServiceAssertionsByDisplayIdentifier=_pointerServiceAssertionsByDisplayIdentifier;
@property(readonly, nonatomic) DRDispatchTimer *pointerWatchdogTimer; // @synthesize pointerWatchdogTimer=_pointerWatchdogTimer;
@property(readonly, nonatomic) NSMutableDictionary *touchStreamsByDisplayIdentifier; // @synthesize touchStreamsByDisplayIdentifier=_touchStreamsByDisplayIdentifier;
@property(readonly, nonatomic) DRLockObserver *lockObserver; // @synthesize lockObserver=_lockObserver;
@property(readonly, nonatomic) DRKeyboardArbiter *keyboardArbiter; // @synthesize keyboardArbiter=_keyboardArbiter;
@property(readonly, nonatomic) DRSystemConnection *systemConnection; // @synthesize systemConnection=_systemConnection;
@property(readonly, nonatomic) NSXPCListener *destinationListener; // @synthesize destinationListener=_destinationListener;
@property(readonly, nonatomic) NSXPCListener *sourceListener; // @synthesize sourceListener=_sourceListener;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *xpcQueue; // @synthesize xpcQueue=_xpcQueue;
@property(readonly, nonatomic) NSHashTable *keyboardSessions; // @synthesize keyboardSessions=_keyboardSessions;
@property(readonly, nonatomic) unsigned int lastSessionIdentifier; // @synthesize lastSessionIdentifier=_lastSessionIdentifier;
@property(readonly, nonatomic) NSMutableArray *dragSessions; // @synthesize dragSessions=_dragSessions;
@property(nonatomic) __weak id <DRDragSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_getTransformForContextID:(unsigned int)arg1 layerRenderID:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000002f6e7
- (_Bool)_addBeginningTouchesToExistingSessions:(id)arg1 viewController:(id)arg2 touchWindow:(id)arg3;	// IMP=0x001000000002eb05
- (id)_filterTouchesForPointer:(id)arg1 performingBlockForPointerTouch:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e91e
- (void)_forEachTouch:(id)arg1 performBlockForSession:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e39a
- (void)_cancelAllDragSessions;	// IMP=0x001000000002e222
- (void)touchTrackingWindow:(id)arg1 touchesCancelled:(id)arg2;	// IMP=0x001000000002da38
- (void)touchTrackingWindow:(id)arg1 touchesEnded:(id)arg2 pairedWithVelocities:(id)arg3;	// IMP=0x001000000002ce8a
- (void)touchTrackingWindow:(id)arg1 touchesMoved:(id)arg2;	// IMP=0x001000000002cb55
- (void)touchTrackingWindow:(id)arg1 touchesBegan:(id)arg2;	// IMP=0x001000000002c4c0
- (void)dragSession:(id)arg1 enableKeyboardIfNeeded:(_Bool)arg2;	// IMP=0x001000000002c004
- (void)dragSessionDidEnd:(id)arg1;	// IMP=0x001000000002be78
- (void)dragSessionWillEnd:(id)arg1;	// IMP=0x001000000002bd43
- (void)dragSessionAnimateOutVisibleItems:(id)arg1;	// IMP=0x001000000002bc10
- (void)dragSession:(id)arg1 moveToLocation:(struct CGPoint)arg2;	// IMP=0x001000000002babe
- (void)dragSession:(id)arg1 removeVisibleDroppedItemsInSpaceOfContextID:(unsigned int)arg2 layerRenderID:(unsigned long long)arg3 replyingOnQueue:(id)arg4 with:(CDUnknownBlockType)arg5;	// IMP=0x001000000002b5ed
- (void)dragSession:(id)arg1 findVisibleDroppedItemsReplyingOnQueue:(id)arg2 with:(CDUnknownBlockType)arg3;	// IMP=0x001000000002b2e9
- (_Bool)dragSession:(id)arg1 destinationIsSystemConnection:(int)arg2;	// IMP=0x001000000002b2c4
- (void)resetDestinationClientForDragSession:(id)arg1;	// IMP=0x001000000002b08d
- (void)dragSession:(id)arg1 updatedPotentialDrop:(id)arg2 forDestinationClient:(id)arg3;	// IMP=0x001000000002aeb3
- (void)dragSession:(id)arg1 addedItemCount:(unsigned long long)arg2;	// IMP=0x001000000002ab76
- (void)dragSession:(id)arg1 invalidateImageForClient:(id)arg2 itemIndex:(unsigned long long)arg3;	// IMP=0x001000000002a9c6
- (void)dragSession:(id)arg1 updateDragItems:(id)arg2 forClient:(id)arg3 withFence:(id)arg4;	// IMP=0x0010000000029f68
- (id)windowForDisplayIdentifier:(id)arg1;	// IMP=0x0010000000029ee5
- (id)allWindowContextIdsForDragSession:(id)arg1;	// IMP=0x0010000000029c78
- (oneway void)sawFirstDragEventWithSessionID:(unsigned int)arg1 systemPolicy:(_Bool)arg2 destination:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000002940d
- (void)teardownPortalViewsForDragSessionOriginatingFromViewController:(id)arg1;	// IMP=0x00100000000291c1
- (void)configurePortalViewsForDragSessionOriginatingFromViewController:(id)arg1;	// IMP=0x0010000000028df7
- (oneway void)beginDragWithClientSession:(id)arg1 configuration:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000027db9
- (oneway void)warmUp;	// IMP=0x0010000000027ceb
- (void)_pointerBeganWatchdogFired;	// IMP=0x0010000000027c51
- (void)_cancelPointerBeganWatchdog;	// IMP=0x0010000000027beb
- (id)xpcQueue_pointerDragSessionForEvents;	// IMP=0x0010000000027a54
- (_Bool)xpcQueue_hasTouchBasedDragSessionForEventsForDisplayIdentifier:(id)arg1;	// IMP=0x00100000000277e8
- (id)xpcQueue_accessibilityDragSessionForEvents;	// IMP=0x0010000000027661
- (void)xpcQueue_validateTouchStreamForDragSession:(id)arg1;	// IMP=0x00100000000266ca
- (void)xpcQueue_removeDragSession:(id)arg1;	// IMP=0x0010000000026586
- (void)xpcQueue_addDragSession:(id)arg1;	// IMP=0x0010000000026471
- (void)xpcQueue_acceptNewDestinationConnection:(id)arg1;	// IMP=0x0010000000025f3f
- (_Bool)xpcQueue_shouldAcceptNewDestinationConnection:(id)arg1;	// IMP=0x0010000000025e73
- (_Bool)xpcQueue_canAcceptDestinationConnection:(id)arg1;	// IMP=0x0010000000025e30
- (void)xpcQueue_acceptNewSourceConnection:(id)arg1;	// IMP=0x0010000000025865
- (_Bool)xpcQueue_shouldAcceptNewSourceConnection:(id)arg1;	// IMP=0x0010000000025799
- (_Bool)xpcQueue_canCreateNewDragSessionWithSourceConnection:(id)arg1;	// IMP=0x0010000000025756
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000000256dc
- (void)requestImagesForSessionID:(unsigned int)arg1 client:(id)arg2 itemIndexSet:(id)arg3;	// IMP=0x001000000002554a
- (void)startup;	// IMP=0x00100000000253cd
- (id)init;	// IMP=0x00100000000251a9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

