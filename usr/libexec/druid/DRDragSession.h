//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DRDataTransferSession, DRDispatchTimer, DRTouchTrackingWindow, DRVirtualHIDService, NSMapTable, NSMutableArray, NSMutableSet, NSSet, NSString, NSXPCConnection, NSXPCListenerEndpoint, PBItemCollection, RBSAssertion, UIDraggingSystemTouchRoutingPolicy, UIWindow, _DUIPotentialDrop;
@protocol DRDragSessionDelegate, OS_dispatch_queue, _DUIClientSessionAccessibility, _DUIClientSessionCommon, _DUIClientSessionSource;

@interface DRDragSession : NSObject
{
    NSObject<OS_dispatch_queue> *_xpcQueue;	// 8 = 0x8
    NSMutableSet *_touchIDs;	// 16 = 0x10
    NSMutableSet *_endedTouchIDs;	// 24 = 0x18
    UIDraggingSystemTouchRoutingPolicy *_routingPolicy;	// 32 = 0x20
    UIDraggingSystemTouchRoutingPolicy *_systemRoutingPolicy;	// 40 = 0x28
    DRDispatchTimer *_touchWatchdogTimer;	// 48 = 0x30
    unsigned long long _pendingTouchUpObservationCount;	// 56 = 0x38
    _Bool _pendingDisplayTransitionLift;	// 64 = 0x40
    NSMutableArray *_dragItems;	// 72 = 0x48
    RBSAssertion *_sourceKeepAliveAssertion;	// 80 = 0x50
    _Bool _receivedOutsideAppSourceOperationMask;	// 88 = 0x58
    NSMapTable *_connectionToDestinationMap;	// 96 = 0x60
    RBSAssertion *_destinationKeepAliveAssertion;	// 104 = 0x68
    NSMutableArray *_pendingMaskBlocks;	// 112 = 0x70
    _DUIPotentialDrop *_lastPotentialDrop;	// 120 = 0x78
    id <_DUIClientSessionCommon> _lastPotentialDropDestinationClient;	// 128 = 0x80
    int _lastPotentialDropProcessIdentifier;	// 136 = 0x88
    _Bool _lastPotentialDropWasFromSourceApp;	// 140 = 0x8c
    _Bool _isSystemCommandeered;	// 141 = 0x8d
    _Bool _isLegacyMedusaPolicyDrag;	// 142 = 0x8e
    unsigned int _mainWindowContextId;	// 144 = 0x90
    PBItemCollection *_itemCollection;	// 152 = 0x98
    NSXPCListenerEndpoint *_dataProviderEndpoint;	// 160 = 0xa0
    DRDataTransferSession *_pendingDataTransferSession;	// 168 = 0xa8
    NSXPCConnection *_axConnection;	// 176 = 0xb0
    _Bool _isAnyProcessBeingDebugged;	// 184 = 0xb8
    _Bool _lastTouchEnded;	// 185 = 0xb9
    _Bool _observedLastTouchUp;	// 186 = 0xba
    int _lastTouchUpPID;	// 188 = 0xbc
    _Bool _receivedEndFromDestination;	// 192 = 0xc0
    NSMutableArray *_blocksWaitingForLastTouchAndDestinationToEnd;	// 200 = 0xc8
    DRDispatchTimer *_waitingForDestinationAndTouchObserverTimer;	// 208 = 0xd0
    DRDispatchTimer *_performDropTimeoutTimer;	// 216 = 0xd8
    NSObject<OS_dispatch_queue> *_loaderQueue;	// 224 = 0xe0
    _Bool _supportsSystemDrag;	// 232 = 0xe8
    _Bool _originatedFromAccessibility;	// 233 = 0xe9
    _Bool _originatedFromPointer;	// 234 = 0xea
    unsigned int _identifier;	// 236 = 0xec
    NSXPCConnection *_sourceConnection;	// 240 = 0xf0
    id <_DUIClientSessionSource> _clientSource;	// 248 = 0xf8
    id <DRDragSessionDelegate> _delegate;	// 256 = 0x100
    long long _state;	// 264 = 0x108
    long long _sourceDataOwner;	// 272 = 0x110
    NSString *_sceneIdentifier;	// 280 = 0x118
    DRTouchTrackingWindow *_sourceWindow;	// 288 = 0x120
    UIWindow *_interactionWindow;	// 296 = 0x128
    NSString *_displayIdentifierForSynthesizedTouch;	// 304 = 0x130
    unsigned long long _outsideAppSourceOperationMask;	// 312 = 0x138
    id <_DUIClientSessionAccessibility> _accessibilityProxy;	// 320 = 0x140
    DRVirtualHIDService *_virtualHIDService;	// 328 = 0x148
}

- (void).cxx_destruct;	// IMP=0x002000000001edb2
@property(retain, nonatomic) DRVirtualHIDService *virtualHIDService; // @synthesize virtualHIDService=_virtualHIDService;
@property(readonly, nonatomic) id <_DUIClientSessionAccessibility> accessibilityProxy; // @synthesize accessibilityProxy=_accessibilityProxy;
@property(readonly, nonatomic) _Bool originatedFromPointer; // @synthesize originatedFromPointer=_originatedFromPointer;
@property(readonly, nonatomic) NSXPCConnection *axConnection; // @synthesize axConnection=_axConnection;
@property(readonly, nonatomic) _Bool originatedFromAccessibility; // @synthesize originatedFromAccessibility=_originatedFromAccessibility;
@property(readonly, nonatomic) unsigned long long outsideAppSourceOperationMask; // @synthesize outsideAppSourceOperationMask=_outsideAppSourceOperationMask;
@property(copy, nonatomic) NSString *displayIdentifierForSynthesizedTouch; // @synthesize displayIdentifierForSynthesizedTouch=_displayIdentifierForSynthesizedTouch;
@property(nonatomic) __weak UIWindow *interactionWindow; // @synthesize interactionWindow=_interactionWindow;
@property(nonatomic) __weak DRTouchTrackingWindow *sourceWindow; // @synthesize sourceWindow=_sourceWindow;
@property(readonly, nonatomic) unsigned int mainWindowContextId; // @synthesize mainWindowContextId=_mainWindowContextId;
@property(readonly, nonatomic) NSString *sceneIdentifier; // @synthesize sceneIdentifier=_sceneIdentifier;
@property(readonly, nonatomic) _Bool supportsSystemDrag; // @synthesize supportsSystemDrag=_supportsSystemDrag;
@property(readonly, nonatomic) long long sourceDataOwner; // @synthesize sourceDataOwner=_sourceDataOwner;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(readonly, nonatomic) __weak id <DRDragSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id <_DUIClientSessionSource> clientSource; // @synthesize clientSource=_clientSource;
@property(readonly, nonatomic) NSXPCConnection *sourceConnection; // @synthesize sourceConnection=_sourceConnection;
@property(readonly, nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)_updatePotentialDrop:(id)arg1 forDestinationClient:(id)arg2;	// IMP=0x001000000001e9db
- (void)_updatePotentialDropPreferringFullSizePreview:(_Bool)arg1;	// IMP=0x001000000001e959
- (void)_updateAccessibilityDragStatus;	// IMP=0x001000000001e82f
- (void)_runBlocksWaitingForLastTouchAndDestinationToEnd;	// IMP=0x001000000001e674
- (_Bool)_runBlocksWaitingForLastTouchAndDestinationToEndIfPossible;	// IMP=0x001000000001e601
- (_Bool)_canRunBlocksWaitingForLastTouchAndDestinationToEnd;	// IMP=0x001000000001e5b4
- (void)_performAfterLastTouchAndDestinationBothEnd:(CDUnknownBlockType)arg1;	// IMP=0x001000000001e447
- (void)_receivedEndFromDestinationOnConnection:(id)arg1;	// IMP=0x001000000001e387
- (void)_lastTouchEndedNormally:(_Bool)arg1;	// IMP=0x001000000001e0d7
- (void)_tellDestinationsAboutAddedItemsStartingAtIndex:(unsigned long long)arg1;	// IMP=0x001000000001deba
- (void)_acceptDragPreviews:(id)arg1 fence:(id)arg2 fromClient:(id)arg3;	// IMP=0x001000000001ddf7
- (void)_handleDirtyItems:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000001dbfa
- (void)sendDragEndedWithOperation:(unsigned long long)arg1;	// IMP=0x001000000001d882
- (void)dataTransferSessionFinished:(id)arg1;	// IMP=0x001000000001d752
- (void)_endDragWithOperation:(unsigned long long)arg1 destination:(id)arg2;	// IMP=0x001000000001d4fc
- (void)_logStatisticsForDragEnd:(unsigned long long)arg1 destination:(id)arg2;	// IMP=0x001000000001d312
- (void)_endDragByCancelling;	// IMP=0x001000000001ce9f
- (void)transitionFromState:(long long)arg1 toTerminalState:(long long)arg2;	// IMP=0x001000000001cc10
- (id)takeProcessAssertionOnPID:(int)arg1;	// IMP=0x001000000001c6fd
- (oneway void)loadUserActivityDataForItemAtIndex:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c26f
- (oneway void)loadURLForItemAtIndex:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001bcfd
- (oneway void)surrenderDragSession;	// IMP=0x001000000001bc07
- (oneway void)commandeerDragSession;	// IMP=0x001000000001bb45
- (void)updateRoutingPolicy:(id)arg1;	// IMP=0x001000000001ba8e
- (void)_applyMainWindowExclusionToRoutingPolicy:(id)arg1;	// IMP=0x001000000001b898
- (void)cancelPointerDrag;	// IMP=0x001000000001b78d
- (void)endPointerDrag;	// IMP=0x001000000001b66a
- (void)movePointerDragToPoint:(struct CGPoint)arg1 hidService:(id)arg2;	// IMP=0x001000000001b168
- (void)beganPointerDrag;	// IMP=0x001000000001b07c
- (void)beginPointerDragAtLocationIfNeeded:(struct CGPoint)arg1 hidService:(id)arg2;	// IMP=0x001000000001aeb9
- (oneway void)accessibilityCancel;	// IMP=0x001000000001add3
- (oneway void)accessibilityDrop;	// IMP=0x001000000001acc6
- (oneway void)accessibilityMoveToPoint:(struct CGPoint)arg1;	// IMP=0x001000000001ab2b
- (void)beginAccessibilityDragAtLocationIfNeeded:(struct CGPoint)arg1 hidService:(id)arg2;	// IMP=0x001000000001a967
- (oneway void)requestVisibleItemsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001a583
- (oneway void)enableKeyboardIfNeeded;	// IMP=0x001000000001a4ec
- (oneway void)sawDragEndEvent;	// IMP=0x001000000001a26f
- (void)_performDropOperation:(unsigned long long)arg1 forConnection:(id)arg2;	// IMP=0x0010000000019463
- (_Bool)_isPolicyControlled;	// IMP=0x0010000000019448
- (oneway void)requestDropWithOperation:(unsigned long long)arg1;	// IMP=0x00100000000191e2
- (oneway void)takePotentialDrop:(id)arg1;	// IMP=0x0010000000018f7d
- (oneway void)dirtyDestinationItems:(id)arg1;	// IMP=0x0010000000018df9
- (_Bool)shouldIgnoreRequest:(SEL)arg1 fromDestination:(id)arg2;	// IMP=0x0010000000018b5b
- (oneway void)cancelDrag;	// IMP=0x0010000000018b33
- (oneway void)addItemCollection:(id)arg1 dataProviderEndpoint:(id)arg2;	// IMP=0x0010000000018557
- (oneway void)dragDidExitSourceApp;	// IMP=0x0010000000018434
- (oneway void)dirtySourceItems:(id)arg1;	// IMP=0x0010000000018332
- (oneway void)takeOutsideAppSourceOperationMask:(unsigned long long)arg1 prefersFullSizePreview:(_Bool)arg2;	// IMP=0x001000000001811d
- (id)currentDestination;	// IMP=0x00100000000180ad
- (id)dataTransferSessionForDestination:(id)arg1;	// IMP=0x0010000000017efc
- (id)itemCollectionForDestination:(id)arg1;	// IMP=0x0010000000017e79
- (void)performAfterReceivingOutsideAppSourceOperationMask:(CDUnknownBlockType)arg1;	// IMP=0x0010000000017de2
- (void)destinationConnectionWasInvalidated:(id)arg1;	// IMP=0x0010000000017d96
- (_Bool)addDestination:(id)arg1 onConnection:(id)arg2 systemPolicy:(_Bool)arg3;	// IMP=0x0010000000017a18
- (void)requestImagesForClient:(id)arg1 itemIndexes:(id)arg2;	// IMP=0x00100000000177c7
- (void)sourceConnectionWasInvalidated;	// IMP=0x0010000000017782
- (void)fail;	// IMP=0x0010000000017734
- (void)beginDrag;	// IMP=0x00100000000175d6
- (void)touchUpOccuredForIdentifier:(unsigned int)arg1 detached:(_Bool)arg2 context:(unsigned int)arg3 pid:(int)arg4;	// IMP=0x00100000000173a2
- (void)_cancelDrag;	// IMP=0x00100000000171b0
- (void)_touchWatchdogFired;	// IMP=0x0010000000017142
- (void)_cancelTouchWatchdog;	// IMP=0x00100000000170fb
- (void)_resetTouchWatchdogWithTimeout:(double)arg1;	// IMP=0x00100000000170b4
- (_Bool)_areAllTouchesEndedOrCancelled;	// IMP=0x0010000000017087
- (void)_touchEndedNormally:(_Bool)arg1 withID:(id)arg2;	// IMP=0x0010000000016fd5
- (void)touchCancelledWithID:(id)arg1;	// IMP=0x0000000000016f88
- (void)touchEndedWithID:(id)arg1 likelyMovingOffscreen:(_Bool)arg2;	// IMP=0x0010000000016f27
- (void)touchMovedWithID:(id)arg1;	// IMP=0x0010000000016edc
- (void)touchBeganWithID:(id)arg1;	// IMP=0x0010000000016e91
@property(readonly, nonatomic) UIDraggingSystemTouchRoutingPolicy *routingPolicy;
@property(readonly, nonatomic) NSSet *touchIDs;
- (void)addTouchID:(id)arg1;	// IMP=0x0010000000016cf9
@property(readonly, nonatomic) _Bool synthesizesTouch;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0010000000016b6a
- (void)_updateIsAnyProcessBeingDebuggedWithConnection:(id)arg1;	// IMP=0x0010000000016b04
- (id)initWithIdentifier:(unsigned int)arg1 configuration:(id)arg2 mainWindowContextID:(unsigned int)arg3 sourceConnection:(id)arg4 accessibilityConnection:(id)arg5 clientSource:(id)arg6 delegate:(id)arg7;	// IMP=0x0010000000015f6e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

