//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecordID, CKRecordZone, CKRecordZoneID, CKReference, CPLCloudKitScope, CPLEngineScope, MISSING_TYPE, NSString;

@interface CPLCloudKitZoneIdentification : NSObject
{
    _Bool _hasCachedRootRef;	// 8 = 0x8
    CKReference *_cachedRootRef;	// 16 = 0x10
    CPLCloudKitScope *_cloudKitScope;	// 24 = 0x18
    CPLEngineScope *_engineScope;	// 32 = 0x20
}

+ (_Bool)isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x00200000001038d9
+ (long long)_permissionFromCKShare:(id)arg1;	// IMP=0x00100000001037cc
+ (id)prefixForNewScopes;	// IMP=0x00100000001037c4
+ (id)libraryInfoRecordName;	// IMP=0x00100000001031b3
+ (_Bool)isSupportedShare:(id)arg1;	// IMP=0x001000000010300d
+ (_Bool)isSupportedShareType:(id)arg1;	// IMP=0x0010000000102f99
+ (id)shareType;	// IMP=0x0010000000102f91
+ (id)shareRecordName;	// IMP=0x0010000000102f89
+ (id)rootRecordName;	// IMP=0x0010000000102f81
+ (_Bool)supportsCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x00100000001025d5
+ (long long)scopeTypeForCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 fetchedRecords:(id)arg3 currentUserID:(id)arg4;	// IMP=0x00100000001025cd
+ (id)recordsToFetchToIdentifyZoneID:(id)arg1 proposedScopeType:(long long)arg2 currentUserID:(id)arg3;	// IMP=0x00100000001023bb
+ (id)recordNamesForScopeInfo;	// IMP=0x00100000001022bf
+ (_Bool)shouldProtectZoneIDFromDeletion:(id)arg1;	// IMP=0x0010000000102001
- (void).cxx_destruct;	// IMP=0x0020000000103907
@property(readonly, nonatomic) CPLEngineScope *engineScope; // @synthesize engineScope=_engineScope;
@property(readonly, nonatomic) CPLCloudKitScope *cloudKitScope; // @synthesize cloudKitScope=_cloudKitScope;
- (_Bool)_isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x001000000010384a
- (id)newScopeIdentifier;	// IMP=0x00100000001036dc
- (void)validateCreateScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001036cc
- (void)validateAcceptSharedScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001036bc
@property(readonly, nonatomic) long long scopeType;
@property(readonly, nonatomic) NSString *scopeIdentifier;
@property(readonly, nonatomic) CKRecordZone *zone;
@property(readonly, nonatomic) CKRecordZoneID *zoneID;
- (id)scopedIdentifierWithIdentifier:(id)arg1;	// IMP=0x001000000010356b
- (id)recordIDWithRecordName:(id)arg1;	// IMP=0x00100000001034e8
- (_Bool)supportsDeletionOfRecordClass:(Class)arg1;	// IMP=0x00100000001034d3
- (_Bool)supportsDirectDeletionOfRecordClass:(Class)arg1;	// IMP=0x00100000001034be
- (_Bool)supportsDownloadOfRecordClass:(Class)arg1;	// IMP=0x00100000001034b6
- (_Bool)supportsUploadOfRecordClass:(Class)arg1;	// IMP=0x00100000001034ae
- (_Bool)supportsDeletionOfRecord:(id)arg1;	// IMP=0x0010000000103499
- (_Bool)supportsDirectDeletionOfRecord:(id)arg1;	// IMP=0x0010000000103484
- (_Bool)supportsDownloadOfChange:(id)arg1;	// IMP=0x0010000000103450
- (_Bool)supportsUploadOfChange:(id)arg1;	// IMP=0x001000000010341c
- (void)setupRootOnRecord:(id)arg1;	// IMP=0x00100000001033b1
@property(readonly, nonatomic) long long databaseScope;
@property(readonly, nonatomic) long long operationType;
- (id)_rootRef;	// IMP=0x0010000000103280
@property(readonly, nonatomic) NSString *libraryInfoRecordName;
@property(readonly, nonatomic) NSString *shareType;
@property(readonly, nonatomic) NSString *shareRecordName;
@property(readonly, nonatomic) NSString *rootRecordType;
@property(readonly, nonatomic) CKRecordID *rootRecordID;
- (id)proposedStagingZoneIdentificationWithCurrentUserID:(id)arg1;	// IMP=0x00100000001031bb
- (_Bool)isSupportedShare:(id)arg1;	// IMP=0x001000000010311a
- (MISSING_TYPE *)isSupportedShareType: /* Error: Ran out of types for this method. */;	// IMP=0x00100000001030a6
- (id)updatedFlagsFromDeletedCKRecordID:(id)arg1 recordType:(id)arg2;	// IMP=0x0010000000102f79
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withDeletedCKRecordID:(id)arg3 recordType:(id)arg4;	// IMP=0x0010000000102f71
- (id)updatedFlagsFromCKRecord:(id)arg1;	// IMP=0x0010000000102e84
- (id)scopeFlagsUpdateFromCKRecords:(id)arg1;	// IMP=0x0010000000102d2f
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withCKRecord:(id)arg3;	// IMP=0x0010000000102a05
- (id)scopeChangeFromCKRecords:(id)arg1 currentUserID:(id)arg2;	// IMP=0x0010000000102731
- (id)_baseScopeChange;	// IMP=0x00100000001026be
- (id)recordsToUpdateFromScopeChange:(id)arg1 currentUserID:(id)arg2;	// IMP=0x00100000001026b1
@property(readonly, nonatomic) CKRecordID *shareRecordIDToDelete;
@property(readonly, nonatomic) _Bool supportsZoneCreation;
@property(readonly, nonatomic) _Bool supportsZoneDelete;
- (id)recordsToFetchForScopeInfoWithCurrentUserID:(id)arg1;	// IMP=0x00100000001025dd
- (id)initWithCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x001000000010204f

@end

