//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "CPLPlatformImplementation-Protocol.h"

@class CPLChangeSessionUpdate, CPLDerivativesFilter, CPLEngineStoreTransaction, NSArray, NSDate, NSString;
@protocol CPLEngineStoreUserIdentifier;

@protocol CPLEngineStoreImplementation <CPLPlatformImplementation>
@property(readonly, nonatomic) id corruptionInfo;
@property(readonly) NSDate *libraryCreationDate;
@property(readonly, nonatomic) _Bool shouldUpdateDisabledFeatures;
@property(readonly, nonatomic) CPLChangeSessionUpdate *storedChangeSessionUpdate;
@property(readonly, nonatomic) _Bool hasStoredChangeSessionUpdate;
- (void)blockWriteTransactionsWithCompletionHandler:(void (^)(CPLEngineWriteTransactionBlocker *))arg1;
- (_Bool)deleteDynamicallyCreatedStorages:(NSArray *)arg1 error:(id *)arg2;
- (_Bool)createStoragesDynamically:(NSArray *)arg1 error:(id *)arg2;
- (NSString *)status;
- (void)markAsCorrupted;
- (void)emergencyClose;
- (void)stopVacuum;
- (void)startVacuum;
- (void)wipeStoreAtNextOpeningWithReason:(NSString *)arg1 completionBlock:(void (^)(void))arg2;
- (_Bool)markDatabaseAsDeactivatedWithError:(id *)arg1;
- (_Bool)storeDerivativesFilter:(CPLDerivativesFilter *)arg1 error:(id *)arg2;
- (CPLDerivativesFilter *)derivativesFilter;
- (NSArray *)disabledFeatures;
- (_Bool)storeDisabledFeatures:(NSArray *)arg1 error:(id *)arg2;
- (_Bool)setShouldUpdateDisabledFeaturesWithError:(id *)arg1;
- (_Bool)storeChangeSessionUpdate:(CPLChangeSessionUpdate *)arg1 error:(id *)arg2;
- (_Bool)isClientInSyncWithClientCache;
- (_Bool)storeClientIsNotInSyncWithClientCacheWithError:(id *)arg1;
- (_Bool)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;
- (NSString *)createNewClientCacheIdentifier;
- (_Bool)storeClientCacheIdentifier:(NSString *)arg1 error:(id *)arg2;
- (NSString *)clientCacheIdentifier;
- (_Bool)storeLastQuarantineCountReportDate:(NSDate *)arg1 error:(id *)arg2;
- (NSDate *)lastQuarantineCountReportDate;
- (_Bool)storeUserIdentifier:(id <CPLEngineStoreUserIdentifier>)arg1 error:(id *)arg2;
- (id <CPLEngineStoreUserIdentifier>)userIdentifier;
- (NSString *)createNewLibraryVersion;
- (_Bool)storeLibraryVersion:(NSString *)arg1 withError:(id *)arg2;
- (NSString *)libraryVersion;
- (_Bool)updateLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;
- (unsigned long long)libraryOptions;
- (void)transactionDidFinish;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;
- (void)performBarrier;
- (void)performBarrierTransaction:(CPLEngineStoreTransaction *)arg1 withBlock:(void (^)(void))arg2;
- (void)performWriteTransaction:(CPLEngineStoreTransaction *)arg1 withBlock:(void (^)(void))arg2 completionHandler:(void (^)(NSError *))arg3;
- (void)performReadTransaction:(CPLEngineStoreTransaction *)arg1 withBlock:(void (^)(void))arg2;
- (_Bool)closeWithError:(id *)arg1;
- (_Bool)executePostOpenWithError:(id *)arg1;
- (_Bool)openWithError:(id *)arg1;
@end

