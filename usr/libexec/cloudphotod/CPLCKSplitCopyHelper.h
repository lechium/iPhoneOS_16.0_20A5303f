//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, CKRecordID, CPLCKBatchUploadPlanner, NSString;

@interface CPLCKSplitCopyHelper : NSObject
{
    _Bool _fromPrivateRecord;	// 8 = 0x8
    CKRecord *_baseCKRecord;	// 16 = 0x10
    CKRecordID *_sourceRecordID;	// 24 = 0x18
    Class _recordClass;	// 32 = 0x20
    long long _sourceDatabaseScope;	// 40 = 0x28
    CKRecordID *_destinationRecordID;	// 48 = 0x30
    NSString *_action;	// 56 = 0x38
    CPLCKBatchUploadPlanner *_planner;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00200000000a74bc
@property(readonly, nonatomic) CPLCKBatchUploadPlanner *planner; // @synthesize planner=_planner;
@property(readonly, nonatomic) NSString *action; // @synthesize action=_action;
@property(readonly, nonatomic) CKRecordID *destinationRecordID; // @synthesize destinationRecordID=_destinationRecordID;
@property(readonly, nonatomic) long long sourceDatabaseScope; // @synthesize sourceDatabaseScope=_sourceDatabaseScope;
@property(readonly, nonatomic) Class recordClass; // @synthesize recordClass=_recordClass;
@property(readonly, nonatomic) _Bool fromPrivateRecord; // @synthesize fromPrivateRecord=_fromPrivateRecord;
@property(readonly, nonatomic) CKRecordID *sourceRecordID; // @synthesize sourceRecordID=_sourceRecordID;
@property(readonly, nonatomic) CKRecord *baseCKRecord; // @synthesize baseCKRecord=_baseCKRecord;
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;	// IMP=0x00100000000a7457
- (id)scopedIdentifierForCKRecordID:(id)arg1;	// IMP=0x00100000000a7441
- (id)scopeIdentifierFromZoneID:(id)arg1;	// IMP=0x00100000000a742b
- (id)zoneIDFromScopeIdentifier:(id)arg1;	// IMP=0x00100000000a7415
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;	// IMP=0x00100000000a73ff
- (id)finalizedDestinationCKRecordFromProposedCKRecord:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000a73e9
- (id)recordNameInDestinationCKRecordFromRecordName:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000a7164
- (_Bool)shouldCopyCKRecordKeyToDestinationCKRecord:(id)arg1;	// IMP=0x00100000000a706a
- (id)baseDestinationCKRecordForSourceCKRecord:(id)arg1 destinationCKRecordID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000a6fb4
- (void)prepareCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;	// IMP=0x00100000000a6fae
- (_Bool)shouldCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;	// IMP=0x00100000000a6fa6
- (id)copiedRecordFromSourceRecord:(id)arg1 action:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000a6f74
- (id)initWithBaseCKRecord:(id)arg1 sourceRecordID:(id)arg2 fromPrivateRecord:(_Bool)arg3 recordClass:(Class)arg4 sourceDatabaseScope:(long long)arg5 destinationRecordID:(id)arg6 planner:(id)arg7;	// IMP=0x00100000000a6e7c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

