//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKKSManifestInjectionPointHelper, MISSING_TYPE, NSArray, NSData, NSDictionary, NSMutableDictionary, NSString;

@interface CKKSManifest
{
    NSData *_derData;	// 8 = 0x8
    NSData *_digestValue;	// 16 = 0x10
    unsigned long long _generationCount;	// 24 = 0x18
    NSString *_signerID;	// 32 = 0x20
    NSString *_zoneName;	// 40 = 0x28
    NSArray *_leafRecordIDs;	// 48 = 0x30
    NSArray *_peerManifestIDs;	// 56 = 0x38
    NSMutableDictionary *_currentItemsDict;	// 64 = 0x40
    NSDictionary *_futureData;	// 72 = 0x48
    NSDictionary *_signaturesDict;	// 80 = 0x50
    NSDictionary *_schema;	// 88 = 0x58
    CKKSManifestInjectionPointHelper *_helper;	// 96 = 0x60
}

+ (_Bool)intransactionRecordDeleted:(id)arg1 resync:(_Bool)arg2 error:(id *)arg3;	// IMP=0x002000000012b2ef
+ (id)whereClauseForRecordName:(id)arg1;	// IMP=0x001000000012b11b
+ (unsigned long long)greatestKnownGenerationCount;	// IMP=0x001000000012afab
+ (id)sqlTable;	// IMP=0x001000000012af9e
+ (id)sqlColumns;	// IMP=0x001000000012af91
+ (MISSING_TYPE *)fromDatabaseRow: /* Error: Ran out of types for this method. */;	// IMP=0x001000000012a9a9
+ (id)manifestForPendingManifest:(id)arg1;	// IMP=0x001000000012a7b9
+ (id)digestValueForLeafRecords:(id)arg1;	// IMP=0x001000000012a5d6
+ (id)digestForData:(id)arg1;	// IMP=0x001000000012a5bd
+ (id)signatureOperation;	// IMP=0x001000000012a533
+ (id)latestTrustedManifestForZone:(id)arg1 error:(id *)arg2;	// IMP=0x001000000012a381
+ (id)manifestForRecordName:(id)arg1 error:(id *)arg2;	// IMP=0x001000000012a31d
+ (id)manifestForZone:(id)arg1 peerID:(id)arg2 error:(id *)arg3;	// IMP=0x001000000012a21c
+ (id)tryFromDatabaseWhere:(id)arg1 error:(id *)arg2;	// IMP=0x001000000012a165
+ (void)performWithAccountInfo:(CDUnknownBlockType)arg1;	// IMP=0x0010000000129f4c
+ (_Bool)shouldEnforceManifests;	// IMP=0x0010000000129f33
+ (_Bool)shouldSyncManifests;	// IMP=0x0010000000129f1a
+ (void)loadDefaults;	// IMP=0x0010000000129ef6
+ (void)initialize;	// IMP=0x0010000000129db5
- (void).cxx_destruct;	// IMP=0x0020000000128a86
@property(readonly, nonatomic) unsigned long long generationCount; // @synthesize generationCount=_generationCount;
@property(retain, nonatomic) CKKSManifestInjectionPointHelper *helper; // @synthesize helper=_helper;
@property(readonly, nonatomic) NSDictionary *schema; // @synthesize schema=_schema;
@property(retain, nonatomic) NSString *signerID; // @synthesize signerID=_signerID;
@property(readonly, nonatomic) NSDictionary *signatures; // @synthesize signatures=_signaturesDict;
@property(readonly, nonatomic) NSDictionary *futureData; // @synthesize futureData=_futureData;
@property(readonly, nonatomic) NSDictionary *currentItems; // @synthesize currentItems=_currentItemsDict;
@property(readonly, nonatomic) NSArray *peerManifestIDs; // @synthesize peerManifestIDs=_peerManifestIDs;
@property(readonly, nonatomic) NSArray *leafRecordIDs; // @synthesize leafRecordIDs=_leafRecordIDs;
@property(readonly, nonatomic) NSString *zoneName; // @synthesize zoneName=_zoneName;
- (void)nilAllIvars;	// IMP=0x00100000001288dd
- (id)ckRecordType;	// IMP=0x00100000001288be
- (id)leafRecords;	// IMP=0x0010000000128629
@property(readonly, nonatomic) NSData *digestValue;
- (void)clearDigest;	// IMP=0x001000000012853e
- (id)leafRecordForItemUUID:(id)arg1;	// IMP=0x001000000012847b
- (id)leafRecordForID:(id)arg1;	// IMP=0x0010000000128333
- (_Bool)contentsAreEqualToManifest:(id)arg1;	// IMP=0x00100000001282d5
- (_Bool)itemUUIDExistsInManifest:(id)arg1;	// IMP=0x001000000012822b
- (_Bool)validateCurrentItem:(id)arg1 withError:(id *)arg2;	// IMP=0x001000000012809d
- (_Bool)validateItem:(id)arg1 withError:(id *)arg2;	// IMP=0x0010000000127ea1
- (_Bool)validateWithError:(id *)arg1;	// IMP=0x0010000000127cec
- (id)derData;	// IMP=0x0010000000127885
- (void)setFromCKRecord:(id)arg1;	// IMP=0x0010000000127785
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x001000000012745b
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x001000000012705c
- (id)CKRecordName;	// IMP=0x0010000000126fff
- (id)whereClauseToFindSelf;	// IMP=0x0010000000126e80
- (id)sqlValues;	// IMP=0x0010000000126aa4
- (_Bool)updateWithRecord:(id)arg1 error:(id *)arg2;	// IMP=0x00100000001266a4
- (id)futureDataDictFromRecord:(id)arg1 withSchema:(id)arg2;	// IMP=0x00100000001265b1
- (id)derDataFromPeerManifests:(id)arg1 error:(id *)arg2;	// IMP=0x00100000001264a5
- (id)peerManifestsFromDERData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000126382
- (id)derDataFromSignatureDict:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000126276
- (id)signatureDictFromDERData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000126153
- (id)defaultHelperForSignerID:(id)arg1;	// IMP=0x001000000012613a
- (id)initWithCKRecord:(id)arg1;	// IMP=0x0010000000125a74
- (id)initWithDigestValue:(id)arg1 zone:(id)arg2 generationCount:(unsigned long long)arg3 leafRecordIDs:(id)arg4 peerManifestIDs:(id)arg5 currentItems:(id)arg6 futureData:(id)arg7 signatures:(id)arg8 signerID:(id)arg9 schema:(id)arg10 encodedRecord:(id)arg11;	// IMP=0x00100000001259d9
- (id)initWithDigestValue:(id)arg1 zone:(id)arg2 generationCount:(unsigned long long)arg3 leafRecordIDs:(id)arg4 peerManifestIDs:(id)arg5 currentItems:(id)arg6 futureData:(id)arg7 signatures:(id)arg8 signerID:(id)arg9 schema:(id)arg10;	// IMP=0x001000000012599b
- (id)initWithDigestValue:(id)arg1 zone:(id)arg2 generationCount:(unsigned long long)arg3 leafRecordIDs:(id)arg4 peerManifestIDs:(id)arg5 currentItems:(id)arg6 futureData:(id)arg7 signatures:(id)arg8 signerID:(id)arg9 schema:(id)arg10 helper:(id)arg11;	// IMP=0x0010000000125439

@end

