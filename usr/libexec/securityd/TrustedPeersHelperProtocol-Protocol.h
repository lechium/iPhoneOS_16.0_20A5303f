//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSData, NSDictionary, NSNumber, NSSet, NSString, NSUUID, OTAccountSettingsX, TPPBSecureElementIdentity, TPPolicyVersion, TPSpecificUser, TrustedPeersHelperCustodianRecoveryKey, TrustedPeersHelperIntendedTPPBSecureElementIdentity;

@protocol TrustedPeersHelperProtocol
- (void)fetchAccountSettingsWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)removeEscrowCacheWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSError *))arg2;
- (void)resetAccountCDPContentsWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSError *))arg2;
- (void)getSupportAppInfoWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSData *, NSError *))arg2;
- (void)requestHealthCheckWithSpecificUser:(TPSpecificUser *)arg1 requiresEscrowCheck:(_Bool)arg2 knownFederations:(NSArray *)arg3 reply:(void (^)(_Bool, _Bool, _Bool, _Bool, OTEscrowMoveRequestContext *, NSError *))arg4;
- (void)pushHealthInquiryWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSError *))arg2;
- (void)reportHealthWithSpecificUser:(TPSpecificUser *)arg1 stateMachineState:(NSString *)arg2 trustState:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)removeCustodianRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 uuid:(NSUUID *)arg2 reply:(void (^)(NSError *))arg3;
- (void)createCustodianRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 recoveryKey:(NSString *)arg2 salt:(NSString *)arg3 ckksKeys:(NSArray *)arg4 uuid:(NSUUID *)arg5 kind:(int)arg6 reply:(void (^)(NSArray *, TrustedPeersHelperCustodianRecoveryKey *, NSError *))arg7;
- (void)setRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 recoveryKey:(NSString *)arg2 salt:(NSString *)arg3 ckksKeys:(NSArray *)arg4 reply:(void (^)(NSArray *, NSError *))arg5;
- (void)fetchTrustStateWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(TrustedPeersHelperPeerState *, NSArray *, NSError *))arg2;
- (void)validatePeersWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)fetchCurrentPolicyWithSpecificUser:(TPSpecificUser *)arg1 modelIDOverride:(NSString *)arg2 isInheritedAccount:(_Bool)arg3 reply:(void (^)(TPSyncingPolicy *, int, NSError *))arg4;
- (void)fetchRecoverableTLKSharesWithSpecificUser:(TPSpecificUser *)arg1 peerID:(NSString *)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)fetchPolicyDocumentsWithSpecificUser:(TPSpecificUser *)arg1 versions:(NSSet *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)fetchEscrowContentsWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSData *, NSString *, NSData *, NSError *))arg2;
- (void)fetchViableEscrowRecordsWithSpecificUser:(TPSpecificUser *)arg1 forceFetch:(_Bool)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)fetchViableBottlesWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSArray *, NSArray *, NSError *))arg2;
- (void)updateTLKsWithSpecificUser:(TPSpecificUser *)arg1 ckksKeys:(NSArray *)arg2 tlkShares:(NSArray *)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)setPreapprovedKeysWithSpecificUser:(TPSpecificUser *)arg1 preapprovedKeys:(NSArray *)arg2 reply:(void (^)(TrustedPeersHelperPeerState *, NSError *))arg3;
- (void)updateWithSpecificUser:(TPSpecificUser *)arg1 forceRefetch:(_Bool)arg2 deviceName:(NSString *)arg3 serialNumber:(NSString *)arg4 osVersion:(NSString *)arg5 policyVersion:(NSNumber *)arg6 policySecrets:(NSDictionary *)arg7 syncUserControllableViews:(NSNumber *)arg8 secureElementIdentity:(TrustedPeersHelperIntendedTPPBSecureElementIdentity *)arg9 reply:(void (^)(TrustedPeersHelperPeerState *, TPSyncingPolicy *, NSError *))arg10;
- (void)attemptPreapprovedJoinWithSpecificUser:(TPSpecificUser *)arg1 ckksKeys:(NSArray *)arg2 tlkShares:(NSArray *)arg3 preapprovedKeys:(NSArray *)arg4 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg5;
- (void)preflightPreapprovedJoinWithSpecificUser:(TPSpecificUser *)arg1 preapprovedKeys:(NSArray *)arg2 reply:(void (^)(_Bool, NSError *))arg3;
- (void)joinWithSpecificUser:(TPSpecificUser *)arg1 voucherData:(NSData *)arg2 voucherSig:(NSData *)arg3 ckksKeys:(NSArray *)arg4 tlkShares:(NSArray *)arg5 preapprovedKeys:(NSArray *)arg6 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg7;
- (void)vouchWithCustodianRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg2 tlkShares:(NSArray *)arg3 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg4;
- (void)recoverTLKSharesForInheritorWithSpecificUser:(TPSpecificUser *)arg1 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg2 tlkShares:(NSArray *)arg3 reply:(void (^)(NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg4;
- (void)vouchWithRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 recoveryKey:(NSString *)arg2 salt:(NSString *)arg3 tlkShares:(NSArray *)arg4 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg5;
- (void)preflightVouchWithCustodianRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg2 reply:(void (^)(NSString *, TPSyncingPolicy *, NSError *))arg3;
- (void)preflightVouchWithRecoveryKeyWithSpecificUser:(TPSpecificUser *)arg1 recoveryKey:(NSString *)arg2 salt:(NSString *)arg3 reply:(void (^)(NSString *, TPSyncingPolicy *, NSError *))arg4;
- (void)vouchWithBottleWithSpecificUser:(TPSpecificUser *)arg1 bottleID:(NSString *)arg2 entropy:(NSData *)arg3 bottleSalt:(NSString *)arg4 tlkShares:(NSArray *)arg5 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg6;
- (void)preflightVouchWithBottleWithSpecificUser:(TPSpecificUser *)arg1 bottleID:(NSString *)arg2 reply:(void (^)(NSString *, TPSyncingPolicy *, _Bool, NSError *))arg3;
- (void)vouchWithSpecificUser:(TPSpecificUser *)arg1 peerID:(NSString *)arg2 permanentInfo:(NSData *)arg3 permanentInfoSig:(NSData *)arg4 stableInfo:(NSData *)arg5 stableInfoSig:(NSData *)arg6 ckksKeys:(NSArray *)arg7 reply:(void (^)(NSData *, NSData *, NSError *))arg8;
- (void)establishWithSpecificUser:(TPSpecificUser *)arg1 ckksKeys:(NSArray *)arg2 tlkShares:(NSArray *)arg3 preapprovedKeys:(NSArray *)arg4 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg5;
- (void)prepareInheritancePeerWithSpecificUser:(TPSpecificUser *)arg1 epoch:(unsigned long long)arg2 machineID:(NSString *)arg3 bottleSalt:(NSString *)arg4 bottleID:(NSString *)arg5 modelID:(NSString *)arg6 deviceName:(NSString *)arg7 serialNumber:(NSString *)arg8 osVersion:(NSString *)arg9 policyVersion:(TPPolicyVersion *)arg10 policySecrets:(NSDictionary *)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(TPPBSecureElementIdentity *)arg13 signingPrivKeyPersistentRef:(NSData *)arg14 encPrivKeyPersistentRef:(NSData *)arg15 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg16 reply:(void (^)(NSString *, NSData *, NSData *, NSData *, NSData *, TPSyncingPolicy *, NSString *, NSArray *, NSError *))arg17;
- (void)prepareWithSpecificUser:(TPSpecificUser *)arg1 epoch:(unsigned long long)arg2 machineID:(NSString *)arg3 bottleSalt:(NSString *)arg4 bottleID:(NSString *)arg5 modelID:(NSString *)arg6 deviceName:(NSString *)arg7 serialNumber:(NSString *)arg8 osVersion:(NSString *)arg9 policyVersion:(TPPolicyVersion *)arg10 policySecrets:(NSDictionary *)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(TPPBSecureElementIdentity *)arg13 setting:(OTAccountSettingsX *)arg14 signingPrivKeyPersistentRef:(NSData *)arg15 encPrivKeyPersistentRef:(NSData *)arg16 reply:(void (^)(NSString *, NSData *, NSData *, NSData *, NSData *, TPSyncingPolicy *, NSError *))arg17;
- (void)fetchEgoEpochWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(unsigned long long, NSError *))arg2;
- (void)fetchAllowedMachineIDsWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSSet *, NSError *))arg2;
- (void)removeAllowedMachineIDsWithSpecificUser:(TPSpecificUser *)arg1 machineIDs:(NSArray *)arg2 reply:(void (^)(NSError *))arg3;
- (void)addAllowedMachineIDsWithSpecificUser:(TPSpecificUser *)arg1 machineIDs:(NSArray *)arg2 reply:(void (^)(NSError *))arg3;
- (void)setAllowedMachineIDsWithSpecificUser:(TPSpecificUser *)arg1 allowedMachineIDs:(NSSet *)arg2 honorIDMSListChanges:(_Bool)arg3 reply:(void (^)(_Bool, NSError *))arg4;
- (void)localResetWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSError *))arg2;
- (void)resetWithSpecificUser:(TPSpecificUser *)arg1 resetReason:(long long)arg2 reply:(void (^)(NSError *))arg3;
- (void)trustStatusWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(TrustedPeersHelperEgoPeerStatus *, NSError *))arg2;
- (void)distrustPeerIDsWithSpecificUser:(TPSpecificUser *)arg1 peerIDs:(NSSet *)arg2 reply:(void (^)(NSError *))arg3;
- (void)departByDistrustingSelfWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSError *))arg2;
- (void)dumpWithSpecificUser:(TPSpecificUser *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)pingWithReply:(void (^)(void))arg1;
@end

