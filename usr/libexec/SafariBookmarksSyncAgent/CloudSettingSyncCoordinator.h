//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ACAccountStore, CKOperationGroup, CKServerChangeToken, CloudSettingStore, NSMutableArray;
@protocol CloudSettingSyncCoordinatorDelegate;

@interface CloudSettingSyncCoordinator : NSObject
{
    NSMutableArray *_syncingCompletionHandlers;	// 8 = 0x8
    ACAccountStore *_accountStore;	// 16 = 0x10
    _Bool _dataclassEnabled;	// 24 = 0x18
    _Bool _needsDataclassEnabledCheck;	// 25 = 0x19
    _Bool _needsAccountHashCheck;	// 26 = 0x1a
    CKServerChangeToken *_serverChangeToken;	// 32 = 0x20
    _Bool _isSynchronizing;	// 40 = 0x28
    _Bool _didReceiveSyncRequestWhileSyncing;	// 41 = 0x29
    _Bool _isPerformingInitialSyncUp;	// 42 = 0x2a
    _Bool _shouldPerformInitialSyncDown;	// 43 = 0x2b
    _Bool _isWaitingForPCSIdentityUpdate;	// 44 = 0x2c
    CKOperationGroup *_saveSettingsOperationGroup;	// 48 = 0x30
    CKOperationGroup *_fetchSettingsOperationGroup;	// 56 = 0x38
    CKOperationGroup *_deleteSettingsOperationGroup;	// 64 = 0x40
    CKOperationGroup *_saveBackgroundImageOperationGroup;	// 72 = 0x48
    CloudSettingStore *_settingStore;	// 80 = 0x50
    id <CloudSettingSyncCoordinatorDelegate> _delegate;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x0020000000049d13
@property(nonatomic) __weak id <CloudSettingSyncCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) CloudSettingStore *settingStore; // @synthesize settingStore=_settingStore;
- (void)clearServerChangeToken;	// IMP=0x0010000000049c39
- (void)_clearCachedCloudSettingsRecordZoneIfNecessaryForError:(id)arg1;	// IMP=0x0010000000049bfe
- (void)deleteRecords:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000049a2a
- (void)_clearPerSiteSettingsSyncData;	// IMP=0x00100000000498ee
- (void)_savePerSiteCloudKitRecordsToDisk:(id)arg1;	// IMP=0x0010000000049620
- (id)_perSitePreferencesStore;	// IMP=0x001000000004957a
- (void)savePerSiteRecords:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000048cff
- (void)saveRecords:(id)arg1 successCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000048a3c
- (void)saveImageRecord:(id)arg1 successCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000486c7
- (void)_pcsIdentitiesDidChangeNotification:(id)arg1;	// IMP=0x0010000000048574
- (void)_cleanUpAndCallCompletionHandlersWithError:(id)arg1 inOperationGroup:(id)arg2;	// IMP=0x0010000000048372
- (void)_didFailToSyncWithError:(id)arg1 inOperationGroup:(id)arg2;	// IMP=0x00100000000482ef
- (void)_handleExpiredChangeTokenError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000048260
- (void)_continueFetchingSettingsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004796d
- (void)_saveServerChangeToken:(id)arg1;	// IMP=0x00100000000477fb
- (void)_readServerChangeTokenFromUserDefaults;	// IMP=0x00100000000476ee
- (void)_performSyncDown;	// IMP=0x00100000000475d3
- (void)_continueSyncingAfterSyncingDown:(_Bool)arg1 inOperationGroup:(id)arg2;	// IMP=0x00100000000474be
- (void)_beginSyncingInOperationGroup:(id)arg1 completionHandlers:(id)arg2;	// IMP=0x0010000000046cbb
- (void)beginSyncingWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000046c0c
- (void)beginInitialSyncUpWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000046bf6
- (void)setNeedsAccountHashCheck;	// IMP=0x0010000000046b9c
- (_Bool)_updateAccountHashIfNeeded;	// IMP=0x001000000004696d
- (_Bool)_isDataclassEnabled;	// IMP=0x001000000004686e
- (void)userAccountChanged;	// IMP=0x0010000000046814
- (id)initWithSettingStore:(id)arg1 accountStore:(id)arg2;	// IMP=0x00100000000466b0
- (id)init;	// IMP=0x00100000000466a2

@end

