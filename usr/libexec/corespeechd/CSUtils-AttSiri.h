//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreSpeechFoundation/CSUtils.h>

@interface CSUtils (AttSiri)
+ (id)timeStampString;	// IMP=0x00100000000169c4
+ (void)logMitigationFeatures:(id)arg1 forTask:(id)arg2 withModelOutput:(id)arg3 forMHRequestId:(id)arg4;	// IMP=0x0010000000016066
+ (_Bool)isRemoteDarwinWithDeviceId:(id)arg1;	// IMP=0x0010000000061cd2
+ (_Bool)hasRemoteBuiltInMic;	// IMP=0x0010000000061cca
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000061ce2
+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;	// IMP=0x0010000000061cda
+ (id)recordContextString:(id)arg1;	// IMP=0x001000000006e1b2
+ (_Bool)isValidRecordContext:(id)arg1;	// IMP=0x001000000006e1aa
+ (_Bool)isRecordContextJarvisButtonPress:(id)arg1;	// IMP=0x001000000006e14a
+ (_Bool)isRecordContextJarvisVoiceTrigger:(id)arg1;	// IMP=0x001000000006e0ea
+ (_Bool)isRecordContextRaiseToSpeak:(id)arg1;	// IMP=0x001000000006e08a
+ (_Bool)isRecordContextHearstDoubleTap:(id)arg1;	// IMP=0x001000000006e02a
+ (_Bool)isRecordContextHearstVoiceTrigger:(id)arg1;	// IMP=0x001000000006dfca
+ (_Bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;	// IMP=0x001000000006df6a
+ (_Bool)isRecordContextAutoPrompt:(id)arg1;	// IMP=0x001000000006df0a
+ (_Bool)isRecordContextHomeButtonPress:(id)arg1;	// IMP=0x001000000006deaa
+ (_Bool)isRecordContextRemoraVoiceTrigger:(id)arg1;	// IMP=0x001000000006de4a
+ (_Bool)isRecordContextDarwinVoiceTrigger:(id)arg1;	// IMP=0x001000000006ddea
+ (_Bool)isRecordContextBuiltInVoiceTrigger:(id)arg1;	// IMP=0x001000000006dd8a
+ (_Bool)isRecordContextVoiceTrigger:(id)arg1;	// IMP=0x001000000006dccc
+ (_Bool)extractArchiveFromDirectory:(id)arg1 toDir:(id)arg2;	// IMP=0x001000000007b121
+ (id)getSiriLanguageWithEndpointId:(id)arg1 fallbackLanguage:(id)arg2;	// IMP=0x001000000007c262
+ (id)getSiriLanguageWithFallback:(id)arg1;	// IMP=0x001000000007c18c
+ (_Bool)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000a835b
+ (id)audioPortSubtypeAsString:(unsigned int)arg1;	// IMP=0x00100000000bbad7
+ (_Bool)isBluetoothAudioDeviceConnected;	// IMP=0x00100000000bb91f
+ (_Bool)isHeadphoneDeviceWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x00100000000bb5d2
+ (_Bool)hasA2DPWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x00100000000bb56d
+ (_Bool)isHFPWithRecordRoute:(id)arg1;	// IMP=0x00100000000bb54e
+ (id)distributionDictionary:(id)arg1;	// IMP=0x00100000000d1079
+ (_Bool)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d4657
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de547
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;	// IMP=0x00100000000de48d
+ (_Bool)machXPCConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000dedee
@end

