//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_source;

@interface SDAutoUnlockAKSManager : NSObject
{
    _Bool _wristDetectDisabled;	// 8 = 0x8
    _Bool _autoUnlockDisabledDueToManagement;	// 9 = 0x9
    _Bool _waitingForUnlock;	// 10 = 0xa
    _Bool _t208Machine;	// 11 = 0xb
    struct os_unfair_lock_s _cachedSessionKeysLock;	// 12 = 0xc
    NSString *_localDeviceID;	// 16 = 0x10
    NSString *_state;	// 24 = 0x18
    NSData *_localAttestedLTK;	// 32 = 0x20
    NSData *_localLTK;	// 40 = 0x28
    NSString *_altDSID;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_keybagAssertionTimer;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_waitingForUnlockTimer;	// 64 = 0x40
    NSMutableDictionary *_remoteLTKs;	// 72 = 0x48
    NSMutableDictionary *_cachedSessions;	// 80 = 0x50
    NSMutableDictionary *_cachedSessionKeys;	// 88 = 0x58
    NSMutableDictionary *_watchIDsToPairingRecords;	// 96 = 0x60
    NSMutableDictionary *_preferredRemoteLTKForDeviceID;	// 104 = 0x68
    NSMutableArray *_watchIDsMissingSessionKey;	// 112 = 0x70
    NSString *_remoteLTKStorageFilePath;	// 120 = 0x78
    NSString *_watchIDsToPairingRecordsStorageFilePath;	// 128 = 0x80
    NSString *_companionIDStorageFilePath;	// 136 = 0x88
    NSString *_watchIDToCompanionIDStorageFilePath;	// 144 = 0x90
}

+ (_Bool)useKeychainForLTKSyncing;	// IMP=0x00200000001065a7
+ (id)sharedManager;	// IMP=0x00100000000f9014
- (void).cxx_destruct;	// IMP=0x00200000001095b1
@property(readonly, nonatomic) struct os_unfair_lock_s cachedSessionKeysLock; // @synthesize cachedSessionKeysLock=_cachedSessionKeysLock;
@property(copy, nonatomic) NSString *watchIDToCompanionIDStorageFilePath; // @synthesize watchIDToCompanionIDStorageFilePath=_watchIDToCompanionIDStorageFilePath;
@property(copy, nonatomic) NSString *companionIDStorageFilePath; // @synthesize companionIDStorageFilePath=_companionIDStorageFilePath;
@property(copy, nonatomic) NSString *watchIDsToPairingRecordsStorageFilePath; // @synthesize watchIDsToPairingRecordsStorageFilePath=_watchIDsToPairingRecordsStorageFilePath;
@property(copy, nonatomic) NSString *remoteLTKStorageFilePath; // @synthesize remoteLTKStorageFilePath=_remoteLTKStorageFilePath;
@property(retain, nonatomic) NSMutableArray *watchIDsMissingSessionKey; // @synthesize watchIDsMissingSessionKey=_watchIDsMissingSessionKey;
@property(retain, nonatomic) NSMutableDictionary *preferredRemoteLTKForDeviceID; // @synthesize preferredRemoteLTKForDeviceID=_preferredRemoteLTKForDeviceID;
@property(retain, nonatomic) NSMutableDictionary *watchIDsToPairingRecords; // @synthesize watchIDsToPairingRecords=_watchIDsToPairingRecords;
@property(retain, nonatomic) NSMutableDictionary *cachedSessionKeys; // @synthesize cachedSessionKeys=_cachedSessionKeys;
@property(retain, nonatomic) NSMutableDictionary *cachedSessions; // @synthesize cachedSessions=_cachedSessions;
@property(retain, nonatomic) NSMutableDictionary *remoteLTKs; // @synthesize remoteLTKs=_remoteLTKs;
@property(retain) NSObject<OS_dispatch_source> *waitingForUnlockTimer; // @synthesize waitingForUnlockTimer=_waitingForUnlockTimer;
@property(retain) NSObject<OS_dispatch_source> *keybagAssertionTimer; // @synthesize keybagAssertionTimer=_keybagAssertionTimer;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSData *localLTK; // @synthesize localLTK=_localLTK;
@property(nonatomic) _Bool t208Machine; // @synthesize t208Machine=_t208Machine;
@property(nonatomic) _Bool waitingForUnlock; // @synthesize waitingForUnlock=_waitingForUnlock;
@property(nonatomic) _Bool autoUnlockDisabledDueToManagement; // @synthesize autoUnlockDisabledDueToManagement=_autoUnlockDisabledDueToManagement;
@property(copy, nonatomic) NSData *localAttestedLTK; // @synthesize localAttestedLTK=_localAttestedLTK;
@property(nonatomic) _Bool wristDetectDisabled; // @synthesize wristDetectDisabled=_wristDetectDisabled;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *localDeviceID; // @synthesize localDeviceID=_localDeviceID;
- (void)updateDynamicStoreEnabled;	// IMP=0x001000000010931f
- (id)baseDictionary;	// IMP=0x00100000001092af
- (id)baseLocalKeysDictionary;	// IMP=0x0010000000109262
- (id)baseLocalKeysDictionaryForDevice:(id)arg1 type:(id)arg2;	// IMP=0x00100000001091b0
- (id)baseModernSyncedDictionary;	// IMP=0x001000000010913d
- (id)attestedDictionaryForDevice:(id)arg1;	// IMP=0x0010000000109097
- (id)modernSyncedDictionaryForDevice:(id)arg1;	// IMP=0x0010000000108ff2
- (id)baseSyncedDictionary;	// IMP=0x0010000000108f7c
- (id)syncedDictionaryForDevice:(id)arg1;	// IMP=0x0010000000108ed7
- (id)baseRangingDictionary;	// IMP=0x0010000000108e64
- (id)baseRangingDictionaryForDevice:(id)arg1;	// IMP=0x0010000000108dec
- (id)keychainDataForQuery:(id)arg1;	// IMP=0x0010000000108cc2
- (void)deleteAllRangingKeys;	// IMP=0x0010000000108afa
- (void)deleteRangingKeyForDeviceID:(id)arg1;	// IMP=0x0010000000108960
- (_Bool)storeRangingKey:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000001086f8
- (id)rangingKeyForDeviceID:(id)arg1;	// IMP=0x0010000000108699
- (id)sessionKeyForDeviceID:(id)arg1;	// IMP=0x0010000000108534
- (_Bool)sessionKeyExistsForDeviceID:(id)arg1;	// IMP=0x0010000000108501
- (id)deriveKeyFromSharedSecret:(id)arg1;	// IMP=0x0010000000108405
- (void)updateSessionKeys;	// IMP=0x0010000000107eb2
- (void)updateRangingKeysIfNeccesary;	// IMP=0x0010000000107b21
- (void)deleteLocalAttestedLTK;	// IMP=0x0010000000107a2d
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2 attested:(_Bool)arg3;	// IMP=0x0010000000107953
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x001000000010793e
- (id)ltkInfoForDeviceID:(id)arg1;	// IMP=0x001000000010792a
- (id)longTermKeyIDForDeviceID:(id)arg1;	// IMP=0x0010000000107882
- (id)longTermKeyForDevice:(id)arg1 modern:(_Bool)arg2;	// IMP=0x0010000000107832
- (id)anyLongTermKeyForDeviceID:(id)arg1;	// IMP=0x00100000001077b8
- (void)deleteRemoteLongTermKeyForDeviceID:(id)arg1 modern:(_Bool)arg2 tombstone:(_Bool)arg3;	// IMP=0x00100000001076dd
- (_Bool)storeAttestedLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x0010000000107455
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3 modern:(_Bool)arg4;	// IMP=0x00100000001071ab
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x0010000000107105
- (void)deleteAllEscrowSecrets;	// IMP=0x001000000010703c
- (void)deleteEscrowSecretForDeviceID:(id)arg1;	// IMP=0x0010000000106f25
- (id)escrowSecretCreationDateForDeviceID:(id)arg1;	// IMP=0x0010000000106df0
- (_Bool)escrowSecretExistsForDevice:(id)arg1;	// IMP=0x0010000000106d3b
- (_Bool)storeEscrowSecret:(id)arg1 pairingID:(id)arg2 deviceID:(id)arg3;	// IMP=0x0010000000106ba6
- (id)keyPairingIDForDeviceID:(id)arg1;	// IMP=0x0010000000106aee
- (id)escrowSecretForDevice:(id)arg1;	// IMP=0x0010000000106725
- (_Bool)storeKeychainItemWithAttributeDictionary:(id)arg1 updateDictionary:(id)arg2 addDictionary:(id)arg3;	// IMP=0x00100000001065af
- (id)autoUnlockFolderPath;	// IMP=0x00100000001064a3
- (id)loadCompanionIDs;	// IMP=0x00100000001060b5
- (void)deleteLegacyCompanionIDs;	// IMP=0x0010000000105f99
- (id)migrateLegacyCompanionIDs:(id)arg1;	// IMP=0x0010000000105ea2
- (id)loadLegacyWatchIDToCompanionIDMapping;	// IMP=0x0010000000105bad
- (void)deleteLegacyWatchToCompanionIDs;	// IMP=0x0010000000105a91
- (void)migrateLegacyWatchIDToCompanionIDs;	// IMP=0x001000000010593c
- (void)loadWatchIDsToPairingRecords;	// IMP=0x001000000010540b
- (void)saveWatchIDsToPairingRecords;	// IMP=0x0010000000105253
- (void)removePairingRecordForWatchID:(id)arg1;	// IMP=0x00100000001051d4
- (void)removePairingIDForWatchID:(id)arg1;	// IMP=0x001000000010506d
- (id)pairingIDForWatchID:(id)arg1;	// IMP=0x0010000000104fc2
- (void)setPairingID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x0010000000104e33
- (void)removeCompanionIDForWatchID:(id)arg1;	// IMP=0x0010000000104ccc
- (id)companionIDForWatchID:(id)arg1;	// IMP=0x0010000000104c21
- (void)setCompanionID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x0010000000104a92
- (id)allPairedWatchDeviceIDs;	// IMP=0x0010000000104a42
- (void)reloadPairingRecordsIfNeeded;	// IMP=0x00100000001049a5
- (void)loadRemoteLTKs;	// IMP=0x0010000000104496
- (void)loadRemoteLTKsIfNeeded;	// IMP=0x001000000010444d
- (void)saveRemoteLTKs;	// IMP=0x0010000000104295
- (void)clearRemoteLTKs;	// IMP=0x00100000001041bf
- (void)removeRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000001040be
- (void)addRemoteLTK:(id)arg1 ltkHash:(id)arg2 ltkModDate:(id)arg3 modernLTK:(id)arg4 modernLTKHash:(id)arg5 modernLTKModeDate:(id)arg6 deviceID:(id)arg7;	// IMP=0x0010000000103df2
- (_Bool)disablePairingWithKeyDevice:(id)arg1;	// IMP=0x0010000000103c97
- (_Bool)ltkExistsForKeyDevice:(id)arg1 updateLTKs:(_Bool)arg2;	// IMP=0x0010000000103b2f
- (_Bool)ltkExistsForKeyDevice:(id)arg1;	// IMP=0x0010000000103b1b
- (void)removeAllRemoteLTKsOnSignOut;	// IMP=0x0010000000103845
- (void)disablePairingForAllKeyDevices;	// IMP=0x001000000010355b
- (void)deleteEscrowSecretForPhones;	// IMP=0x00100000001031dd
- (void)deleteEscrowSecretForAllDevices;	// IMP=0x0010000000102dfc
- (void)handleRequiredStateDisabled;	// IMP=0x0010000000102dea
- (_Bool)deviceEnabledAsKey:(id)arg1;	// IMP=0x0010000000102cf8
- (_Bool);	// IMP=0x0010000000102a4a
- (_Bool)deviceEnabledAsKeyForAnyDevice;	// IMP=0x0010000000102738
- (_Bool)deviceEnabledAsKeyForAnyIDSMac;	// IMP=0x001000000010248a
- (_Bool)deviceEnabledAsKeyForAnyIDSDevice;	// IMP=0x0010000000102178
- (_Bool)localDeviceEnabledAsKeyForMac;	// IMP=0x0010000000102106
- (_Bool)localDeviceEnabledAsKey;	// IMP=0x0010000000102094
- (void)transport:(id)arg1 didReceivePayload:(id)arg2 type:(unsigned short)arg3 deviceID:(id)arg4;	// IMP=0x0010000000101fbf
- (void)handleLTKResponse:(id)arg1;	// IMP=0x0010000000101fb9
- (void)invalidateWaitingForUnlockTimer;	// IMP=0x0010000000101ee3
- (void)restartWaitingForUnlockTimer;	// IMP=0x0010000000101ced
- (void)restartKeybagAssertionTimer;	// IMP=0x0010000000101af9
- (void)releaseKeybagAssertion;	// IMP=0x0010000000101a9d
- (void)takeMobileKeybagAssertion;	// IMP=0x0010000000101a41
- (_Bool)pendingReceiveForPeer:(id)arg1;	// IMP=0x0010000000101990
- (_Bool)pendingSendForPeer:(id)arg1;	// IMP=0x00100000001018df
- (_Bool)keychainNeedsSyncingForRequest:(id)arg1;	// IMP=0x0010000000101416
- (id)ltksForRequest:(id)arg1;	// IMP=0x0010000000100e27
- (void)handleLTKRequest:(id)arg1;	// IMP=0x001000000010044b
- (void)sendLTKResponseWithPayload:(id)arg1 viewState:(id)arg2 needsUnlock:(id)arg3 currentlySyncing:(id)arg4;	// IMP=0x0010000000100194
- (void)fetchLTKsFromCompanionForDeviceID:(id)arg1 needsLTK:(_Bool)arg2 remoteNeedsLTK:(_Bool)arg3 checkViewState:(_Bool)arg4;	// IMP=0x001000000010018e
- (void)fetchLTKsFromCompanion:(_Bool)arg1;	// IMP=0x0010000000100172
- (void)updatePreferredRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000ffd50
- (id)remoteLTKList;	// IMP=0x00100000000ffb47
- (id)remoteLTKEntryForDeviceID:(id)arg1;	// IMP=0x00100000000ffac4
- (id)remoteLTKHashForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000ffa53
- (_Bool)hashMatchesAnyRemoteLTKForDeviceID:(id)arg1 ltkHash:(id)arg2 isPreferred:(_Bool *)arg3;	// IMP=0x00100000000ff6ed
- (id)remoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000ff610
- (id)allRemoteLTKData;	// IMP=0x00100000000ff4e7
- (void)signAndStoreRemoteLTK:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000000ff0a5
- (id)signedDevices;	// IMP=0x00100000000fef54
- (id)modernSignedDevices;	// IMP=0x00100000000fee03
- (id)modificationDataForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000fec76
- (id)keychainDevices:(_Bool)arg1;	// IMP=0x00100000000fe9c0
- (id)allKeychainDevices;	// IMP=0x00100000000fe9ac
- (_Bool)signLTK:(id)arg1 ltkModDate:(id)arg2 modernLTK:(id)arg3 modernLTKModDate:(id)arg4 deviceID:(id)arg5;	// IMP=0x00100000000fe62d
- (_Bool)signLTK:(id)arg1 modernLTK:(id)arg2 forDeviceID:(id)arg3;	// IMP=0x00100000000fe603
- (_Bool)signLTKsForDeviceID:(id)arg1;	// IMP=0x00100000000fe55f
- (void)resignRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000fe54d
- (void)checkRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000fe328
- (void)checkRemoteLTKs;	// IMP=0x00100000000fe322
- (void)updateRemoteLTKs;	// IMP=0x00100000000fe30c
- (void)updateLTKsForDeviceID:(id)arg1 staleRemoteLTK:(_Bool)arg2;	// IMP=0x00100000000fe201
- (void)generateLocalAttestedLTKIfNeccessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000fe166
- (int)ltkSyncStatusForDeviceID:(id)arg1 hash:(id)arg2 modern:(_Bool)arg3;	// IMP=0x00100000000fdfeb
- (_Bool)deviceIsLocalDevice:(id)arg1;	// IMP=0x00100000000fdf74
- (long long)keyClassForDeviceID:(id)arg1;	// IMP=0x00100000000fde92
- (long long)ltkKeyClass;	// IMP=0x00100000000fde87
- (void)updateLocalLTKForSignout;	// IMP=0x00100000000fdd37
- (id)ltkHashForLocalLTK;	// IMP=0x00100000000fdcb7
- (void)checkLocalAttestedLTK;	// IMP=0x00100000000fd9f4
- (void)checkLocalLTK;	// IMP=0x00100000000fd242
- (void)generateLocalLTKWithAttestation:(_Bool)arg1 forceDCRTRetrievalWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000fcc00
- (void)generateLocalLTKWithAttestation:(_Bool)arg1;	// IMP=0x00100000000fcbec
- (_Bool)loadLocalAttestedLTKIfNecessary;	// IMP=0x00100000000fc957
- (_Bool)loadLocalLTK;	// IMP=0x00100000000fc3be
- (id)deviceIDsMissingSessionKey;	// IMP=0x00100000000fc295
- (void)clearAllDeviceIDsMissingSessionKeys;	// IMP=0x00100000000fc16f
- (void)removeDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000fc029
- (void)addDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000fbea5
- (id)decryptMessage:(id)arg1 authTag:(id)arg2 nonce:(id)arg3 bluetoothID:(id)arg4 cachedDevices:(_Bool)arg5 errorCode:(long long *)arg6;	// IMP=0x00100000000fb3f4
- (_Bool)encryptMessageData:(id)arg1 deviceID:(id)arg2 encryptedMessage:(id *)arg3 authTag:(id *)arg4 nonce:(id *)arg5;	// IMP=0x00100000000fb0e2
- (_Bool)canCreateTokenSessionForDeviceID:(id)arg1;	// IMP=0x00100000000fb098
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 externalACMContext:(id)arg3;	// IMP=0x00100000000fae17
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000fae02
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 usingEscrow:(_Bool)arg3 attestation:(_Bool)arg4;	// IMP=0x00100000000faa44
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000faa2c
- (id)aksRegistrationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000fa890
- (id)aksPairingSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 errorCode:(long long *)arg3 wantsAttestation:(_Bool)arg4;	// IMP=0x00100000000fa609
- (void)consoleUserChanged:(id)arg1;	// IMP=0x00100000000fa4ea
- (void)handleKeyBagLockStateChanged;	// IMP=0x00100000000fa2d8
- (void)screenLockUnlocked:(id)arg1;	// IMP=0x00100000000fa21c
- (void)appleAccountSignedOut:(id)arg1;	// IMP=0x00100000000fa167
- (void)appleAccountSignedIn:(id)arg1;	// IMP=0x00100000000fa10b
- (void)deviceFirstUnlocked:(id)arg1;	// IMP=0x00100000000f9f9c
- (void)handleManagementChanged:(id)arg1;	// IMP=0x00100000000f9e9e
- (void)addObservers;	// IMP=0x00100000000f9d10
- (void)loadLocalUniqueIDIfNeeded;	// IMP=0x00100000000f9c09
@property(readonly, nonatomic) _Bool viewSyncing;
- (void)updateLocalLTK;	// IMP=0x00100000000f9503
- (void)updateLTKs;	// IMP=0x00100000000f944e
- (void)start;	// IMP=0x00100000000f923b
- (id)init;	// IMP=0x00100000000f9069

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

