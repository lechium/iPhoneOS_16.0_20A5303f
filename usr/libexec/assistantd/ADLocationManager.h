//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADGreenTeaLogger, ADPeerLocationConnection, CLInUseAssertion, CLLocation, CLLocationManager, GEOLocationShifter, NSString, SAGetRequestOrigin;
@protocol ADLocationManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface ADLocationManager : NSObject
{
    NSObject<OS_dispatch_queue> *_internalQueue;	// 8 = 0x8
    CLLocationManager *_locationManager;	// 16 = 0x10
    SAGetRequestOrigin *_requestOriginCommand;	// 24 = 0x18
    CDUnknownBlockType _updateCompletion;	// 32 = 0x20
    CLLocation *_lastLocation;	// 40 = 0x28
    CLInUseAssertion *_locationInUseAssertion;	// 48 = 0x30
    unsigned long long _locationInUseAssertionRefCount;	// 56 = 0x38
    id <ADLocationManagerDelegate> _delegate;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_externalQueue;	// 72 = 0x48
    _Bool _needsToSendLocation;	// 80 = 0x50
    _Bool _isNavigating;	// 81 = 0x51
    int _lastLocationAuthorizationStatus;	// 84 = 0x54
    _Bool _lastLocationServicesIsEnabled;	// 88 = 0x58
    _Bool _lastPreciseLocationIsEnabled;	// 89 = 0x59
    _Bool _haveLastAuthorizationAndEnabledValues;	// 90 = 0x5a
    ADPeerLocationConnection *_peerLocationConnection;	// 96 = 0x60
    NSObject<OS_dispatch_source> *_locationTimerSource;	// 104 = 0x68
    NSObject<OS_dispatch_source> *_locationSLATimerSource;	// 112 = 0x70
    GEOLocationShifter *_locationShifter;	// 120 = 0x78
    CLLocation *_lastPeerLocation;	// 128 = 0x80
    ADGreenTeaLogger *_greenTeaLogger;	// 136 = 0x88
}

+ (void)prepareForAssistantEnablementInBackground;	// IMP=0x00200000001372d8
+ (void)getLocationIsRestricted:(CDUnknownBlockType)arg1;	// IMP=0x0010000000131d4b
+ (_Bool)_shouldUseOneshotLocationRequest;	// IMP=0x0010000000131d41
- (void).cxx_destruct;	// IMP=0x002000000013754e
@property(nonatomic) _Bool needsToSendLocation; // @synthesize needsToSendLocation=_needsToSendLocation;
@property(nonatomic) __weak id <ADLocationManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)getRedactedContextForContextSnapshot:(id)arg1 metadata:(id)arg2 privacyPolicy:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001374fd
- (void)releaseLocationInUseAssertionForReason:(id)arg1;	// IMP=0x00100000001370b8
- (void)acquireLocationInUseAssertionForReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000136e92
- (void)stopLocationUpdates;	// IMP=0x0010000000136e1c
- (void)updateLocationForCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000136699
- (void)updateLocationSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000013606e
- (void)updateWithLocation:(id)arg1 locationStatus:(id)arg2;	// IMP=0x0010000000135c94
- (void)_setAuthorizationStatusToAuthorizedAndEnabled;	// IMP=0x0010000000135c7f
- (void)locationManagerDidChangeAuthorization:(id)arg1;	// IMP=0x00100000001354bc
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x0010000000135121
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;	// IMP=0x0010000000134e5a
- (void)peerLocationConnectionSuggestsClearingCachedLocation:(id)arg1;	// IMP=0x0010000000134d73
- (void)peerLocationConnection:(id)arg1 didReceiveUnsolicitedLocation:(id)arg2;	// IMP=0x0010000000134b05
- (double)_preferredPlatformLocationAccuracy;	// IMP=0x0010000000134abe
- (void)_processUpdatedLocation:(id)arg1;	// IMP=0x0010000000134823
- (_Bool)_locationUpdateIsCapableOfSucceeding;	// IMP=0x001000000013481b
- (id)_bestCachedLocation;	// IMP=0x001000000013470b
- (void)_requestLocationForGetRequestOrigin:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000134605
- (void)_requestLocationWithBestAccuracy;	// IMP=0x0010000000134327
- (_Bool)_shouldSendLocationUpdate:(id)arg1 fromLocation:(id)arg2 forCommand:(id)arg3;	// IMP=0x00100000001340b0
- (void)_startMonitoringLocationForGetRequestOrigin:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000133f43
- (void)_startMonitoringLocationWithDesiredAccuracy:(double)arg1;	// IMP=0x0010000000133da6
- (void)_scheduleLocationTimerWithTimeout:(double)arg1;	// IMP=0x00100000001339e9
- (void)_cancelLocationTimer;	// IMP=0x001000000013393b
- (void)_scheduleLocationSLATimer;	// IMP=0x00100000001336ff
- (void)_triggerLocationABCForSubtype:(id)arg1;	// IMP=0x001000000013360c
- (void)_cancelLocationSLATimer;	// IMP=0x001000000013355e
- (void)_clearCompletionState;	// IMP=0x0010000000133525
- (void)_stopMonitoringLocation;	// IMP=0x0010000000133453
- (void)_generateLocationUnknownResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000133434
- (void)_generateLocationTimedOutResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000133415
- (void)_generateLocationWiFiOffResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001333f6
- (void)_generateLocationDeniedResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001333d7
- (void)_generateLocationDisabledResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001333b8
- (void)_generateResponseForGetRequestOriginCommand:(id)arg1 withStatus:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000133266
- (id)_shiftedLocationForGeoCoordinate2D:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 originalLocation:(id)arg3;	// IMP=0x0010000000133190
- (void)_generateResponseForGetRequestOriginCommand:(id)arg1 withUnshiftedLocation:(id)arg2 forceCachedShifting:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001325b3
- (void)navStatusChanged:(id)arg1;	// IMP=0x001000000013254c
- (id)_locationShifter;	// IMP=0x0010000000132511
- (id)_peerLocationConnection;	// IMP=0x00100000001324c3
- (id)_locationManager;	// IMP=0x0010000000132273
- (_Bool)_locationServicesIsEnabled;	// IMP=0x001000000013226a
- (id)lastLocation;	// IMP=0x0010000000132152
- (void)dealloc;	// IMP=0x00100000001320b3
- (id)initWithSerialQueue:(id)arg1;	// IMP=0x0010000000131dd9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

