//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADAudioSessionCoordinator, ADSpeechCompressor, ADSpeechLog, ADSpeechPlaybackSimulator, ADVolumeService, AFAudioPowerUpdater, AFClientConfiguration, AFDictationOptions, AFInstanceContext, CSAudioDeviceInfo, CSAudioSessionController, CSSiriAudioPlaybackService, CSSiriSpeechRecorder, CSSiriSpeechRecordingContext, CSSpeechController, CoreEmbeddedSpeechRecognizer, NSArray, NSError, NSString;
@protocol ADSpeechManagerDelegate, ADVolumeServiceProviding, ADVolumeTracking, AFAudioSessionAssertionAcquisitionService, CSSiriRecordingInfoProviding, CSSiriSpeechCapturing, OS_dispatch_queue;

@interface ADSpeechManager : NSObject
{
    CoreEmbeddedSpeechRecognizer *_interactiveLocalSpeechRecognizer;	// 8 = 0x8
    NSString *_localSpeechRecognizerTask;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    AFInstanceContext *_instanceContext;	// 32 = 0x20
    int _speechState;	// 40 = 0x28
    _Bool _shouldTalkToDelegate;	// 44 = 0x2c
    long long _capturingMode;	// 48 = 0x30
    AFClientConfiguration *_clientConfiguration;	// 56 = 0x38
    CSSiriSpeechRecordingContext *_capturingContext;	// 64 = 0x40
    NSError *_recordingError;	// 72 = 0x48
    id <ADSpeechManagerDelegate> _delegate;	// 80 = 0x50
    CDUnknownBlockType _recordStartedCompletion;	// 88 = 0x58
    CDUnknownBlockType _recordStoppedCompletion;	// 96 = 0x60
    _Bool _releasesAudioSessionWhenRecordingStopped;	// 104 = 0x68
    long long _prepareAudioSystemTransactionCount;	// 112 = 0x70
    _Bool _releasesAudioSessionWhenPrepareAudioSystemDone;	// 120 = 0x78
    ADSpeechLog *_speechLog;	// 128 = 0x80
    CSSpeechController *_speechController;	// 136 = 0x88
    CSAudioSessionController *_audioSessionController;	// 144 = 0x90
    id <CSSiriSpeechCapturing> _currentCapturing;	// 152 = 0x98
    CSSiriSpeechRecorder *_speechRecorder;	// 160 = 0xa0
    ADSpeechPlaybackSimulator *_playbackSimulator;	// 168 = 0xa8
    ADSpeechCompressor *_speechCompressor;	// 176 = 0xb0
    ADVolumeService *_volumeService;	// 184 = 0xb8
    CSSiriAudioPlaybackService *_audioPlaybackService;	// 192 = 0xc0
    id _context;	// 200 = 0xc8
    _Bool _isDriving;	// 208 = 0xd0
    _Bool _isAudioSessionLikelyActive;	// 209 = 0xd1
    _Bool _isReleaseAudioSessionRequired;	// 210 = 0xd2
    _Bool _hasPreparedAudioSystemForPlayback;	// 211 = 0xd3
    CSAudioDeviceInfo *_audioDeviceInfo;	// 216 = 0xd8
    NSString *_recordRoute;	// 224 = 0xe0
    NSString *_deviceIdentifier;	// 232 = 0xe8
    _Bool _hasFetchedSmartSiriVolume;	// 240 = 0xf0
    _Bool _hasUpdatedSiriOutputVolume;	// 241 = 0xf1
    unsigned long long _dirtySiriOutputVolumeHostTime;	// 248 = 0xf8
    _Bool _hasReceivedLastAudioBuffer;	// 256 = 0x100
    NSString *_initialDictationLanguage;	// 264 = 0x108
    NSString *_primaryDictationLanguage;	// 272 = 0x110
    NSArray *_dictationLanguages;	// 280 = 0x118
    AFDictationOptions *_dictationOptions;	// 288 = 0x120
    NSArray *_inlineItemList;	// 296 = 0x128
    AFAudioPowerUpdater *_audioPowerUpdater;	// 304 = 0x130
    ADAudioSessionCoordinator *_audioSessionCoordinator;	// 312 = 0x138
}

+ (void)_detectOnDeviceDictationOrchestrationMismatchForLanguage:(id)arg1 initialLanguage:(id)arg2 eligibleForOnDeviceDictation:(_Bool)arg3 modelType:(id)arg4 onDeviceRequest:(_Bool)arg5 context:(id)arg6;	// IMP=0x00200000002816a2
+ (id)sharedManager;	// IMP=0x001000000027a815
+ (id)_speechCodecError;	// IMP=0x001000000027a7ea
+ (id)_badStateError;	// IMP=0x001000000027a7bf
- (void).cxx_destruct;	// IMP=0x00200000002898f5
@property(readonly, nonatomic) CSSiriAudioPlaybackService *audioPlaybackService; // @synthesize audioPlaybackService=_audioPlaybackService;
@property(readonly, nonatomic) CSAudioSessionController *audioSessionController; // @synthesize audioSessionController=_audioSessionController;
@property(readonly, nonatomic) ADAudioSessionCoordinator *audioSessionCoordinator; // @synthesize audioSessionCoordinator=_audioSessionCoordinator;
@property(readonly, nonatomic) AFAudioPowerUpdater *audioPowerUpdater; // @synthesize audioPowerUpdater=_audioPowerUpdater;
@property(copy, nonatomic) NSArray *inlineItemList; // @synthesize inlineItemList=_inlineItemList;
@property(nonatomic) _Bool isDriving; // @synthesize isDriving=_isDriving;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) AFDictationOptions *dictationOptions; // @synthesize dictationOptions=_dictationOptions;
@property(copy, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *primaryDictationLanguage; // @synthesize primaryDictationLanguage=_primaryDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
- (void)asrBridgeReceivedPartialResult:(id)arg1 language:(id)arg2 tokens:(id)arg3;	// IMP=0x001000000028969c
- (void)asrBridgeReceivedFinalResult:(id)arg1 speechPackage:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0010000000289552
- (void)asrBridgeReceivedEagerRecognitionCandidate:(id)arg1 rawRecognitionResult:(id)arg2 duration:(double)arg3 sessionUUID:(id)arg4;	// IMP=0x0010000000289407
@property(readonly, nonatomic) id <AFAudioSessionAssertionAcquisitionService> audioSessionAssertionAcquisitionService;
- (void)_updateSiriOutputVolume:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002891a2
- (void)_fetchSmartSiriVolume:(_Bool)arg1;	// IMP=0x001000000028901c
- (id)_volumeService;	// IMP=0x0010000000288ecf
- (_Bool)_supportsVolumeService;	// IMP=0x0010000000288eb4
- (void)setEARLanguageDetectorSpeechRequestId:(id)arg1;	// IMP=0x0010000000288dbc
- (void)_addRecordStoppedCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000288cc0
- (void);	// IMP=0x0010000000288c20
- (void)setEndpointerThreshold:(double)arg1;	// IMP=0x0010000000288b7d
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x0010000000288aa1
@property(readonly, nonatomic) id <CSSiriRecordingInfoProviding> recordingInfoProvider;
@property(readonly, nonatomic) id <ADVolumeServiceProviding> volumeServiceProvider;
@property(readonly, nonatomic) id <ADVolumeTracking> volumeTracker;
- (void)getLastStartpointTimestampAndCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x00100000002889aa
- (void)stopFingerprintingForSuccess:(_Bool)arg1;	// IMP=0x0010000000288901
- (void)updateSpeechOptions:(id)arg1;	// IMP=0x0010000000288814
- (void)playRecordingStartAlert;	// IMP=0x0010000000288788
- (void)setSpeechRecognizedContext:(id)arg1;	// IMP=0x0010000000288646
- (void)enforcePreviousEndpointHint;	// IMP=0x00100000002885ba
- (void)updateEndpointHintForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002884ca
- (void)updateOptionsAfterRecognitionForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;	// IMP=0x001000000028844e
- (void)updateServerEndpointFeatures:(id)arg1;	// IMP=0x0010000000288372
- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;	// IMP=0x00100000002882c6
- (void)setFingerprintWasRecognized;	// IMP=0x001000000028825e
- (void)suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:(CDUnknownBlockType)arg1;	// IMP=0x001000000028810d
- (_Bool)_endSessionIfIdle;	// IMP=0x001000000028801d
- (void)_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000002879e6
- (void)endSession:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002877b9
- (void)endSession;	// IMP=0x00100000002871a6
- (void)setSuppressAudioInterruptionEndedNotifications:(_Bool)arg1;	// IMP=0x0010000000287134
- (void)_stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0010000000286da6
- (void)stopSpeechCaptureIfFingerprintingOnlyWithOptions:(id)arg1;	// IMP=0x0010000000286c18
- (void)stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0010000000286a7e
- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;	// IMP=0x0010000000286611
- (void)startSpeechCaptureWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 isDictation:(_Bool)arg3 sessionUUID:(id)arg4;	// IMP=0x0010000000286165
- (void)addRecordedDictationAudioSampleData:(id)arg1;	// IMP=0x0010000000286089
- (void)startRecordedDictationCaptureWithSessionUUID:(id)arg1 narrowband:(_Bool)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x0010000000285ca0
- (void)_startCaptureForMode:(long long)arg1 options:(id)arg2 context:(id)arg3;	// IMP=0x0010000000284c67
- (id)_startFixedPriorityCaptureForMode:(long long)arg1 options:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0010000000284a5d
- (void)startAcousticIDCaptureWithOptions:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0010000000284a37
- (id)startSpeechCaptureForDictationWithOptions:(id)arg1 sessionUUID:(id)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x00100000002848ae
- (id)startSpeechCaptureForRequestWithOptions:(id)arg1 sessionUUID:(id)arg2 language:(id)arg3;	// IMP=0x0010000000284738
- (_Bool)isStopped;	// IMP=0x0010000000284690
- (_Bool)isCapturing;	// IMP=0x00100000002845e4
- (void)setClientConfiguration:(id)arg1;	// IMP=0x00100000002844e8
- (void)setDelegate:(id)arg1;	// IMP=0x0010000000284444
- (void)_prepareAudioSystemWithContext:(id)arg1 audioSessionAssertion:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000282631
- (void)prepareAudioSystemWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002822da
- (void)preheatWithOptions:(id)arg1;	// IMP=0x0010000000281f8c
- (void)eagerlyInitializeAudioRecording;	// IMP=0x0010000000281f24
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x00100000002813dc
- (void)localSpeechRecognizer:(id)arg1 didProduceLoggablePackage:(id)arg2;	// IMP=0x00100000002811cc
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x0010000000280fbc
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x0010000000280e63
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x0010000000280dc7
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x0010000000280ba8
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;	// IMP=0x0010000000280b8b
- (id)_recordingInfo;	// IMP=0x0010000000280b3b
- (id)getRecordingInfo;	// IMP=0x0010000000280a1f
- (void)getRecordingInfoUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000028094e
- (void)getVolumeServiceUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000028087d
- (void)setDirtySiriOutputVolumeHostTime:(unsigned long long)arg1;	// IMP=0x0010000000280773
- (void)audioSessionCoordinator:(id)arg1 releaseAudioSessionWithContext:(id)arg2;	// IMP=0x00100000002804c3
- (void)audioSessionCoordinator:(id)arg1 prepareAudioSessionWithContext:(id)arg2;	// IMP=0x00100000002800da
- (void)speechCapturingDidProvideConfidenceScores:(id)arg1 classification:(unsigned long long)arg2 classifiedUser:(id)arg3 unknownUserScore:(long long)arg4 duration:(long long)arg5 version:(long long)arg6 thresholdingType:(id)arg7 assetVersion:(id)arg8;	// IMP=0x001000000027fff0
- (void)speechCapturing:(id)arg1 languageDetectorDidFail:(id)arg2;	// IMP=0x001000000027ff94
- (void)speechCapturing:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(_Bool)arg4;	// IMP=0x001000000027ff79
- (void)speechCapturing:(id)arg1 didLoseAudioSessionOwnerOrMediaServices:(id)arg2;	// IMP=0x001000000027feb9
- (void)speechCapturing:(id)arg1 didInterruptAudioSession:(id)arg2;	// IMP=0x001000000027fdf9
- (void)speechCapturing:(id)arg1 didSetAudioSessionActive:(_Bool)arg2;	// IMP=0x001000000027fd02
- (void)speechCapturing:(id)arg1 willSetAudioSessionActive:(_Bool)arg2;	// IMP=0x001000000027fc12
- (void)speechCapturingDidRequestUpdateSiriOutputVolume:(id)arg1;	// IMP=0x001000000027fb35
- (void)speechCapturingDidRequestShutdownUI:(id)arg1;	// IMP=0x001000000027fa99
- (void)speechCapturingDidRequestQuickStop:(id)arg1;	// IMP=0x001000000027f9fd
- (void)speechCapturing:(id)arg1 performTwoShotPromptWithType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000027f9e5
- (void)speechCapturing:(id)arg1 didDetectEndpointAtTime:(double)arg2;	// IMP=0x001000000027f9d3
- (void)speechCapturing:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x001000000027f9c1
- (void)speechCapturing:(id)arg1 didFinishWritingAudioFile:(id)arg2 error:(id)arg3;	// IMP=0x001000000027f9a9
- (void)speechCapturingDidDelayEndpointForMusic:(id)arg1;	// IMP=0x001000000027f997
- (void)speechCapturingDidDetectMusic:(id)arg1;	// IMP=0x001000000027f985
- (void)speechCapturing:(id)arg1 didReceiveFingerprint:(id)arg2 duration:(double)arg3;	// IMP=0x001000000027f970
- (void)speechCapturingDidRecordPCMAudioData:(id)arg1;	// IMP=0x001000000027f8e4
- (void)speechCapturingDidRecordSpeechPackets:(id)arg1 atTimestamp:(double)arg2 totalPacketCount:(long long)arg3;	// IMP=0x001000000027f793
- (void)speechCapturingDidStopRecordingWithError:(id)arg1 endpointMode:(long long)arg2 totalPacketCount:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x001000000027f65e
- (void)speechCapturingWillStopRecordingWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000027f64c
- (void)speechCapturingWillStopRecording;	// IMP=0x001000000027f635
- (void)speechCapturingDidReceiveLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x001000000027f590
- (void)speechCapturingDidUpdateAudioDeviceInfo:(id)arg1;	// IMP=0x001000000027f57e
- (void)speechCapturingDidUpdateRecordingInfo:(id)arg1;	// IMP=0x001000000027f4d8
- (void)speechCapturingDidStartRecordingSuccessfully:(_Bool)arg1 error:(id)arg2 withInfo:(id)arg3;	// IMP=0x001000000027dedc
- (void)_updateCapturingStateWithOptions:(id)arg1;	// IMP=0x001000000027ddeb
- (void)_recordingStoppedWithError:(id)arg1 totalPacketCount:(long long)arg2 endpointMode:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x001000000027daee
- (void)_lastAudioBufferReceivedWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x001000000027d9a5
- (void)_cancelRecordingWithError:(id)arg1 suppressAlert:(_Bool)arg2;	// IMP=0x001000000027d828
- (void)_tellDelegateSpeechWillStopRecordingWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000027d7e3
- (void)_tellDelegateDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x001000000027d75f
- (void)_tellDelegateDidSetAudioSessionActive:(_Bool)arg1;	// IMP=0x001000000027d71a
- (void)_tellDelegateWillSetAudioSessionActive:(_Bool)arg1;	// IMP=0x001000000027d6d5
- (void)_tellDelegateShutdownUIWasRequested;	// IMP=0x001000000027d69b
- (void)_tellDelegateQuickStopWasRequested;	// IMP=0x001000000027d661
- (void)_tellDelegateToPerformTwoShotPromptWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000027d5fc
- (void)_tellDelegateSpeechEndpointWasDetectedAtTime:(double)arg1;	// IMP=0x001000000027d5b0
- (void)_tellDelegateSpeechStartpointWasDetectedAtTime:(double)arg1;	// IMP=0x001000000027d564
- (void)_tellDelegateAudioFileDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x001000000027d4e4
- (void)_tellDelegateAboutInputAveragePower:(float)arg1 peak:(float)arg2;	// IMP=0x001000000027d45e
- (void)_tellDelegateEndpointWasDelayedForMusic;	// IMP=0x001000000027d3f8
- (void)_tellDelegateMusicWasDetected;	// IMP=0x001000000027d392
- (void)_tellDelegateAboutFingerprint:(id)arg1 duration:(double)arg2;	// IMP=0x001000000027d303
- (void)_tellDelegateAboutSpeechPackets:(id)arg1 atTimestamp:(double)arg2 count:(long long)arg3;	// IMP=0x001000000027d263
- (void)_tellDelegateUpdateAudioInfo:(id)arg1;	// IMP=0x001000000027d1da
- (void)_tellDelegateSpeechStartedWithRecordingInfo:(id)arg1;	// IMP=0x001000000027d151
- (void)_tellDelegateSpeechWillBeginWithTimestamp:(double)arg1 isFromFile:(_Bool)arg2 isAudioPowerUpdateDisabled:(_Bool)arg3;	// IMP=0x001000000027d062
- (void)_tellDelegateSpeechRecognitionUpdateWillBegin;	// IMP=0x001000000027cff8
- (void)_tellDelegateSpeechShouldPreheatWithRecordingInfo:(id)arg1;	// IMP=0x001000000027cf6f
- (void)_tellDelegateSpeechFinished;	// IMP=0x001000000027ceea
- (void)_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x001000000027ce49
- (void)_tellDelegateSpeechFailedWithError:(id)arg1;	// IMP=0x001000000027cdb0
- (void)_tellDelegateSpeechCanceled;	// IMP=0x001000000027cd24
- (void)_cleanUpDelegateInfo;	// IMP=0x001000000027cc67
- (void)resetLocalRecognizer;	// IMP=0x001000000027cbb2
- (void)cancelLocalRecognitionIfActive;	// IMP=0x001000000027ca70
- (_Bool)isLocallyRecognizingInSiriMiniMode;	// IMP=0x001000000027c9aa
- (_Bool)isLocallyRecognizingInDictationMode;	// IMP=0x001000000027c8e9
- (_Bool)isLocallyRecognizing;	// IMP=0x001000000027c840
- (void)disableDESWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000027c764
- (void)getOfflineDictationStatusIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000027c678
- (id)_interactiveLocalSpeechRecognizer;	// IMP=0x001000000027c580
- (void)_fetchAssetsForLanaugeOrEnablementNotification:(id)arg1;	// IMP=0x001000000027c269
- (void)dictationSessionDidComplete;	// IMP=0x001000000027bdb4
- (_Bool)_releaseSession;	// IMP=0x001000000027b8c7
- (void)_updateRecordRoute:(id)arg1 andDeviceIdentifier:(id)arg2;	// IMP=0x001000000027b6de
- (void)_updateAudioDeviceInfo:(id)arg1;	// IMP=0x001000000027b56f
- (void)_updateSpeechState:(int)arg1;	// IMP=0x001000000027b374
- (id)_currentSpeechCaptureSource;	// IMP=0x001000000027b28f
- (id)_speechCompressor;	// IMP=0x001000000027b0f0
- (id)endpointerModelVersion;	// IMP=0x001000000027b0d7
- (void)getSpeechRecorderVTSatScore:(CDUnknownBlockType)arg1;	// IMP=0x001000000027afdc
- (id)_speechRecorder;	// IMP=0x001000000027ae2b
- (void)dealloc;	// IMP=0x001000000027ad91
- (id)_initWithInstanceContext:(id)arg1;	// IMP=0x001000000027a8bb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

