//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFInstanceContext, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol AFBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <AFBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    AFInstanceContext *_instanceContext;	// 168 = 0xa8
    _Bool adSpeechSessionEnded;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0020000000272445
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x001000000027235c
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000027225f
- (oneway void)emitHomeMetricInvocationEvent;	// IMP=0x001000000027221b
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x0010000000272215
- (oneway void)_refreshAssistantValidation;	// IMP=0x00100000002721d1
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x0010000000272150
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002720da
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002720cf
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x0010000000272060
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000271ed2
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x0010000000271de8
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000271972
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000027148a
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000271475
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000271288
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000271212
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x00100000002711bf
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x001000000027106b
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x0010000000270f68
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x0010000000270e8a
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x0010000000270e14
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x0010000000270d9c
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x0010000000270d02
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000270c50
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000270917
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000270487
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002703fd
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x00100000002703b9
- (oneway void)recordCancellationMetrics;	// IMP=0x0010000000270375
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x00100000002702ff
- (oneway void)telephonyRequestCompleted;	// IMP=0x00100000002702bb
- (oneway void)prepareForPhoneCall;	// IMP=0x0010000000270277
- (oneway void)setAlertContextDirty;	// IMP=0x0010000000270233
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x00100000002701a9
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x0010000000270192
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x00100000002700f9
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x0010000000270083
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x001000000027000d
- (oneway void)rollbackClearContext;	// IMP=0x001000000026ff3d
- (oneway void)clearContext;	// IMP=0x001000000026fe5a
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000026fdb9
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000026fcb3
- (oneway void)requestShouldSpeakStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000026fc5b
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x001000000026fb49
- (oneway void)cancelSpeech;	// IMP=0x001000000026fa62
- (oneway void)rollbackRequest;	// IMP=0x001000000026f98b
- (oneway void)cancelRequestForReason:(long long)arg1 withError:(id)arg2;	// IMP=0x001000000026f814
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x001000000026f705
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000026f651
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000026f59d
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x001000000026f53a
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 sessionUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000026f189
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000026ef81
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000026edd9
- (oneway void)willPresentUsefulUserResultAtDate:(id)arg1;	// IMP=0x001000000026eca7
- (oneway void)endSession;	// IMP=0x001000000026eaf5
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x001000000026e9da
- (oneway void)didDismissUI;	// IMP=0x001000000026e870
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000026e638
- (oneway void)setModesConfiguration:(id)arg1;	// IMP=0x001000000026e5c2
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x001000000026e56f
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x001000000026e517
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x001000000026e4d3
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000026e408
- (oneway void)forceAudioSessionActiveWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000026e207
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000026e189
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x001000000026e10a
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x001000000026e04f
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x001000000026df72
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x001000000026d671
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x001000000026d56c
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x001000000026d460
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x001000000026d384
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x001000000026d2a8
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerResetNotification:(id)arg2;	// IMP=0x001000000026d10b
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerLostNotification:(id)arg2;	// IMP=0x001000000026cfde
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000026ce41
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000026cd14
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionRouteChangeNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000026cc6b
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionInterruptionNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000026ca22
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x001000000026c999
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x001000000026c93c
- (_Bool)adWaitingForAudioFile;	// IMP=0x001000000026c934
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000026c5ce
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x001000000026c310
- (void)adSpeechLocalRecognitionDidSucceedWithSessionUUID:(id)arg1;	// IMP=0x001000000026c30a
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000026c205
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x001000000026c129
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 utterances:(id)arg2 nluResult:(id)arg3 sessionUUID:(id)arg4 refId:(id)arg5;	// IMP=0x001000000026c123
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000026c11d
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x001000000026bfaa
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000026be37
- (void)adSpeechRecordingWillStopWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000026bbe1
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x001000000026b817
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x001000000026b4a7
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x000000000026b137
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x001000000026ad72
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x001000000026a91c
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x001000000026a5d8
- (void)_updateShouldSpeak;	// IMP=0x001000000026a4b9
- (_Bool)_shouldSpeak;	// IMP=0x001000000026a496
- (void)_computeShouldSpeak;	// IMP=0x001000000026a2ca
- (void)_unregisterForRingerStateNotification;	// IMP=0x001000000026a2a6
- (void)_registerForRingerStateNotification;	// IMP=0x001000000026a1ed
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x001000000026a1aa
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x001000000026a195
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x001000000026a17c
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x001000000026a0a0
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x0010000000269fc4
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0010000000269f24
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0010000000269e84
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000269c80
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x0010000000269be0
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x0010000000269b75
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x0010000000269a99
- (void)adInvalidateCurrentUserActivity;	// IMP=0x0010000000269a0d
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x0010000000269901
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x0010000000269861
- (void)adMusicWasDetected;	// IMP=0x00100000002697d5
- (void)adAcousticIDRequestWillStart;	// IMP=0x0010000000269749
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x00100000002696a9
- (void)adRequestRequestedDismissAssistantWithReason:(long long)arg1;	// IMP=0x0010000000269609
- (void)adRequestRequestedDismissAssistant;	// IMP=0x001000000026957d
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x0010000000269471
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x0010000000269395
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x0010000000269269
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x001000000026916a
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0010000000268fd2
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000268df5
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000268bff
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002689d2
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x00100000002688cc
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x001000000026851b
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x00100000002682f8
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000267e85
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x0010000000267dae
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x0010000000267895
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x0010000000267792
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x00100000002673e5
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x00100000002672e2
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x00100000002671d6
- (void)_speechRecordingDidFinish;	// IMP=0x0010000000267144
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x0010000000266eec
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000266e54
- (id)_serviceDelegate;	// IMP=0x0010000000266e3e
- (void)connectionDisconnected;	// IMP=0x0010000000266b0e
- (void)dealloc;	// IMP=0x00100000002669d0
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x001000000026659b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

