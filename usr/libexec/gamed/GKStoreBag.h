//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GKActivity, GKDispatchGroup, NSDate, NSDictionary, NSError, NSNumber, NSSet, NSURL;
@protocol OS_dispatch_queue;

@interface GKStoreBag : NSObject
{
    NSObject<OS_dispatch_queue> *_syncQueue;	// 8 = 0x8
    GKDispatchGroup *_fetchGroup;	// 16 = 0x10
    int _playerIDHashMod;	// 24 = 0x18
    int _playerIDHashAdd;	// 28 = 0x1c
    NSURL *_url;	// 32 = 0x20
    NSError *_error;	// 40 = 0x28
    NSSet *_APNSRequired;	// 48 = 0x30
    NSSet *_signatureRequired;	// 56 = 0x38
    NSSet *_responseSignatureRequired;	// 64 = 0x40
    NSNumber *_metricsPassthroughPercentage;	// 72 = 0x48
    NSDictionary *_internalBag;	// 80 = 0x50
    NSDate *_expiration;	// 88 = 0x58
    double _mescalSetupStartTimeStamp;	// 96 = 0x60
    GKActivity *_activity;	// 104 = 0x68
}

+ (void)addAuthHeadersToRequest:(id)arg1;	// IMP=0x00400000000d01ee
+ (id)deviceInfo;	// IMP=0x00100000000d0177
+ (id)appleIdSession;	// IMP=0x00100000000d011b
+ (id)storeBagURLForEnvironment:(long long)arg1;	// IMP=0x00100000000cd6f8
+ (id)storeBagForURL:(id)arg1;	// IMP=0x00100000000cba9d
+ (id)storeBagForEnvironment:(long long)arg1;	// IMP=0x00100000000cba60
@property(retain, nonatomic) GKActivity *activity; // @synthesize activity=_activity;
@property(nonatomic) double mescalSetupStartTimeStamp; // @synthesize mescalSetupStartTimeStamp=_mescalSetupStartTimeStamp;
@property(retain, nonatomic) NSDate *expiration; // @synthesize expiration=_expiration;
@property(retain, nonatomic) NSDictionary *internalBag; // @synthesize internalBag=_internalBag;
@property(retain, nonatomic) NSNumber *metricsPassthroughPercentage; // @synthesize metricsPassthroughPercentage=_metricsPassthroughPercentage;
@property(retain) NSSet *responseSignatureRequired; // @synthesize responseSignatureRequired=_responseSignatureRequired;
@property(retain) NSSet *signatureRequired; // @synthesize signatureRequired=_signatureRequired;
@property(retain) NSSet *APNSRequired; // @synthesize APNSRequired=_APNSRequired;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (id);	// IMP=0x00100000000d3bfd
- (void)readDataForURL:(id)arg1 postData:(id)arg2 client:(id)arg3 credential:(id)arg4 includeUDID:(_Bool)arg5 includeAPNS:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000000d33fe
- (void)readDataForBagKey:(id)arg1 method:(id)arg2 postData:(id)arg3 client:(id)arg4 credential:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00100000000d318d
- (void)writeDataForBagKey:(id)arg1 postData:(id)arg2 client:(id)arg3 credential:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d2f7b
- (void)_loadDataForBagKey:(id)arg1 method:(id)arg2 postData:(id)arg3 client:(id)arg4 credential:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00100000000d1a21
- (id)_networkSynchonizationQueue;	// IMP=0x00100000000d19d5
- (_Bool)isLoadValidForBagKey:(id)arg1 date:(id)arg2;	// IMP=0x00100000000d1972
- (void)invalidateBagKeys:(id)arg1;	// IMP=0x00100000000d17c2
- (id)_bagKeyValidationDict;	// IMP=0x00100000000d1766
- (void)_sendOneAsyncTryWithRequest:(id)arg1 responseMustBeSigned:(_Bool)arg2 session:(id)arg3 retryCount:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d044d
- (void)_sendAsynchronousRequest:(id)arg1 responseMustBeSigned:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d02b3
- (id)requestWithURL:(id)arg1 method:(id)arg2 playerID:(id)arg3 authToken:(id)arg4 pushToken:(id)arg5 client:(id)arg6 postData:(id)arg7 includeUDID:(_Bool)arg8 includeAPNS:(_Bool)arg9 sapSession:(id)arg10;	// IMP=0x00100000000cffda
- (void)signRequest:(id)arg1 sapSession:(id)arg2 postData:(id)arg3;	// IMP=0x00100000000cfd83
- (int)hashForPlayerID:(id)arg1;	// IMP=0x00100000000cfd4a
- (void)_updatePlayerIDHashParameters;	// IMP=0x00100000000cfc84
- (void)updateURLPatternCache;	// IMP=0x00100000000cf594
- (struct __SecTrust *)_createTrustForCertificates:(id)arg1 host:(id)arg2;	// IMP=0x00100000000cee4d
- (id)_storeBagForData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000ce5e4
- (_Bool)_checkData:(id)arg1 againstSignature:(id)arg2 withTrust:(struct __SecTrust *)arg3;	// IMP=0x00100000000ce2b4
- (long long)_scoresThrottleThreshold;	// IMP=0x00100000000ce271
- (long long)scoresThrottleThreshold;	// IMP=0x00100000000ce1a1
- (long long)_achievementsThrottleThreshold;	// IMP=0x00100000000ce15e
- (long long)achievementsThrottleThreshold;	// IMP=0x00100000000ce08e
- (long long)_gkSessionRateLimiting;	// IMP=0x00100000000ce04b
- (long long)gkSessionRateLimiting;	// IMP=0x00100000000cdf7b
- (_Bool)_shouldUseHTTPPipelining;	// IMP=0x00100000000cdf14
- (_Bool)shouldUseHTTPPipelining;	// IMP=0x00100000000cde45
- (id)omnitureQueryParametersForContext:(id)arg1;	// IMP=0x00100000000cddfe
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x00100000000cdc75
- (void)getValuesForKeys:(id)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000cda6b
- (void)getURLForKey:(id)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000cd80c
- (void)_setupResponseSignatureRequired:(id)arg1;	// IMP=0x00100000000cd66d
- (void)_metricsThrottleThreshold:(id)arg1;	// IMP=0x00100000000cd62f
- (void)_setupSignatureRequired:(id)arg1;	// IMP=0x00100000000cd5a4
- (void)_setupAPNSRequired:(id)arg1;	// IMP=0x00100000000cd45f
- (void)getBagWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cd20b
- (void)_fetchBagWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ccc20
- (void)_fetchFromServerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cc387
- (void)_fetchFromCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cbf28
- (_Bool)_isLastProtocolVersionUsedValid;	// IMP=0x00100000000cbeb7
- (_Bool)_isFetching;	// IMP=0x00100000000cbea9
- (_Bool)_isValidAndNotExpired;	// IMP=0x00100000000cbe63
- (_Bool)_isValid;	// IMP=0x00100000000cbe46
- (_Bool)_isExpired;	// IMP=0x00100000000cbe24
- (void)dealloc;	// IMP=0x00100000000cbda0
- (id)initWithURL:(id)arg1;	// IMP=0x00100000000cbd03
- (id)description;	// IMP=0x00100000000cb9e9
- (void)performAsync:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cb9d8
- (void)performSync:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cb8cc

@end

