//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, GKCloudPlayer, MISSING_TYPE, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface GKCloudGameSession : NSObject
{
    CKRecord *_record;	// 8 = 0x8
    NSDictionary *_playersByIdentifier;	// 16 = 0x10
    GKCloudPlayer *_owner;	// 24 = 0x18
    NSURL *_url;	// 32 = 0x20
}

+ (void)badgeCountForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x002000000015fade
+ (void)updateBadgeCountsForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2;	// IMP=0x001000000015f6df
+ (void)updateBadgeCountsForContainerName:(id)arg1;	// IMP=0x001000000015f6cb
+ (void)deleteInviteRecordWithRecordID:(id)arg1 fromDatabase:(id)arg2;	// IMP=0x001000000015f32c
+ (void)searchAndSaveIdentityForRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000015dbe3
+ (id)lastSevenDigits:(id)arg1;	// IMP=0x001000000015db7b
+ (id)formattedContact:(id)arg1;	// IMP=0x001000000015da05
+ (_Bool)shouldRetryForError:(id)arg1 andRetryCount:(int)arg2;	// IMP=0x001000000015d547
+ (void)saveInviteRecord:(id)arg1 database:(id)arg2 retryCount:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000015c83c
+ (void)getAssociatedAccountsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000015c5f4
+ (id)msgServiceQueue;	// IMP=0x001000000015c59d
+ (void)generateAndStoreInviteBulletinForRecord:(id)arg1 database:(id)arg2;	// IMP=0x001000000015b899
+ (id)packFakeTurnBasedBulletinWithZoneData:(id)arg1;	// IMP=0x001000000015b312
+ (id)packFakeRealTimeBulletinWithZoneData:(id)arg1;	// IMP=0x001000000015a77a
+ (void)reportPlayerStateChangesToClients:(id)arg1 forUpdatedSession:(id)arg2 oldSession:(id)arg3;	// IMP=0x00100000001592fe
+ (void)openStoreForBundleID:(id)arg1;	// IMP=0x0010000000157bea
+ (void)launchOrOpenAppStoreForBundleID:(id)arg1;	// IMP=0x0010000000157b9c
+ (void)acceptShareMetadata:(id)arg1 retryCount:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001573a7
+ (void)showAcceptAlertWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000157222
+ (void)handleLegacyShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000156736
+ (void)handleSessionShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000155e8b
+ (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000015569f
+ (void)acceptShareURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000155325
+ (void)saveInformationForPrimaryUserForSessionWithShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000154a12
+ (void)fetchShareMetadataForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001545af
+ (void)fetchShareRecordsWithRecordIDs:(id)arg1 inDatabase:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000154486
+ (id)cloudKitOperationConfigurationForSocialGamingSessionsContainer;	// IMP=0x00100000001532d7
+ (id)cloudKitOperationConfigurationForContainer:(id)arg1;	// IMP=0x001000000015324d
+ (MISSING_TYPE *)subscribeToAllDBwithHandler: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000152d4c
+ (void)getZoneNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000015276f
+ (void)createZoneWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000015257f
+ (void)bundleIDsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000015137f
+ (void)removeSessionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000150b46
+ (void)createSessionWithContainerName:(id)arg1 title:(id)arg2 maxConnectedPlayers:(long long)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000014feee
+ (_Bool)isCloudDriveEnabledForBundleID:(id)arg1;	// IMP=0x001000000014fbc8
+ (id)databaseForZoneID:(id)arg1;	// IMP=0x001000000014fb7c
+ (id)databaseForSession:(id)arg1;	// IMP=0x001000000014fb2d
+ (id)sharedDatabase;	// IMP=0x001000000014facf
+ (id)privateDatabase;	// IMP=0x001000000014fa71
+ (_Bool)isOwnZoneID:(id)arg1;	// IMP=0x001000000014f952
+ (_Bool)isOwnRecordID:(id)arg1;	// IMP=0x001000000014f8fc
+ (id)recordIDForSessionIdentifier:(id)arg1;	// IMP=0x001000000014f6ad
+ (id)sessionIdentifierForRecordID:(id)arg1;	// IMP=0x001000000014f4ca
+ (id)allowedCharacterSet;	// IMP=0x001000000014f409
+ (void)getFriendPlayersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014ed8e
+ (void)updateFriendRecordIfNeeded;	// IMP=0x001000000014e551
+ (void)updateFriendsWithRecord:(id)arg1;	// IMP=0x001000000014de73
+ (void)updateCacheForFriendZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014d911
+ (void)updatePlayersForSessions:(id)arg1 sharesByRecordID:(id)arg2 inDatabase:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000014c3bd
+ (void)primaryPlayerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014c2fc
+ (id)playerIdentifierForUserRecordName:(id)arg1;	// IMP=0x001000000014c22f
+ (id)localPlayerAlias;	// IMP=0x001000000014bff2
+ (void)determinePlayerChangesIn:(id)arg1 newSession:(id)arg2 notifyClients:(id)arg3;	// IMP=0x001000000014b7eb
+ (void)reportChangesForSessions:(id)arg1 shareChangedSessions:(id)arg2 removedSessions:(id)arg3 zoneID:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000014a863
+ (id)allChangedSessionsFromRecordChangedSessions:(id)arg1 shareChangedSessions:(id)arg2;	// IMP=0x001000000014a3b7
+ (void)updateCacheForDatabase:(id)arg1 zoneIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000148b59
+ (void)updateCacheForDatabaseScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001474b6
+ (void)updateCacheForZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001470e3
+ (void)updateSessionCacheDatabasesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000146d1d
+ (void)updateSessionCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001468d3
+ (void)updateUserWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000146861
+ (void)fetchUserRecordIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001467e4
+ (id)friendEmailsByID;	// IMP=0x0010000000146794
+ (void)sessionForShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001466f8
+ (void)sessionsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000146342
+ (void)sessionForIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000145f1e
+ (id)cacheQueue;	// IMP=0x0010000000145ec7
+ (id)sessionCache;	// IMP=0x0010000000145e72
+ (id)AES128Operation:(unsigned int)arg1 key:(id)arg2 data:(id)arg3;	// IMP=0x0010000000145d1f
+ (id)AES128DecryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x0010000000145d05
+ (id)AES128EncryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x0010000000145cee
+ (id)playerIdentifierForObfuscatedIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x0010000000145bed
+ (id)obfuscatedIdentifierForPlayerIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x0010000000145b02
+ (id)mutablePlistFromPlayerStatesData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000144cfd
+ (_Bool)supportsSecureCoding;	// IMP=0x001000000014418f
- (void).cxx_destruct;	// IMP=0x0020000000160cf0
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSDictionary *playersByIdentifier; // @synthesize playersByIdentifier=_playersByIdentifier;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void)setBadged:(_Bool)arg1 forPlayerIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000016031b
- (void)saveConnectionState:(long long)arg1 forPlayerWithID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000159e84
- (void)tempEmailFixForPlayerID:(id)arg1;	// IMP=0x0010000000159cfd
@property(readonly, nonatomic) NSArray *connectedPlayerIDs;
- (void)removePlayers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000158688
- (void)deleteShareWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001582db
- (void)fetchShareRecordWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000154290
- (void)saveShare:(id)arg1 isNewShare:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000153dff
- (void)setupShareWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000153b98
- (void)getShareURLWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001533b4
- (void)saveWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000015227b
- (void)saveData:(id)arg1 changeTag:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001519cb
@property(readonly, nonatomic) NSString *containerName;
- (id)playersForGKGameSession;	// IMP=0x001000000014d2dd
- (id)players;	// IMP=0x001000000014d28d
- (void)setPlayers:(id)arg1;	// IMP=0x001000000014d084
- (void)updatePlayersWithIdentities:(id)arg1;	// IMP=0x001000000014cd7b
- (id)createGKGameSession;	// IMP=0x0010000000145423
@property(retain, nonatomic) NSMutableDictionary *nicknamesByIdentifier; // @dynamic nicknamesByIdentifier;
@property(retain, nonatomic) NSMutableDictionary *emailsByCKID;
@property(readonly, nonatomic) NSDictionary *playersByEmail;
- (id)playerStates;	// IMP=0x0010000000144d4d
- (void)setPlayerStates:(id)arg1;	// IMP=0x0010000000144c84
@property(readonly, nonatomic) NSString *serverChangeTag;
@property(readonly, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property(readonly, nonatomic) NSDate *lastModifiedDate;
@property(retain, nonatomic) NSData *data;
@property(nonatomic) long long maxConnectedPlayers;
@property(retain, nonatomic) NSString *title;
@property(readonly, nonatomic) NSString *identifier;
- (_Bool)isOwnedByUser;	// IMP=0x0010000000144665
- (id)description;	// IMP=0x0010000000144530
- (void)encodeWithCoder:(id)arg1;	// IMP=0x001000000014444d
- (id)initWithCoder:(id)arg1;	// IMP=0x0010000000144197
- (id)initWithRecord:(id)arg1;	// IMP=0x0010000000144127
- (id)initWithContainerName:(id)arg1;	// IMP=0x0010000000144073

@end

