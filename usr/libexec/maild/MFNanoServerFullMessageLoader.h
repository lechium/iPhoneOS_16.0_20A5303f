//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSOperationQueue;
@protocol OS_dispatch_queue;

@interface MFNanoServerFullMessageLoader : NSObject
{
    _Bool _isProtectedDataAvailable;	// 8 = 0x8
    _Bool _isNetworkUp;	// 9 = 0x9
    _Bool _isRetryScheduled;	// 10 = 0xa
    NSMutableArray *_requests;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_privateQueue;	// 32 = 0x20
    NSOperationQueue *_operationQueue;	// 40 = 0x28
    id _networkObserverId;	// 48 = 0x30
    NSMutableDictionary *_failedMessageIdsByRequest;	// 56 = 0x38
    double _currentBackoff;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00200000000a76e2
@property(nonatomic) double currentBackoff; // @synthesize currentBackoff=_currentBackoff;
@property(nonatomic) _Bool isRetryScheduled; // @synthesize isRetryScheduled=_isRetryScheduled;
@property(retain, nonatomic) NSMutableDictionary *failedMessageIdsByRequest; // @synthesize failedMessageIdsByRequest=_failedMessageIdsByRequest;
@property(nonatomic) _Bool isNetworkUp; // @synthesize isNetworkUp=_isNetworkUp;
@property(nonatomic) _Bool isProtectedDataAvailable; // @synthesize isProtectedDataAvailable=_isProtectedDataAvailable;
@property(retain, nonatomic) id networkObserverId; // @synthesize networkObserverId=_networkObserverId;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *privateQueue; // @synthesize privateQueue=_privateQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSMutableArray *requests; // @synthesize requests=_requests;
- (id)_libraryMessagesKeyedByStore:(id)arg1;	// IMP=0x00100000000a7317
- (void)_libraryAvailabilityChanged;	// IMP=0x00100000000a724c
- (void)resetExponentialBackoff;	// IMP=0x00100000000a722a
- (double)_exponentialBackoff;	// IMP=0x00100000000a71d8
- (void)_suspendOrResumeOperationQueue;	// IMP=0x00100000000a700a
- (void)_networkStatusChanged;	// IMP=0x00100000000a6f92
- (void)_enqueueMessageIds:(id)arg1 forRequest:(id)arg2;	// IMP=0x00100000000a6efe
- (void)_dispatchOperation;	// IMP=0x00100000000a6ce6
- (void)_handleResults:(id)arg1 forRequest:(id)arg2 isProtectedMessage:(_Bool)arg3;	// IMP=0x00100000000a6847
- (void)_scheduleRetryForFailedMessageIds:(id)arg1 failedRequest:(id)arg2;	// IMP=0x00100000000a6132
- (id)_dequeueMessageIdsFromFirstRequestAvailable:(out id *)arg1;	// IMP=0x00100000000a5d7f
- (_Bool)_isProtectedDataAvailable;	// IMP=0x00100000000a5c60
- (id)_loadFullMessageForMessageIds:(id)arg1 isProtectedMessage:(_Bool *)arg2;	// IMP=0x00100000000a54e0
- (void)_processPendingRequests;	// IMP=0x00100000000a4fb7
- (void)cancelAllPendingOperations;	// IMP=0x00100000000a4eb4
- (void)attemptToCancelFullMessageLoadForMessageIds:(id)arg1;	// IMP=0x00100000000a4b76
- (void)loadFullMessagesForMessageIds:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a4862
- (void)dealloc;	// IMP=0x00100000000a47e7
- (void)_setupNetworkObserver;	// IMP=0x00100000000a46cd
- (void)_registerForLibraryAvailabilityNotifications;	// IMP=0x00100000000a45be
- (id)initWithCallbackQueue:(id)arg1;	// IMP=0x00100000000a43a8

@end

