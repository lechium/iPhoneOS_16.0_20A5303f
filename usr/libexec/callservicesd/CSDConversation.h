//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivitySessionManager, CPApplicationPolicyManager, CPAudioRoutePolicyManager, CPSystemStateObserver, CSDConversationParticipant, CSDFaceTimeInviteDemuxer, CSDIDSGroupSession, CXCallFailureContext, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString, NSUUID, TUCallScreenShareAttributes, TUConversation, TUConversationActivitySession, TUConversationHandoffEligibility, TUConversationLink, TUConversationMember, TUConversationParticipant, TUConversationParticipantAssociation, TUConversationProvider, TUConversationReport, TUHandle, TUVideoDeviceController;
@protocol CSDAVCSession, CSDConversationDelegate, CSDConversationServerBag, OS_dispatch_queue, TUFeatureFlags;

@interface CSDConversation : NSObject
{
    _Bool _relaying;	// 8 = 0x8
    _Bool _fromStorage;	// 9 = 0x9
    _Bool _video;	// 10 = 0xa
    _Bool _hasReceivedLetMeInRequest;	// 11 = 0xb
    _Bool _locallyCreated;	// 12 = 0xc
    _Bool _hasJoined;	// 13 = 0xd
    _Bool _ignoreLMIRequests;	// 14 = 0xe
    _Bool _captioningEnabled;	// 15 = 0xf
    _Bool _waitingToPruneParticipants;	// 16 = 0x10
    _Bool _avcSessionInProgress;	// 17 = 0x11
    _Bool _forceExpanseEnabled;	// 18 = 0x12
    unsigned long long _avMode;	// 24 = 0x18
    NSSet *_memberIdentifiers;	// 32 = 0x20
    id <CSDConversationDelegate> _delegate;	// 40 = 0x28
    NSUUID *_UUID;	// 48 = 0x30
    NSUUID *_groupUUID;	// 56 = 0x38
    TUConversationLink *_link;	// 64 = 0x40
    NSUUID *_messagesGroupUUID;	// 72 = 0x48
    long long _state;	// 80 = 0x50
    long long _letMeInRequestState;	// 88 = 0x58
    TUConversationMember *_localLightweightSecondaryMember;	// 96 = 0x60
    TUHandle *_initiator;	// 104 = 0x68
    TUConversationMember *_localMember;	// 112 = 0x70
    NSSet *_remoteMembers;	// 120 = 0x78
    NSSet *_lightweightMembers;	// 128 = 0x80
    NSSet *_pendingMembers;	// 136 = 0x88
    NSSet *_kickedMembers;	// 144 = 0x90
    NSSet *_rejectedMembers;	// 152 = 0x98
    NSSet *_otherInvitedHandles;	// 160 = 0xa0
    NSArray *_supportedMediaTypes;	// 168 = 0xa8
    TUConversationActivitySession *_stagedActivitySession;	// 176 = 0xb0
    NSString *_messagesGroupName;	// 184 = 0xb8
    CPActivitySessionManager *_activitySessionManager;	// 192 = 0xc0
    TUConversationReport *_report;	// 200 = 0xc8
    TUConversationParticipantAssociation *_localParticipantAssociation;	// 208 = 0xd0
    TUConversationHandoffEligibility *_handoffEligibility;	// 216 = 0xd8
    id <TUFeatureFlags> _featureFlags;	// 224 = 0xe0
    NSObject<OS_dispatch_queue> *_queue;	// 232 = 0xe8
    NSMutableDictionary *_activeRemoteParticipantsByIdentifier;	// 240 = 0xf0
    NSMutableDictionary *_activeLightweightParticipantsByIdentifier;	// 248 = 0xf8
    NSMutableSet *_kickedParticipants;	// 256 = 0x100
    CSDIDSGroupSession *_idsSession;	// 264 = 0x108
    id <CSDAVCSession> _avcSession;	// 272 = 0x110
    NSNumber *_expectedAudioEnabled;	// 280 = 0x118
    NSNumber *_expectedVideoEnabled;	// 288 = 0x120
    NSNumber *_expectedScreenEnabled;	// 296 = 0x128
    NSNumber *_expectedVideoPaused;	// 304 = 0x130
    NSNumber *_expectedAudioPaused;	// 312 = 0x138
    NSDictionary *_activeParticipantDestinationsByIdentifier;	// 320 = 0x140
    NSDictionary *_activeLightweightParticipantDestinationsByIdentifier;	// 328 = 0x148
    NSSet *_serverProvidedParticipantIdentifiers;	// 336 = 0x150
    NSSet *_serverProvidedLightweightParticipantIdentifiers;	// 344 = 0x158
    NSDate *_lastRebroadcastTime;	// 352 = 0x160
    unsigned long long _rebroadcastTimeThreshold;	// 360 = 0x168
    TUVideoDeviceController *_videoDeviceController;	// 368 = 0x170
    NSMutableDictionary *_virtualParticipantsByPluginName;	// 376 = 0x178
    CSDFaceTimeInviteDemuxer *_faceTimeInviteDemuxer;	// 384 = 0x180
    NSMutableDictionary *_pendingKickedMembersByIdentifier;	// 392 = 0x188
    NSMutableSet *_pendingAllowedMembers;	// 400 = 0x190
    unsigned long long _kickMemberRetryCount;	// 408 = 0x198
    NSArray *_currentParticipantPresentationContexts;	// 416 = 0x1a0
    CSDConversationParticipant *_splitSessionSecondary;	// 424 = 0x1a8
    CPApplicationPolicyManager *_applicationLaunchPolicyManager;	// 432 = 0x1b0
    CPAudioRoutePolicyManager *_audioRoutePolicyManager;	// 440 = 0x1b8
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 448 = 0x1c0
    CDUnknownBlockType _downgradeToOneToOneAfterDelayBlock;	// 456 = 0x1c8
    NSSet *_remoteMemberHandles;	// 464 = 0x1d0
    NSSet *_pendingMemberHandles;	// 472 = 0x1d8
    NSMutableArray *_memberHandlesAwaitingInvitesToLink;	// 480 = 0x1e0
    id <CSDConversationServerBag> _serverBag;	// 488 = 0x1e8
    CDUnknownBlockType _avcSessionCreationBlock;	// 496 = 0x1f0
    NSObject *_reportingHierarchyToken;	// 504 = 0x1f8
    NSObject *_reportingHierarchySubToken;	// 512 = 0x200
    NSMutableDictionary *_inflightAVCBlobRecoveryBlocksByIdentifier;	// 520 = 0x208
    CDUnknownBlockType _timeoutBlock;	// 528 = 0x210
    CDUnknownBlockType _participantRefreshBlock;	// 536 = 0x218
    NSSet *_invitationPreferences;	// 544 = 0x220
    TUCallScreenShareAttributes *_screenShareAttributes;	// 552 = 0x228
    TUConversationProvider *_provider;	// 560 = 0x230
    NSMutableDictionary *_audioRoutesByParticipantIdentifier;	// 568 = 0x238
    CXCallFailureContext *_failureContext;	// 576 = 0x240
}

- (void).cxx_destruct;	// IMP=0x0020000000045e82
@property(retain, nonatomic) CXCallFailureContext *failureContext; // @synthesize failureContext=_failureContext;
@property(retain, nonatomic) NSMutableDictionary *audioRoutesByParticipantIdentifier; // @synthesize audioRoutesByParticipantIdentifier=_audioRoutesByParticipantIdentifier;
@property(retain, nonatomic) TUConversationProvider *provider; // @synthesize provider=_provider;
@property(nonatomic) TUCallScreenShareAttributes *screenShareAttributes; // @synthesize screenShareAttributes=_screenShareAttributes;
@property(copy, nonatomic) NSSet *invitationPreferences; // @synthesize invitationPreferences=_invitationPreferences;
@property(nonatomic) _Bool forceExpanseEnabled; // @synthesize forceExpanseEnabled=_forceExpanseEnabled;
@property(nonatomic) _Bool avcSessionInProgress; // @synthesize avcSessionInProgress=_avcSessionInProgress;
@property(copy, nonatomic) CDUnknownBlockType participantRefreshBlock; // @synthesize participantRefreshBlock=_participantRefreshBlock;
@property(copy, nonatomic) CDUnknownBlockType timeoutBlock; // @synthesize timeoutBlock=_timeoutBlock;
@property(readonly, copy, nonatomic) NSMutableDictionary *inflightAVCBlobRecoveryBlocksByIdentifier; // @synthesize inflightAVCBlobRecoveryBlocksByIdentifier=_inflightAVCBlobRecoveryBlocksByIdentifier;
@property(retain, nonatomic) NSObject *reportingHierarchySubToken; // @synthesize reportingHierarchySubToken=_reportingHierarchySubToken;
@property(retain, nonatomic) NSObject *reportingHierarchyToken; // @synthesize reportingHierarchyToken=_reportingHierarchyToken;
@property(copy, nonatomic) CDUnknownBlockType avcSessionCreationBlock; // @synthesize avcSessionCreationBlock=_avcSessionCreationBlock;
@property(retain, nonatomic) id <CSDConversationServerBag> serverBag; // @synthesize serverBag=_serverBag;
@property(copy, nonatomic) NSMutableArray *memberHandlesAwaitingInvitesToLink; // @synthesize memberHandlesAwaitingInvitesToLink=_memberHandlesAwaitingInvitesToLink;
@property(copy, nonatomic) NSSet *pendingMemberHandles; // @synthesize pendingMemberHandles=_pendingMemberHandles;
@property(copy, nonatomic) NSSet *remoteMemberHandles; // @synthesize remoteMemberHandles=_remoteMemberHandles;
@property(copy, nonatomic) CDUnknownBlockType downgradeToOneToOneAfterDelayBlock; // @synthesize downgradeToOneToOneAfterDelayBlock=_downgradeToOneToOneAfterDelayBlock;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(retain, nonatomic) CPAudioRoutePolicyManager *audioRoutePolicyManager; // @synthesize audioRoutePolicyManager=_audioRoutePolicyManager;
// Error: Property attributes should begin with the type ('T') attribute, property name: applicationLaunchPolicyManager
// Property attributes: (null)

@property(retain, nonatomic) CSDConversationParticipant *splitSessionSecondary; // @synthesize splitSessionSecondary=_splitSessionSecondary;
@property(retain, nonatomic) NSArray *currentParticipantPresentationContexts; // @synthesize currentParticipantPresentationContexts=_currentParticipantPresentationContexts;
@property(nonatomic) unsigned long long kickMemberRetryCount; // @synthesize kickMemberRetryCount=_kickMemberRetryCount;
@property(retain, nonatomic) NSMutableSet *pendingAllowedMembers; // @synthesize pendingAllowedMembers=_pendingAllowedMembers;
@property(retain, nonatomic) NSMutableDictionary *pendingKickedMembersByIdentifier; // @synthesize pendingKickedMembersByIdentifier=_pendingKickedMembersByIdentifier;
@property(readonly, nonatomic) CSDFaceTimeInviteDemuxer *faceTimeInviteDemuxer; // @synthesize faceTimeInviteDemuxer=_faceTimeInviteDemuxer;
@property(readonly, nonatomic) NSMutableDictionary *virtualParticipantsByPluginName; // @synthesize virtualParticipantsByPluginName=_virtualParticipantsByPluginName;
@property(readonly, nonatomic) TUVideoDeviceController *videoDeviceController; // @synthesize videoDeviceController=_videoDeviceController;
@property(nonatomic) unsigned long long rebroadcastTimeThreshold; // @synthesize rebroadcastTimeThreshold=_rebroadcastTimeThreshold;
@property(copy, nonatomic) NSDate *lastRebroadcastTime; // @synthesize lastRebroadcastTime=_lastRebroadcastTime;
@property(nonatomic, getter=isWaitingToPruneParticipants) _Bool waitingToPruneParticipants; // @synthesize waitingToPruneParticipants=_waitingToPruneParticipants;
@property(copy, nonatomic) NSSet *serverProvidedLightweightParticipantIdentifiers; // @synthesize serverProvidedLightweightParticipantIdentifiers=_serverProvidedLightweightParticipantIdentifiers;
@property(copy, nonatomic) NSSet *serverProvidedParticipantIdentifiers; // @synthesize serverProvidedParticipantIdentifiers=_serverProvidedParticipantIdentifiers;
@property(copy, nonatomic) NSDictionary *activeLightweightParticipantDestinationsByIdentifier; // @synthesize activeLightweightParticipantDestinationsByIdentifier=_activeLightweightParticipantDestinationsByIdentifier;
@property(copy, nonatomic) NSDictionary *activeParticipantDestinationsByIdentifier; // @synthesize activeParticipantDestinationsByIdentifier=_activeParticipantDestinationsByIdentifier;
@property(retain, nonatomic) NSNumber *expectedAudioPaused; // @synthesize expectedAudioPaused=_expectedAudioPaused;
@property(retain, nonatomic) NSNumber *expectedVideoPaused; // @synthesize expectedVideoPaused=_expectedVideoPaused;
@property(retain, nonatomic) NSNumber *expectedScreenEnabled; // @synthesize expectedScreenEnabled=_expectedScreenEnabled;
@property(retain, nonatomic) NSNumber *expectedVideoEnabled; // @synthesize expectedVideoEnabled=_expectedVideoEnabled;
@property(retain, nonatomic) NSNumber *expectedAudioEnabled; // @synthesize expectedAudioEnabled=_expectedAudioEnabled;
@property(retain, nonatomic) id <CSDAVCSession> avcSession; // @synthesize avcSession=_avcSession;
@property(readonly, nonatomic) CSDIDSGroupSession *idsSession; // @synthesize idsSession=_idsSession;
@property(retain, nonatomic) NSMutableSet *kickedParticipants; // @synthesize kickedParticipants=_kickedParticipants;
@property(retain, nonatomic) NSMutableDictionary *activeLightweightParticipantsByIdentifier; // @synthesize activeLightweightParticipantsByIdentifier=_activeLightweightParticipantsByIdentifier;
@property(readonly, nonatomic) NSMutableDictionary *activeRemoteParticipantsByIdentifier; // @synthesize activeRemoteParticipantsByIdentifier=_activeRemoteParticipantsByIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(copy, nonatomic) TUConversationHandoffEligibility *handoffEligibility; // @synthesize handoffEligibility=_handoffEligibility;
@property(copy, nonatomic) TUConversationParticipantAssociation *localParticipantAssociation; // @synthesize localParticipantAssociation=_localParticipantAssociation;
@property(readonly, nonatomic) TUConversationReport *report; // @synthesize report=_report;
@property(retain, nonatomic) CPActivitySessionManager *activitySessionManager; // @synthesize activitySessionManager=_activitySessionManager;
@property(readonly, nonatomic, getter=isCaptioningEnable) _Bool captioningEnabled; // @synthesize captioningEnabled=_captioningEnabled;
@property(copy, nonatomic) NSString *messagesGroupName; // @synthesize messagesGroupName=_messagesGroupName;
@property(retain, nonatomic) TUConversationActivitySession *stagedActivitySession; // @synthesize stagedActivitySession=_stagedActivitySession;
@property(copy, nonatomic) NSArray *supportedMediaTypes; // @synthesize supportedMediaTypes=_supportedMediaTypes;
@property(nonatomic) _Bool ignoreLMIRequests; // @synthesize ignoreLMIRequests=_ignoreLMIRequests;
@property(copy, nonatomic) NSSet *otherInvitedHandles; // @synthesize otherInvitedHandles=_otherInvitedHandles;
@property(copy, nonatomic) NSSet *rejectedMembers; // @synthesize rejectedMembers=_rejectedMembers;
@property(copy, nonatomic) NSSet *kickedMembers; // @synthesize kickedMembers=_kickedMembers;
@property(copy, nonatomic) NSSet *pendingMembers; // @synthesize pendingMembers=_pendingMembers;
@property(copy, nonatomic) NSSet *lightweightMembers; // @synthesize lightweightMembers=_lightweightMembers;
@property(copy, nonatomic) NSSet *remoteMembers; // @synthesize remoteMembers=_remoteMembers;
@property(readonly, nonatomic) TUConversationMember *localMember; // @synthesize localMember=_localMember;
@property(readonly, nonatomic) TUHandle *initiator; // @synthesize initiator=_initiator;
@property(nonatomic, getter=hasJoined) _Bool hasJoined; // @synthesize hasJoined=_hasJoined;
@property(retain, nonatomic) TUConversationMember *localLightweightSecondaryMember; // @synthesize localLightweightSecondaryMember=_localLightweightSecondaryMember;
@property(readonly, nonatomic, getter=isLocallyCreated) _Bool locallyCreated; // @synthesize locallyCreated=_locallyCreated;
@property(nonatomic) long long letMeInRequestState; // @synthesize letMeInRequestState=_letMeInRequestState;
@property(nonatomic) _Bool hasReceivedLetMeInRequest; // @synthesize hasReceivedLetMeInRequest=_hasReceivedLetMeInRequest;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSUUID *messagesGroupUUID; // @synthesize messagesGroupUUID=_messagesGroupUUID;
@property(retain, nonatomic) TUConversationLink *link; // @synthesize link=_link;
@property(readonly, nonatomic) NSUUID *groupUUID; // @synthesize groupUUID=_groupUUID;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) __weak id <CSDConversationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long avMode; // @synthesize avMode=_avMode;
- (void)activitySessionManager:(id)arg1 activitySessionAssociatedSceneChanged:(id)arg2;	// IMP=0x00100000000455ef
- (void)activitySessionManager:(id)arg1 activitySessionStateChanged:(id)arg2 oldState:(unsigned long long)arg3;	// IMP=0x001000000004542a
- (void)activitySessionManager:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x00100000000452a5
- (void)activitySessionManager:(id)arg1 requestForegroundPresentationForActivity:(id)arg2;	// IMP=0x001000000004514a
- (void)activitySessionManager:(id)arg1 sessionUnjoined:(id)arg2 startDate:(id)arg3 endDate:(id)arg4;	// IMP=0x0010000000044ef3
- (id)activitySessionManagerRequestedCallTypeStringForLogging:(id)arg1;	// IMP=0x0010000000044e8a
- (void)activitySessionManager:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x0010000000044def
- (void)activitySessionManager:(id)arg1 activeRemoteParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000044bb2
- (id)activitySessionManager:(id)arg1 activeRemoteParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3;	// IMP=0x0010000000044a0b
- (id)activitySessionManager:(id)arg1 localParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3;	// IMP=0x001000000004488b
- (void)activitySessionManager:(id)arg1 requestEncryptionKeysForParticipants:(id)arg2 topicName:(id)arg3;	// IMP=0x00100000000447d2
- (void)activitySessionManager:(id)arg1 fetchDataCryptorForTopic:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000044719
- (void)activitySessionManager:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x001000000004467e
- (_Bool)activitySessionManager:(id)arg1 activitySessionIsJoinable:(id)arg2;	// IMP=0x0010000000044625
- (void)activitySessionManager:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x0010000000044539
- (void)postUserNotificationForUnsupportedScreenSharingActivity:(id)arg1 alternateReponseHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004418f
- (void)audioPolicyManager:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x0010000000043c96
- (void)updateScreenEnabledForRemoteParticipants:(_Bool)arg1;	// IMP=0x0010000000043a0e
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedRemoteVideoEnabled:(_Bool)arg2;	// IMP=0x0010000000043790
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedRemoteAudioEnabled:(_Bool)arg2;	// IMP=0x0010000000043512
- (void)session:(id)arg1 screenCaptureDidStart:(_Bool)arg2 withError:(id)arg3;	// IMP=0x00100000000433dc
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 didChangeAudioPriority:(long long)arg2 videoPriority:(long long)arg3;	// IMP=0x0010000000043238
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioPaused:(_Bool)arg2 streamToken:(long long)arg3;	// IMP=0x00100000000430b2
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioEnabled:(_Bool)arg2 updatedVideoEnabled:(_Bool)arg3 streamToken:(long long)arg4 screenToken:(long long)arg5 captionsToken:(long long)arg6;	// IMP=0x0010000000042e9a
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedScreenEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x00100000000429cd
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedVideoEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x0010000000042800
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x0010000000042633
- (void)sessionShouldReconnect:(id)arg1;	// IMP=0x00100000000424cc
- (void)session:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x00100000000423ca
- (void)session:(id)arg1 changedOneToOneModeEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000042183
- (void)session:(id)arg1 changedLocalVideoPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000041e7a
- (void)session:(id)arg1 changedLocalAudioPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000041b71
- (void)session:(id)arg1 changedScreenEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x00100000000416a6
- (void)session:(id)arg1 changedLocalVideoEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000041151
- (void)session:(id)arg1 changedLocalAudioEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000040e09
- (void)serverDisconnectedForSession:(id)arg1;	// IMP=0x0010000000040b87
- (void)session:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x0010000000040632
- (void)session:(id)arg1 didDetectError:(id)arg2;	// IMP=0x0010000000040389
- (void)session:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x001000000003fdac
- (void)executeSessionDidStart;	// IMP=0x001000000003fc3e
- (int)_errorToAVCProviderEndedReason:(id)arg1 defaultProviderReason:(int)arg2;	// IMP=0x001000000003f9f6
- (void)session:(id)arg1 didReceiveDataBlob:(id)arg2 forParticipant:(id)arg3;	// IMP=0x001000000003f315
- (void)sessionDidReceiveKeyUpdate:(id)arg1;	// IMP=0x001000000003f2a1
- (void)session:(id)arg1 didUnregisterPluginAllocationInfo:(id)arg2;	// IMP=0x001000000003f114
- (void)session:(id)arg1 didRegisterPluginAllocationInfo:(id)arg2;	// IMP=0x001000000003efe4
- (void)session:(id)arg1 didReceiveKickedParticipantIDs:(id)arg2 withCode:(unsigned int)arg3 withType:(unsigned short)arg4 isTruncated:(_Bool)arg5;	// IMP=0x001000000003dc74
- (void)session:(id)arg1 didReceiveReport:(id)arg2;	// IMP=0x001000000003dbb2
- (void)setParticipantType:(unsigned short)arg1 forRemoteMemberDestinations:(id)arg2;	// IMP=0x001000000003db09
- (void)session:(id)arg1 didReceiveLocalParticipantType:(unsigned short)arg2 error:(id)arg3;	// IMP=0x001000000003d586
- (void)sessionDidTerminate:(id)arg1;	// IMP=0x001000000003d483
- (void)session:(id)arg1 receivedActiveLightweightParticipantDestinationsByIdentifier:(id)arg2;	// IMP=0x001000000003d1b0
- (void)session:(id)arg1 receivedActiveParticipantDestinationsByIdentifier:(id)arg2;	// IMP=0x001000000003ce6a
- (void)reviveOrInvalidateCachedConversationIfNecessary;	// IMP=0x001000000003c73e
- (void)session:(id)arg1 endedWithError:(id)arg2 reason:(unsigned int)arg3;	// IMP=0x001000000003c40c
- (void)session:(id)arg1 didLeaveGroupWithError:(id)arg2;	// IMP=0x001000000003bf1f
- (void)session:(id)arg1 didJoinGroup:(_Bool)arg2 participantIdentifiers:(id)arg3 error:(id)arg4;	// IMP=0x001000000003bb0d
- (void)continueHandoffAudioRouteForIdentifier:(unsigned long long)arg1;	// IMP=0x001000000003b8cf
- (void)switchBackToOneToOneIfPossibleUsingDelay:(_Bool)arg1;	// IMP=0x001000000003af7d
- (void)switchBackToOneToOneIfPossible;	// IMP=0x001000000003af69
- (void)_registerPluginsIfNecessary;	// IMP=0x001000000003adb3
- (id)_stableExpanseIdentifier;	// IMP=0x001000000003aa0b
- (void)_reportConversationFailedWithProviderEndedReason:(unsigned long long)arg1;	// IMP=0x001000000003a94d
- (void)_reportConversationFailedWithFailureReason:(long long)arg1 providerEndedReason:(unsigned long long)arg2;	// IMP=0x001000000003a87c
- (void)refreshActiveParticipantsList;	// IMP=0x001000000003a618
- (void)_pruneRemoteParticipantsIfNecessary;	// IMP=0x001000000003a08e
- (void)_cancelInFlightAVCBlobRecoveryIfNecessary;	// IMP=0x0010000000039d09
- (void)_requestAVCBlobsIfNecessary;	// IMP=0x001000000003920f
- (void)_cancelTimeoutForLeavingConversation;	// IMP=0x001000000003914d
- (void)_beginTimeoutForLeavingConversationWithReason:(id)arg1;	// IMP=0x0010000000038da8
- (void)cleanUpIDSSessionState;	// IMP=0x0010000000038ca7
- (void)_cleanUpFromAVCSessionFailure;	// IMP=0x0010000000038c19
- (void)_startAVCSessionIfNecessary;	// IMP=0x00100000000387e1
- (void)_addParticipantsWaitingToBeAddedToAVCSession;	// IMP=0x001000000003848f
- (void)_addRemoteParticipantToAVCSessionIfPossible:(id)arg1;	// IMP=0x00100000000382e3
- (void)_startIDSSessionWithContext:(id)arg1;	// IMP=0x0010000000037c82
- (_Bool);	// IMP=0x00100000000379f7
@property(readonly, nonatomic) _Bool allParticipantsSupportSharePlay;
- (void)setIDSAliasingSalt:(id)arg1 onContainer:(id)arg2;	// IMP=0x0010000000037457
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x0010000000037245
@property(readonly, nonatomic) TUConversationParticipant *localParticipant;
- (id)remoteMemberForHandle:(id)arg1;	// IMP=0x0010000000036fa8
- (id)remoteParticipantForIdentifier:(unsigned long long)arg1;	// IMP=0x0010000000036e5a
- (id)remoteParticipantForHandle:(id)arg1;	// IMP=0x0010000000036ae1
- (void)addRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x0010000000036a5b
@property(readonly, nonatomic) NSDictionary *capabilitySendMessageOptions;
- (_Bool)containsMemberWithHandle:(id)arg1;	// IMP=0x00100000000368b6
- (id)memberWithHandle:(id)arg1;	// IMP=0x0010000000036521
- (_Bool)isRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x00100000000362f1
- (id)reducedInfoMembers:(id)arg1;	// IMP=0x0010000000036068
- (void)setVideoEnabled:(_Bool)arg1 forParticipantWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000035fc3
- (void)setAudioEnabled:(_Bool)arg1 forParticipantWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000035f1e
- (void)setRemoteParticipantsDownlinkMuted:(_Bool)arg1;	// IMP=0x0010000000035d56
- (void)_allowMember:(id)arg1;	// IMP=0x0010000000035cb6
- (void)kickMember:(id)arg1;	// IMP=0x00100000000359bb
- (void)leave;	// IMP=0x00100000000353f7
- (void)startAudio;	// IMP=0x0010000000035148
- (void)broadcastLocalParticipantData;	// IMP=0x0010000000034fc3
- (void)joinUsingContext:(id)arg1;	// IMP=0x0010000000033e12
- (id)setupNewAVCSession:(_Bool)arg1;	// IMP=0x00100000000339ec
- (void)stopSelectiveSharingSession;	// IMP=0x0010000000033731
- (void)resetSelectiveSharingSessionContent;	// IMP=0x001000000003372b
- (void)createSelectiveSharingSessionIfNecessary;	// IMP=0x0010000000033725
- (struct CGSize)localPortraitAspectRatio;	// IMP=0x0010000000033627
- (id)tuSystemActivitySessions;	// IMP=0x00100000000335d7
@property(readonly, copy, nonatomic) NSSet *tuActivitySessions;
@property(readonly, copy, nonatomic) NSSet *activitySessions;
- (void)_launchApplicationForActivityIfNecessary:(id)arg1 shouldForeground:(_Bool)arg2;	// IMP=0x0010000000032c97
- (void)_launchApplicationForActivityIfNecessary:(id)arg1;	// IMP=0x0010000000032c59
- (void)_launchApplicationsForActivitiesIfNecessary:(_Bool)arg1;	// IMP=0x001000000003297b
- (void)removeActivitySessionIfNecessary;	// IMP=0x001000000003268f
- (void)_launchApplicationsForActivitiesIfNecessary;	// IMP=0x0010000000032668
- (_Bool)setStagedActivitySessionForActivitySession:(id)arg1;	// IMP=0x00100000000323c0
- (id)createStagedActivitySessionForActivity:(id)arg1;	// IMP=0x00100000000320d4
- (void)setUsingAirplay:(_Bool)arg1 forActivitySessionUUID:(id)arg2;	// IMP=0x001000000003205c
- (id)createActivitySession:(id)arg1;	// IMP=0x0010000000031940
- (void)_launchApplicationDueToActivityCreation:(id)arg1;	// IMP=0x0010000000031713
- (void)removeActivitySessionWithUUID:(id)arg1 usingTerminatingHandle:(id)arg2;	// IMP=0x001000000003158d
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1;	// IMP=0x0010000000031372
- (void)leaveActivitySessionWithUUID:(id)arg1;	// IMP=0x0010000000031208
- (_Bool)setConversationLink:(id)arg1 allowUpdate:(_Bool)arg2;	// IMP=0x0010000000030dc3
- (void)removePendingMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x0010000000030858
- (void)addPendingMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x00100000000302c7
- (void)updateMessagesGroupName:(id)arg1;	// IMP=0x001000000003026e
- (void)updateMemberValidationSource:(id)arg1 source:(long long)arg2;	// IMP=0x001000000002fbcd
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 invitationPreferences:(id)arg3 addingFromLetMeIn:(_Bool)arg4 triggeredLocally:(_Bool)arg5;	// IMP=0x001000000002e118
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x001000000002e070
- (void)removeRemoteMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x001000000002d9d6
- (void)removeVirtualParticipant:(id)arg1;	// IMP=0x001000000002d623
- (void)addVirtualParticipant:(id)arg1;	// IMP=0x001000000002d2d3
- (void)updateParticipantPresentationContexts:(id)arg1;	// IMP=0x001000000002cf63
- (void)removeParticipantWithIdentifier:(unsigned long long)arg1 fromHandle:(id)arg2;	// IMP=0x001000000002c296
- (_Bool)allowsScreenSharing;	// IMP=0x001000000002c20a
- (void)setParticipantAudioVideoMode:(unsigned long long)arg1 forParticipant:(id)arg2;	// IMP=0x001000000002bfee
- (void)removeParticipantsForMember:(id)arg1;	// IMP=0x001000000002bcac
- (void)addActiveParticipant:(id)arg1;	// IMP=0x001000000002b161
@property(copy, nonatomic) NSSet *memberIdentifiers; // @synthesize memberIdentifiers=_memberIdentifiers;
@property(nonatomic, getter=isFromStorage) _Bool fromStorage; // @synthesize fromStorage=_fromStorage;
- (void)updateLocalAspectRatiosForOneToOneModeEnabled:(_Bool)arg1;	// IMP=0x001000000002af73
- (void)setConversationGridDisplayMode:(unsigned long long)arg1;	// IMP=0x001000000002aef0
@property(nonatomic) struct CGRect presentationRect;
@property(nonatomic) int presentationState;
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled;
@property(readonly, nonatomic, getter=isOneToOneHandoffOngoing) _Bool oneToOneHandoffOngoing;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
- (void)registerMessagesGroupAssociation;	// IMP=0x0010000000029c6a
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1;	// IMP=0x0010000000029a38
@property(nonatomic, getter=isRelaying) _Bool relaying; // @synthesize relaying=_relaying;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused;
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused;
- (void)setScreenEnabled:(_Bool)arg1 attributes:(id)arg2;	// IMP=0x0010000000029022
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled;
@property(readonly, nonatomic, getter=isScreenEnabled) _Bool screenEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled;
@property(nonatomic, getter=isUplinkMuted) _Bool uplinkMuted;
@property(readonly, copy, nonatomic) NSSet *memberHandlesEligibleForLinkApproval;
@property(readonly, nonatomic) NSSet *virtualParticipants;
- (_Bool)_expanseEnabled;	// IMP=0x00100000000283fe
- (id)localParticipantDataToSendToDestinationIDs:(id)arg1;	// IMP=0x001000000002830a
- (id)localParticipantData;	// IMP=0x00100000000280ac
- (id)localConversationParticipantWithDataToSendToDestinationIDs:(id)arg1;	// IMP=0x0010000000027fca
@property(readonly, nonatomic, getter=isAudioReady) _Bool audioReady;
- (long long)maxVideoDecodesAllowed;	// IMP=0x0010000000027cda
@property(readonly, nonatomic) unsigned long long localParticipantIdentifier;
@property(readonly, nonatomic) long long avcSessionToken;
- (id)avcSessionIdentifier;	// IMP=0x0010000000027b63
@property(readonly, copy, nonatomic) TUConversation *tuConversation;
@property(readonly, nonatomic) _Bool isAnyOtherAccountDeviceActive;
@property(readonly, copy, nonatomic) NSSet *activeLightweightParticipants;
@property(readonly, copy, nonatomic) NSSet *activeRemoteParticipants;
- (id)activeParticipants;	// IMP=0x0010000000026c31
@property(readonly, copy) NSString *description;
- (id)initWithQueue:(id)arg1 UUID:(id)arg2 groupUUID:(id)arg3 groupSession:(id)arg4 messagesGroupUUID:(id)arg5 locallyCreated:(_Bool)arg6 localMember:(id)arg7 initiator:(id)arg8 remoteMembers:(id)arg9 pendingMembers:(id)arg10 otherInvitedHandles:(id)arg11 lightweightMembers:(id)arg12 activity:(id)arg13 link:(id)arg14 report:(id)arg15 fromStorage:(_Bool)arg16 avMode:(unsigned long long)arg17 applicationController:(id)arg18 featureFlags:(id)arg19 systemStateObserver:(id)arg20;	// IMP=0x001000000002521c
- (id)initWithQueue:(id)arg1 UUID:(id)arg2 groupUUID:(id)arg3 groupSession:(id)arg4 messagesGroupUUID:(id)arg5 locallyCreated:(_Bool)arg6 localMember:(id)arg7 initiator:(id)arg8 remoteMembers:(id)arg9 pendingMembers:(id)arg10 otherInvitedHandles:(id)arg11 lightweightMembers:(id)arg12 activity:(id)arg13 link:(id)arg14 report:(id)arg15 fromStorage:(_Bool)arg16 avMode:(unsigned long long)arg17 applicationController:(id)arg18;	// IMP=0x0010000000025002

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isMirageEnabled) _Bool mirageEnabled;
@property(readonly) Class superclass;

@end

