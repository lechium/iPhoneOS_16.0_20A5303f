//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPApplicationMonitor, CPBiomeSessionDonator, CPConversationManagerHost, CSDConversationManager, CSDConversationManagerXPCServer, CSDFaceTimeConversationProviderDelegate, CSDFaceTimeIDSProviderDelegate, CSDFaceTimeIMAVProviderDelegate, CSDFaceTimeInviteDemuxer, CSDGFTServiceConversationProviderDelegate, CSDNeighborhoodActivityConduit, CSDNeighborhoodActivityConduitXPCServer, CSDProviderCallDataSource, CXProvider, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, TUFeatureFlags;

@interface CSDFaceTimeProviderDelegate : NSObject
{
    _Bool _shouldUseIDSDemuxer;	// 8 = 0x8
    CSDConversationManagerXPCServer *_conversationManagerXPCServer;	// 16 = 0x10
    CPConversationManagerHost *_conversationManagerHost;	// 24 = 0x18
    CPBiomeSessionDonator *_cpBiomeStreamDonator;	// 32 = 0x20
    CPApplicationMonitor *_applicationMonitor;	// 40 = 0x28
    CSDNeighborhoodActivityConduitXPCServer *_conduitXPCServer;	// 48 = 0x30
    id <TUFeatureFlags> _featureFlags;	// 56 = 0x38
    CXProvider *_provider;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_queue;	// 72 = 0x48
    NSMutableDictionary *_delayedActionsByCallUUID;	// 80 = 0x50
    CSDFaceTimeInviteDemuxer *_faceTimeInviteDemuxer;	// 88 = 0x58
    CSDFaceTimeIDSProviderDelegate *_faceTimeIDSProviderDelegate;	// 96 = 0x60
    CSDFaceTimeIMAVProviderDelegate *_faceTimeIMAVProviderDelegate;	// 104 = 0x68
    CSDFaceTimeConversationProviderDelegate *_faceTimeConversationProviderDelegate;	// 112 = 0x70
    CSDGFTServiceConversationProviderDelegate *_groupFaceTimeServiceProviderDelegate;	// 120 = 0x78
    CSDConversationManager *_conversationManager;	// 128 = 0x80
    CSDProviderCallDataSource *_callDataSource;	// 136 = 0x88
    CSDNeighborhoodActivityConduit *_conduit;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x00200000000c27aa
@property(readonly, nonatomic) CSDNeighborhoodActivityConduit *conduit; // @synthesize conduit=_conduit;
@property(nonatomic) __weak CSDProviderCallDataSource *callDataSource; // @synthesize callDataSource=_callDataSource;
@property(readonly, nonatomic) CSDConversationManager *conversationManager; // @synthesize conversationManager=_conversationManager;
@property(retain, nonatomic) CSDGFTServiceConversationProviderDelegate *groupFaceTimeServiceProviderDelegate; // @synthesize groupFaceTimeServiceProviderDelegate=_groupFaceTimeServiceProviderDelegate;
@property(retain, nonatomic) CSDFaceTimeConversationProviderDelegate *faceTimeConversationProviderDelegate; // @synthesize faceTimeConversationProviderDelegate=_faceTimeConversationProviderDelegate;
@property(retain, nonatomic) CSDFaceTimeIMAVProviderDelegate *faceTimeIMAVProviderDelegate; // @synthesize faceTimeIMAVProviderDelegate=_faceTimeIMAVProviderDelegate;
@property(retain, nonatomic) CSDFaceTimeIDSProviderDelegate *faceTimeIDSProviderDelegate; // @synthesize faceTimeIDSProviderDelegate=_faceTimeIDSProviderDelegate;
@property(retain, nonatomic) CSDFaceTimeInviteDemuxer *faceTimeInviteDemuxer; // @synthesize faceTimeInviteDemuxer=_faceTimeInviteDemuxer;
@property(readonly, nonatomic) NSMutableDictionary *delayedActionsByCallUUID; // @synthesize delayedActionsByCallUUID=_delayedActionsByCallUUID;
- (id);	// IMP=0x00100000000c26c8
@property(readonly, nonatomic) CXProvider *provider; // @synthesize provider=_provider;
@property(readonly, nonatomic) _Bool shouldUseIDSDemuxer; // @synthesize shouldUseIDSDemuxer=_shouldUseIDSDemuxer;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDNeighborhoodActivityConduitXPCServer *conduitXPCServer; // @synthesize conduitXPCServer=_conduitXPCServer;
@property(readonly, nonatomic) CPApplicationMonitor *applicationMonitor; // @synthesize applicationMonitor=_applicationMonitor;
@property(readonly, nonatomic) CPBiomeSessionDonator *cpBiomeStreamDonator; // @synthesize cpBiomeStreamDonator=_cpBiomeStreamDonator;
@property(readonly, nonatomic) CPConversationManagerHost *conversationManagerHost; // @synthesize conversationManagerHost=_conversationManagerHost;
@property(readonly, nonatomic) CSDConversationManagerXPCServer *conversationManagerXPCServer; // @synthesize conversationManagerXPCServer=_conversationManagerXPCServer;
- (void)provider:(id)arg1 didDeactivateAudioSession:(id)arg2;	// IMP=0x00100000000c25b7
- (void)provider:(id)arg1 didActivateAudioSession:(id)arg2;	// IMP=0x00100000000c24f5
- (void)provider:(id)arg1 performSetMutedCallAction:(id)arg2;	// IMP=0x00100000000c1da9
- (void)provider:(id)arg1 performSetRelayingCallAction:(id)arg2;	// IMP=0x00100000000c167f
- (void)provider:(id)arg1 performSetVideoPresentationStateCallAction:(id)arg2;	// IMP=0x00100000000c0f55
- (void)provider:(id)arg1 performSetVideoPresentationSizeCallAction:(id)arg2;	// IMP=0x00100000000c082b
- (void)provider:(id)arg1 performEnableVideoCallAction:(id)arg2;	// IMP=0x00100000000c0101
- (void)provider:(id)arg1 performSetScreenShareAttributesCallAction:(id)arg2;	// IMP=0x00100000000bf9d7
- (void)provider:(id)arg1 performSetSharingScreenCallAction:(id)arg2;	// IMP=0x00100000000bf2ad
- (void)provider:(id)arg1 performSetSendingVideoCallAction:(id)arg2;	// IMP=0x00100000000beb83
- (void)provider:(id)arg1 performSetHeldCallAction:(id)arg2;	// IMP=0x00100000000be459
- (void)provider:(id)arg1 performEndCallAction:(id)arg2;	// IMP=0x00100000000bdce9
- (void)provider:(id)arg1 performAnswerCallAction:(id)arg2;	// IMP=0x00100000000bd5bf
- (void)provider:(id)arg1 performJoinCallAction:(id)arg2 shouldUseIDSDemuxer:(_Bool)arg3;	// IMP=0x00100000000bc686
- (void)provider:(id)arg1 performJoinCallAction:(id)arg2;	// IMP=0x00100000000bc574
- (void)initiateModernFTInviteForAction:(id)arg1 destinations:(id)arg2 excludedIMAVDestinations:(id)arg3 joinCallActionToFulfill:(id)arg4;	// IMP=0x00100000000bbe6f
- (void)provider:(id)arg1 performStartCallAction:(id)arg2 shouldUseIDSDemuxer:(_Bool)arg3;	// IMP=0x00100000000bb364
- (void)provider:(id)arg1 performStartCallAction:(id)arg2;	// IMP=0x00100000000bb2e7
- (void)provider:(id)arg1 timedOutPerformingAction:(id)arg2;	// IMP=0x00100000000bb242
- (void)providerDidReset:(id)arg1;	// IMP=0x00100000000bb11d
- (void)providerDidBegin:(id)arg1;	// IMP=0x00100000000baff8
- (void)providerDelegate:(id)arg1 endOtherProvidersCallWithUUID:(id)arg2;	// IMP=0x00100000000badc7
- (_Bool)providerDelegate:(id)arg1 isExclusivelyManagingCallWithUUID:(id)arg2;	// IMP=0x00100000000babd1
- (void)providerDelegate:(id)arg1 requestedUpgradeToExistingCallForConversation:(id)arg2 withSessionToken:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000baa10
- (void)providerDelegate:(id)arg1 requestedTransaction:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ba8e6
- (void)providerDelegate:(id)arg1 callWithUUID:(id)arg2 endedAtDate:(id)arg3 withReason:(long long)arg4 failureContext:(id)arg5;	// IMP=0x00100000000ba1d3
- (void)providerDelegate:(id)arg1 callWithUUID:(id)arg2 connectedAtDate:(id)arg3;	// IMP=0x00100000000b9fcf
- (void)providerDelegate:(id)arg1 callWithUUID:(id)arg2 startedConnectingAtDate:(id)arg3;	// IMP=0x00100000000b9dcb
- (void)_processDelayedActionList:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000b9a54
- (void)_createDelayedActionListIfNecessary:(id)arg1;	// IMP=0x00100000000b9983
- (void)deferReportingAudioFinishedForCallWithUUID:(id)arg1;	// IMP=0x00100000000b9870
- (void)updateProviderConfigurationWithSenderIdentities:(id)arg1;	// IMP=0x00100000000b97fe
- (id)ISOCountryCodeForCallWithUUID:(id)arg1;	// IMP=0x00100000000b977b
- (id)providerConfiguration;	// IMP=0x00100000000b96b9
- (void)dealloc;	// IMP=0x00100000000b964e
- (id)initWithCallSource:(id)arg1 queue:(id)arg2 featureFlags:(id)arg3 shouldUseIDSDemuxer:(_Bool)arg4;	// IMP=0x00100000000b90f8
- (id)initWithCallSource:(id)arg1 queue:(id)arg2;	// IMP=0x00100000000b905d
- (id)init;	// IMP=0x00100000000b8fd3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly) Class superclass;

@end

