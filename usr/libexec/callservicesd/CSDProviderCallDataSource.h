//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CSDCallFilterController, CSDCallProviderManager, CSDCallSourceFetcher, CSDCoreTelephonyClient, CSDFaceTimeProviderDelegate, CSDRelayCallDataSource, CSDVoIPProcessAssertionManager, CXCallControllerHost, CXCallSource, CXCallSourceManager, CXInProcessCallSource, NSMutableDictionary, NSString;
@protocol CSDRouteManager, CXProviderDelegatePrivate;

@interface CSDProviderCallDataSource
{
    _Bool _deferCommittingTransactions;	// 8 = 0x8
    CSDCoreTelephonyClient *_coreTelephonyClient;	// 16 = 0x10
    CSDFaceTimeProviderDelegate *_faceTimeProviderDelegate;	// 24 = 0x18
    CSDCallProviderManager *_callProviderManager;	// 32 = 0x20
    CSDCallFilterController *_callFilterController;	// 40 = 0x28
    CSDVoIPProcessAssertionManager *_processAssertionManager;	// 48 = 0x30
    CXCallControllerHost *_callControllerHost;	// 56 = 0x38
    CXInProcessCallSource *_faceTimeCallSource;	// 64 = 0x40
    CXInProcessCallSource *_tinCanCallSource;	// 72 = 0x48
    id <CXProviderDelegatePrivate> _tinCanProviderDelegate;	// 80 = 0x50
    CSDCallSourceFetcher *_callSourceFetcher;	// 88 = 0x58
    NSMutableDictionary *_pendingCallsToChatUUIDs;	// 96 = 0x60
    NSMutableDictionary *_pendingPulledCallContexts;	// 104 = 0x68
    CXCallSourceManager *_callSourceManager;	// 112 = 0x70
    CSDRelayCallDataSource *_relayCallDataSource;	// 120 = 0x78
    id <CSDRouteManager> _routeManager;	// 128 = 0x80
    CDUnknownBlockType _dndAllowsCall;	// 136 = 0x88
    CDUnknownBlockType _supportsPrimaryCalling;	// 144 = 0x90
    CDUnknownBlockType _shouldPreferRelayOverDirectSecondaryCalling;	// 152 = 0x98
    CDUnknownBlockType _shouldFilterCall;	// 160 = 0xa0
}

+ (Class)callClass;	// IMP=0x00200000001cef79
- (void).cxx_destruct;	// IMP=0x00200000001da37c
@property(copy, nonatomic) CDUnknownBlockType shouldFilterCall; // @synthesize shouldFilterCall=_shouldFilterCall;
@property(copy, nonatomic) CDUnknownBlockType shouldPreferRelayOverDirectSecondaryCalling; // @synthesize shouldPreferRelayOverDirectSecondaryCalling=_shouldPreferRelayOverDirectSecondaryCalling;
@property(copy, nonatomic) CDUnknownBlockType supportsPrimaryCalling; // @synthesize supportsPrimaryCalling=_supportsPrimaryCalling;
@property(copy, nonatomic) CDUnknownBlockType dndAllowsCall; // @synthesize dndAllowsCall=_dndAllowsCall;
@property(retain, nonatomic) id <CSDRouteManager> routeManager; // @synthesize routeManager=_routeManager;
@property(nonatomic) __weak CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) CXCallSourceManager *callSourceManager; // @synthesize callSourceManager=_callSourceManager;
@property(readonly, nonatomic) NSMutableDictionary *pendingPulledCallContexts; // @synthesize pendingPulledCallContexts=_pendingPulledCallContexts;
@property(readonly, nonatomic) NSMutableDictionary *pendingCallsToChatUUIDs; // @synthesize pendingCallsToChatUUIDs=_pendingCallsToChatUUIDs;
@property(readonly, nonatomic) CSDCallSourceFetcher *callSourceFetcher; // @synthesize callSourceFetcher=_callSourceFetcher;
@property(readonly, nonatomic) id <CXProviderDelegatePrivate> tinCanProviderDelegate; // @synthesize tinCanProviderDelegate=_tinCanProviderDelegate;
@property(readonly, nonatomic) CXInProcessCallSource *tinCanCallSource; // @synthesize tinCanCallSource=_tinCanCallSource;
@property(readonly, nonatomic) CXInProcessCallSource *faceTimeCallSource; // @synthesize faceTimeCallSource=_faceTimeCallSource;
@property(nonatomic) _Bool deferCommittingTransactions; // @synthesize deferCommittingTransactions=_deferCommittingTransactions;
@property(readonly, nonatomic) CXCallControllerHost *callControllerHost; // @synthesize callControllerHost=_callControllerHost;
@property(readonly, nonatomic) CSDVoIPProcessAssertionManager *processAssertionManager; // @synthesize processAssertionManager=_processAssertionManager;
@property(retain, nonatomic) CSDCallFilterController *callFilterController; // @synthesize callFilterController=_callFilterController;
@property(retain, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDFaceTimeProviderDelegate *faceTimeProviderDelegate; // @synthesize faceTimeProviderDelegate=_faceTimeProviderDelegate;
- (id)callSourceWithIdentifier:(id)arg1;	// IMP=0x00100000001da130
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x00100000001d9fab
- (void)callControllerHost:(id)arg1 clientWithIdentifier:(id)arg2 requestedTransaction:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001d9c51
- (void)callSourcesChangedForCallSourceManager:(id)arg1;	// IMP=0x00100000001d97d4
- (void)callSourceManager:(id)arg1 completedTransactionGroup:(id)arg2;	// IMP=0x00100000001d8e90
- (void)callSource:(id)arg1 requestedTransaction:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001d8d92
- (void)callSource:(id)arg1 reportedCallWithUUID:(id)arg2 crossDeviceIdentifier:(id)arg3 changedBytesOfDataUsed:(long long)arg4;	// IMP=0x00100000001d8c27
- (void)callSource:(id)arg1 reportedCallWithUUID:(id)arg2 changedMeterLevel:(float)arg3 forDirection:(long long)arg4;	// IMP=0x00100000001d8b39
- (void)callSource:(id)arg1 reportedCallWithUUID:(id)arg2 changedFrequencyData:(id)arg3 forDirection:(long long)arg4;	// IMP=0x00100000001d8a37
- (void)callSource:(id)arg1 reportedAudioFinishedForCallWithUUID:(id)arg2;	// IMP=0x00100000001d87c3
- (void)callSource:(id)arg1 reportedNewOutgoingCallWithUUID:(id)arg2 update:(id)arg3;	// IMP=0x00100000001d86d4
- (void)callSource:(id)arg1 reportedOutgoingCallWithUUID:(id)arg2 connectedAtDate:(id)arg3;	// IMP=0x00100000001d8365
- (void)callSource:(id)arg1 reportedOutgoingCallWithUUID:(id)arg2 startedConnectingAtDate:(id)arg3;	// IMP=0x00100000001d800e
- (void)callSource:(id)arg1 reportedOutgoingCallWithUUID:(id)arg2 sentInvitationAtDate:(id)arg3;	// IMP=0x00100000001d7cb7
- (void)callSource:(id)arg1 reportedCallWithUUID:(id)arg2 endedAtDate:(id)arg3 privateReason:(long long)arg4 failureContext:(id)arg5;	// IMP=0x00100000001d71f7
- (void)callSource:(id)arg1 reportedCallWithUUID:(id)arg2 updated:(id)arg3;	// IMP=0x00100000001d6bc0
- (void)callSource:(id)arg1 reportedNewIncomingCallWithUUID:(id)arg2 update:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001d5c08
- (_Bool)callSource:(id)arg1 shouldProcessAction:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001d5b20
- (void)callSource:(id)arg1 registeredWithConfiguration:(id)arg2;	// IMP=0x00100000001d58fc
- (void)performStartCallAction:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001d4ffc
- (void)performCallActions:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001d4e0a
- (void)performCallAction:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001d4cac
- (id)providerWithIdentifier:(id)arg1;	// IMP=0x00100000001d4c09
- (id)callSourceForJoinConversationRequest:(id)arg1;	// IMP=0x00100000001d4bf7
- (id)callSourceForDialRequest:(id)arg1;	// IMP=0x00100000001d4a07
- (void)pullCallWithHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001d4691
- (void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x00100000001d444b
- (void)setTTYType:(int)arg1 forCalls:(id)arg2;	// IMP=0x00100000001d437b
- (void)setUplinkMuted:(_Bool)arg1 forCalls:(id)arg2;	// IMP=0x00100000001d42aa
- (void);	// IMP=0x00100000001d4150
- (void)ungroupCall:(id)arg1 fromOtherCallsInGroup:(id)arg2;	// IMP=0x00100000001d405d
- (void)groupCalls:(id)arg1 withCalls:(id)arg2;	// IMP=0x00100000001d3f6a
- (void)holdCalls:(id)arg1 whileUnholdingCalls:(id)arg2;	// IMP=0x00100000001d3e77
- (void)answerCall:(id)arg1 withRequest:(id)arg2 whileDisconnectingCalls:(id)arg3 andHoldingCalls:(id)arg4;	// IMP=0x00100000001d3d1d
- (void)_addSupplementalActionsForRequestedTransaction:(id)arg1 onCallSource:(id)arg2;	// IMP=0x00100000001d36b6
- (void)_performRequestedTransaction:(id)arg1 onCallSource:(id)arg2;	// IMP=0x00100000001d3128
- (void)_processRequestedTransaction:(id)arg1 fromCallSource:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001d2f93
- (_Bool)_shouldAllowRequestedTransaction:(id)arg1 forCallSource:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001d2ccf
- (_Bool)_shouldAllowRequestedAction:(id)arg1 forCallSource:(id)arg2 shouldValidateUserIntent:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00100000001d23c0
- (_Bool)_actionRequiresReasonableUserIntent:(id)arg1;	// IMP=0x00100000001d2314
- (void)_processCompletedCallAction:(id)arg1 forCall:(id)arg2 allowRevertingState:(_Bool)arg3;	// IMP=0x00100000001d10eb
- (id)_endMutuallyExclusiveCalls:(id)arg1;	// IMP=0x00100000001d0d1a
- (void)_endCall:(id)arg1;	// IMP=0x00100000001d0be4
- (_Bool)_allowRevertingStateForCompletedTransactionGroup:(id)arg1;	// IMP=0x00100000001d0a77
- (void)_commitUncommittedTransactions;	// IMP=0x00100000001d0a3a
- (void)_deferCommittingTransactionsUntilAfterRunningBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001d09d3
- (_Bool)_shouldBlockIfScreenSharing;	// IMP=0x00100000001d0880
- (id)_identifiersForCalls:(id)arg1;	// IMP=0x00100000001d06b2
- (id)_ISOCountryCodeForCallWithUUID:(id)arg1 provider:(id)arg2 callUpdate:(id)arg3;	// IMP=0x00100000001d0569
- (id)_ISOCountryCodeForCall:(id)arg1;	// IMP=0x00100000001d0433
- (id)_providerForCallSource:(id)arg1;	// IMP=0x00100000001d036c
- (id)_callGroupsWithBackingCallSource:(id)arg1;	// IMP=0x00100000001cff2b
- (id)_callWithUUID:(id)arg1 controllableByCallSource:(id)arg2;	// IMP=0x00100000001cfcda
- (id)_callWithUUID:(id)arg1 backingCallSource:(id)arg2;	// IMP=0x00100000001cfa90
- (id)_relayCallWithUUID:(id)arg1;	// IMP=0x00100000001cf9ee
- (id)_callWithUUID:(id)arg1;	// IMP=0x00100000001cf98a
@property(readonly, nonatomic) CXCallSource *telephonyCallSource;
- (id)callGroupUUIDToCalls;	// IMP=0x00100000001cf59a
@property(readonly, nonatomic) CSDCoreTelephonyClient *coreTelephonyClient; // @synthesize coreTelephonyClient=_coreTelephonyClient;
- (id)conduit;	// IMP=0x00100000001cf3df
- (void)stopTrackingCall:(id)arg1;	// IMP=0x00100000001cf275
- (void)startTrackingCall:(id)arg1;	// IMP=0x00100000001cf16e
- (void)registerCall:(id)arg1;	// IMP=0x00100000001cef8a
- (id)initWithCallStateController:(id)arg1 queue:(id)arg2;	// IMP=0x00100000001ce993

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

