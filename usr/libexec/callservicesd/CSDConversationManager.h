//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivityAuthorizationManager, CPApplicationController, CPSystemStateObserver, CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDIDSService, CSDPendingMembershipTracker, CSDReportingController, CSDScreenSharingActivityManager, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, MISSING_TYPE, NSDictionary, NSMapTable, NSMutableDictionary, NSMutableSet, NSSet, NSString, TUCallProviderManager;
@protocol CSDConduitIDSProxy, CSDConversationInvitationResolving, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableSet *_mutableConversationsRequestingUpgrade;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    NSMapTable *_observerToQueue;	// 80 = 0x50
    CSDScreenSharingActivityManager *_screenSharingActivityManager;	// 88 = 0x58
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 96 = 0x60
    CSDConversationPersistenceController *;	// 104 = 0x68
    CSDDeviceLockStateObserver *_lockStateObserver;	// 112 = 0x70
    TUCallProviderManager *_callProviderManager;	// 120 = 0x78
    CSDConversationLinkManager *_linkManager;	// 128 = 0x80
    CSDReportingController *_reportingController;	// 136 = 0x88
    id <TUFeatureFlags> _featureFlags;	// 144 = 0x90
    CSDConversationNoticeManager *_conversationNoticeManger;	// 152 = 0x98
    CSDSharedConversationServerBag *_serverBag;	// 160 = 0xa0
    id <CSDConversationInvitationResolving> _invitationResolver;	// 168 = 0xa8
    NSMutableDictionary *_screenCaptureQueue;	// 176 = 0xb0
    id <CSDVoucherManager> _voucherManager;	// 184 = 0xb8
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 192 = 0xc0
    NSObject<OS_dispatch_queue> *_queue;	// 200 = 0xc8
    CSDIDSService *_service;	// 208 = 0xd0
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 216 = 0xd8
    FTDeviceSupport *_deviceSupport;	// 224 = 0xe0
    CDUnknownBlockType _conversationCreationBlock;	// 232 = 0xe8
    CDUnknownBlockType _sendDataBlock;	// 240 = 0xf0
    CSDConversationProviderManager *_conversationProviderManager;	// 248 = 0xf8
    CDUnknownBlockType _activeLocalHandles;	// 256 = 0x100
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 264 = 0x108
    CDUnknownBlockType _localCallerID;	// 272 = 0x110
    CDUnknownBlockType _localCallerIDForProvider;	// 280 = 0x118
    CSDSecureImageTranscoder *_imageTranscoder;	// 288 = 0x120
    CPApplicationController *_cpApplicationController;	// 296 = 0x128
    CPActivityAuthorizationManager *_activityAuthorizationManager;	// 304 = 0x130
    id <CSDConduitIDSProxy> _messageProxy;	// 312 = 0x138
}

- (void).cxx_destruct;	// IMP=0x002000000012f10a
@property(nonatomic) __weak id <CSDConduitIDSProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) CPActivityAuthorizationManager *activityAuthorizationManager; // @synthesize activityAuthorizationManager=_activityAuthorizationManager;
@property(readonly, nonatomic) CPApplicationController *cpApplicationController; // @synthesize cpApplicationController=_cpApplicationController;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) CSDIDSService *service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(readonly, nonatomic) CSDScreenSharingActivityManager *screenSharingActivityManager; // @synthesize screenSharingActivityManager=_screenSharingActivityManager;
@property(retain, nonatomic) NSMapTable *observerToQueue; // @synthesize observerToQueue=_observerToQueue;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableSet *mutableConversationsRequestingUpgrade; // @synthesize mutableConversationsRequestingUpgrade=_mutableConversationsRequestingUpgrade;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000012e873
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000012e365
- (void)applicationPolicyManager:(id)arg1 authorizationChangedForBundleIdentifier:(id)arg2;	// IMP=0x001000000012e09b
- (void)screenSharingActivityManager:(id)arg1 invalidatedSessionWithReason:(id)arg2 wasLocallySharing:(_Bool)arg3;	// IMP=0x001000000012dc8f
- (void)screenSharingActivityManager:(id)arg1 receivedUpdatedRemoteAttributes:(id)arg2 isLocallySharing:(_Bool)arg3;	// IMP=0x001000000012db06
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x001000000012d37a
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x001000000012d1a5
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x001000000012d00c
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000012cdb0
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x001000000012cc28
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000012c901
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x001000000012c722
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x001000000012c5bd
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000012c458
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000012c2f3
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x001000000012c18e
- (id)pickInitiatorFromParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x001000000012bdfa
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x001000000012b540
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x001000000012b18d
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012afb6
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4;	// IMP=0x0010000000127e33
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001279f2
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000127512
- (id)pushTokenForSelf;	// IMP=0x00100000001274bb
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3;	// IMP=0x0010000000126ea8
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x0010000000126637
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x00100000001263f5
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x0010000000126312
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x0010000000126210
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x0010000000124c39
- (void)processProxiedGroupUpdate:(id)arg1;	// IMP=0x0010000000124bc3
- (void)processProxiedResource:(id)arg1 metadata:(id)arg2 fromID:(id)arg3 context:(id)arg4;	// IMP=0x0010000000124b08
- (void)processProxiedMessage:(id)arg1 fromID:(id)arg2 context:(id)arg3;	// IMP=0x0010000000124a4c
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001247ee
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x0010000000124358
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0010000000124004
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x0010000000123ec9
- (void)service:(id)arg1 account:(id)arg2 messageIdentifier:(id)arg3 alternateCallbackID:(id)arg4 updatedWithResponseCode:(long long)arg5 error:(id)arg6 lastCall:(_Bool)arg7 messageContext:(id)arg8;	// IMP=0x0010000000123e4f
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x0010000000123ca0
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x0010000000123a32
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x00100000001235fb
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x0010000000123254
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x0010000000122dec
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x0010000000122958
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x001000000012240c
- (void)conversation:(id)arg1 didChangeSceneAssociationForActivitySession:(id)arg2;	// IMP=0x0010000000121f1e
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;	// IMP=0x0010000000121a3c
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x0010000000121763
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedVideoEnabled:(_Bool)arg3;	// IMP=0x00100000001212b9
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedAudioEnabled:(_Bool)arg3;	// IMP=0x0010000000120e0f
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x001000000012094a
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x00100000001204c4
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x001000000012032e
- (void)conversation:(id)arg1 requestAVCBlobForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000120176
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x001000000011fcae
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x001000000011f7f3
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;	// IMP=0x001000000011f341
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2;	// IMP=0x001000000011ee0f
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2;	// IMP=0x001000000011e64b
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x001000000011d653
- (void)conversationInvalidated:(id)arg1;	// IMP=0x001000000011d2d2
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x001000000011d1da
- (void)conversationChanged:(id)arg1;	// IMP=0x001000000011ca4a
- (void)cleanupExpiredPendingConversations;	// IMP=0x001000000011c5eb
- (void)setupPendingConversationCleanupTimer;	// IMP=0x001000000011c307
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x001000000011bf8d
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000011b8b2
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000011b59d
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x001000000011b31a
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x001000000011b0a9
- (void)removeNonIndefiniteLinks;	// IMP=0x001000000011aa59
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000011a7ae
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x001000000011a6ac
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x001000000011a57b
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000011a45b
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000119e33
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000119b47
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000119848
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000011968a
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x00100000001194eb
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x001000000011936d
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000118df6
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000118b49
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001187b7
- (void)generateAllInactiveLinks;	// IMP=0x0010000000118637
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001184a9
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000117f1d
- (void)invalidateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001179f0
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011740f
- (void);	// IMP=0x00100000001168ea
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001166d8
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x0010000000116416
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000115a22
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000115670
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001154d4
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000115093
- (void)setVideoEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000114de0
- (void)setAudioEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000114b2d
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x00100000001148a5
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x0010000000114357
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000113a94
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x00100000001137a3
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x00100000001130d8
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000112e2d
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000112677
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000111f54
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000111de1
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000110d1a
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000110ce5
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000110cb0
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000011084d
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000110495
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000011038c
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000010eefd
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x001000000010ed7c
- (void)requestActivityAuthorizationForApplicationWithBundleIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000010ec77
- (void)launchApplicationForActivitySessionUUID:(id)arg1 forceBackground:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000010dd43
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000010da15
- (void)launchApplicationForActivitySessionUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000010d9fe
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x001000000010d8fc
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x001000000010d801
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x001000000010d4d8
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3;	// IMP=0x001000000010d4c3
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x001000000010d171
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010cec6
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010cc0c
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010c954
- (void)createActivitySession:(id)arg1 onConversationWithUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000010c178
- (id)createCPActivitySessionForActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010bd20
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x001000000010b6aa
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010b056
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x001000000010ad31
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x001000000010ac40
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x001000000010a1e9
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000109810
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x0010000000108eb5
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x0010000000108e23
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x0010000000108b76
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001089e9
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001088b1
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010875f
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000108628
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x0010000000108495
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x0010000000108305
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001081cd
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000108095
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000107f5d
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000010789c
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010781b
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x0010000000107380
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x0010000000106ee5
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000106dad
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x0010000000106ab3
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010697b
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000106843
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x0010000000106741
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000010660e
- (void)leaveAllConversations;	// IMP=0x0010000000106444
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x001000000010631e
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x00100000001060b1
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x00100000001057ba
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000010514f
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x00100000001049ac
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x0010000000103b3b
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x0010000000103348
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x0010000000102c05
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 conversationProvider:(id)arg10;	// IMP=0x0010000000101eee
- (void)removeAllConversations;	// IMP=0x0010000000101eb1
- (void)retreiveActiveConversations;	// IMP=0x001000000010145b
- (void)beginListeningOnService:(id)arg1;	// IMP=0x001000000010119d
- (void)addObserver:(id)arg1 queue:(id)arg2;	// IMP=0x001000000010106c
- (void)removeDelegate:(id)arg1;	// IMP=0x0010000000100f69
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000100e38
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
@property(readonly, copy, nonatomic) NSSet *activatedConversationLinks;
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x0010000000100723
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x0010000000100013
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x00100000000ff721
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000ff246
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000ff0ae
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x00100000000fec3b
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x00100000000fe937
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000fe3f4
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fe2e6
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fdf49
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fdc2d
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x00100000000fd632
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x00100000000fd3bc
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x00100000000fcf20
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x00100000000fcbb2
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fc84d
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fbf72
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fbf5d
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x00100000000fb90c
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x00100000000fb1fe
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x00100000000fb1e9
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x00100000000fb03a
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x00100000000faecd
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;	// IMP=0x00100000000faeb8
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x00100000000fae02
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x00100000000fade1
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x00100000000fa7a4
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f9e09
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x00100000000f999e
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x00100000000f8ddf
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f853a
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f7dfc
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f6e5d
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f6737
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x00100000000f548c
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f4dba
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f4731
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f457e
- (id)createActivitySession:(id)arg1 onConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f43e8
- (id)temporaryFilePath;	// IMP=0x00100000000f436c
- (_Bool)_linksEnabled;	// IMP=0x00100000000f435f
- (void)postEndEventForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x00100000000f40d4
- (void)postSessionStartedForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x00100000000f3e49
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x00100000000f347e
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x00100000000f2b10
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x00100000000f2ac1
- (void)handleConversation:(id)arg1 receivedAVCBlobResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f2856
- (void)handleConversation:(id)arg1 receivedAVCBlobRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f257b
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x00100000000f2146
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x00100000000f1d11
- (void)notifyDelegatesOfRemoteScreenShareEndedWithReason:(id)arg1;	// IMP=0x00100000000f1a35
- (void)notifyDelegatesOfRemoteScreenShareAttributes:(id)arg1 isLocallySharing:(_Bool)arg2;	// IMP=0x00100000000f1735
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x00100000000f10bc
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x00100000000f0fb8
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x00100000000f0ce5
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x00100000000f09e7
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x00100000000f0746
- (void)notifyDelegatesOfAVModeChanged:(unsigned long long)arg1 toAVMode:(unsigned long long)arg2 forConversation:(id)arg3;	// IMP=0x00100000000f02d6
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000efe1a
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x00100000000ef89f
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x00100000000ef437
- (id)transitionConversationWithUUID:(id)arg1 toNewGroupUUID:(id)arg2 remoteMembers:(id)arg3 localMember:(id)arg4 lightweightMembers:(id)arg5 fromHandle:(id)arg6;	// IMP=0x00100000000eea50
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 provider:(id)arg14;	// IMP=0x00100000000ee6a7
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x00100000000ee484
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x00100000000ee305
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x00100000000ee0e2
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000ede80
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x00100000000edae3
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x00100000000ed789
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x00100000000ed529
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x00100000000ed306
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x00100000000ed0e3
- (id)activeConversation;	// IMP=0x00100000000ecf37
- (void)removeAllPendingConversations;	// IMP=0x00100000000ece85
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000ecc3a
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x00100000000ec894
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 provider:(id)arg17;	// IMP=0x00100000000eb933
- (MISSING_TYPE *)localMemberForProvider:fromHandle:members:lightweightMembers:activeLocalHandles: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000eb3e0
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x00100000000eb3cc
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000eb2b0
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1;	// IMP=0x00100000000eb086
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x00100000000eae5c
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000ead72
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x00100000000ead5e
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000eace1
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x00100000000eac5c
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x00100000000eabc5
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000eab2e
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8;	// IMP=0x00100000000e90ef
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x00100000000e8fce
- (id)init;	// IMP=0x00100000000e8fa3
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x00100000000e8e7c

// Remaining properties
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

