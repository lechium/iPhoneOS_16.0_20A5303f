//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSObject-Protocol.h"

@class NSData, NSDictionary, NSObject, NSString, RTCSecureHierarchyToken, VCCapabilities;
@protocol CSDAVConferenceProviderDelegate, OS_dispatch_queue;

@protocol CSDAVConferenceProvider <NSObject>
@property(readonly, nonatomic) long long callID;
@property(nonatomic, getter=isSendingAudio) _Bool sendingAudio;
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted;
@property(readonly, nonatomic) long long outputAudioPowerSpectrumToken;
@property(readonly, nonatomic) long long inputAudioPowerSpectrumToken;
@property(nonatomic, getter=isOutputFrequencyMeteringEnabled) _Bool outputFrequencyMeteringEnabled;
@property(nonatomic, getter=isInputFrequencyMeteringEnabled) _Bool inputFrequencyMeteringEnabled;
@property(nonatomic) __weak id <CSDAVConferenceProviderDelegate> delegate;
- (void)sendData:(NSData *)arg1;
- (void)updateCapabilities:(VCCapabilities *)arg1;
- (void)cancel;
- (void)stop;
- (void)setPeerReportingIdentifier:(NSString *)arg1 sessionIdentifier:(NSString *)arg2;
- (void)setRemoteVideoPresentationState:(unsigned int)arg1;
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;
- (void)inviteDictionaryForCallID:(long long)arg1 remoteInviteDictionary:(NSDictionary *)arg2 nonCellularCandidateTimeout:(double)arg3 block:(void (^)(NSDictionary *, NSError *))arg4 queue:(NSObject<OS_dispatch_queue> *)arg5;
- (_Bool)startConnectionAsCaller:(_Bool)arg1 capabilities:(VCCapabilities *)arg2 socket:(int)arg3 error:(id *)arg4;
- (_Bool)startConnectionAsCaller:(_Bool)arg1 remoteInviteDictionary:(NSDictionary *)arg2 capabilities:(VCCapabilities *)arg3 destination:(NSString *)arg4 error:(id *)arg5;
- (_Bool)initializeNewCallWithDeviceRole:(int)arg1 reportingHierarchyToken:(RTCSecureHierarchyToken *)arg2;
- (void)setLocalPortraitAspectRatio:(struct CGSize)arg1 localLandscapeAspectRatio:(struct CGSize)arg2;
@end

