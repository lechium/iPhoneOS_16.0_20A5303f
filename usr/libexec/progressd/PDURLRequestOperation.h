//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, NSError, NSMutableURLRequest, NSString, NSURL, NSURLSession, NSUUID, PDURLOperationStats, PDURLResponse;

@interface PDURLRequestOperation
{
    NSError *_error;	// 8 = 0x8
    NSUUID *_requestUUID;	// 16 = 0x10
    unsigned long long _executionsCount;	// 24 = 0x18
    _Bool _wantsToExecute;	// 32 = 0x20
    NSMutableURLRequest *;	// 40 = 0x28
    NSString *_responseFailureCause;	// 48 = 0x30
    long long _clsErrorCode;	// 56 = 0x38
    NSURLSession *_session;	// 64 = 0x40
    _Bool _urlRequestAttempted;	// 72 = 0x48
    PDURLResponse *_response;	// 80 = 0x50
    PDURLOperationStats *_stats;	// 88 = 0x58
    NSURL *_URL;	// 96 = 0x60
    NSString *_requestContentType;	// 104 = 0x68
    NSString *_acceptContentType;	// 112 = 0x70
    NSData *_requestData;	// 120 = 0x78
    double _timeoutIntervalForRequest;	// 128 = 0x80
}

+ (id)setAppleInternalHeadersForRequest:(id)arg1;	// IMP=0x00400000001107ac
+ (id)appleIDSession;	// IMP=0x001000000010f6ae
+ (void)reset;	// IMP=0x001000000010f63b
- (void).cxx_destruct;	// IMP=0x001000000011289c
@property(readonly, nonatomic) NSString *responseFailureCause; // @synthesize responseFailureCause=_responseFailureCause;
@property(nonatomic) long long clsErrorCode; // @synthesize clsErrorCode=_clsErrorCode;
@property(nonatomic) double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property(readonly, nonatomic) NSData *requestData; // @synthesize requestData=_requestData;
@property(readonly, nonatomic) NSString *acceptContentType; // @synthesize acceptContentType=_acceptContentType;
@property(readonly, nonatomic) NSString *requestContentType; // @synthesize requestContentType=_requestContentType;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) PDURLOperationStats *stats; // @synthesize stats=_stats;
@property(readonly, nonatomic) PDURLResponse *response; // @synthesize response=_response;
@property(nonatomic) _Bool urlRequestAttempted; // @synthesize urlRequestAttempted=_urlRequestAttempted;
- (id)statusReport;	// IMP=0x00100000001123a5
- (void)handleRequestError;	// IMP=0x001000000011229f
- (void)handleHTTPStatusCode:(id)arg1;	// IMP=0x0010000000111ece
- (long long)errorCodeForRequest;	// IMP=0x0010000000111d64
- (void)markAsFinished;	// IMP=0x0010000000111d21
- (void)abort;	// IMP=0x0010000000111ce1
- (void)abortWithError:(id)arg1;	// IMP=0x0010000000111bba
- (void)flushCachedData;	// IMP=0x0010000000111b2c
- (void)handleResponseBody:(_Bool)arg1;	// IMP=0x0010000000111721
- (void)didCompleteProcessingResponse;	// IMP=0x00100000001116d4
- (_Bool)shouldProcessResponseBody;	// IMP=0x001000000011169d
- (_Bool)processResponse:(id *)arg1;	// IMP=0x0010000000111695
- (void)releaseResponse;	// IMP=0x001000000011165d
- (_Bool)verifyResponse;	// IMP=0x0010000000111655
- (_Bool)httpRequestHadTimeoutError;	// IMP=0x0010000000111516
- (_Bool)httpRequestHadServerError;	// IMP=0x00100000001114a0
@property(readonly, nonatomic) _Bool httpRequestSucceeded;
@property(readonly, nonatomic) _Bool httpRequestCompleted;
@property(readonly, nonatomic) _Bool urlRequestFailed;
- (void)signRequest:(id)arg1 withData:(id)arg2;	// IMP=0x0010000000111098
- (void)logHTTPHeaders:(id)arg1 withMessage:(id)arg2;	// IMP=0x0010000000110d89
- (id)customRequestHeaders;	// IMP=0x0010000000110d81
- (void)setAuthHeadersForRequest:(id)arg1;	// IMP=0x0010000000110cc8
- (void)setHeadersForRequest:(id)arg1;	// IMP=0x00100000001107c4
- (id)createNSURLRequest;	// IMP=0x0010000000110496
- (_Bool)willAcceptResponseContentType:(id)arg1;	// IMP=0x00100000001103e6
@property(readonly, nonatomic) long long clsErrorCodeForAuthenticationFailure;
- (_Bool)requiresAuth;	// IMP=0x00100000001103bb
@property(readonly, nonatomic) NSString *httpMethod;
- (void)rescheduleOperation;	// IMP=0x001000000011026b
- (void)execute;	// IMP=0x001000000010ff21
@property(readonly, nonatomic) _Bool wantsToExecute;
- (id)_createRequestTask;	// IMP=0x001000000010fd16
- (id)sessionTaskForRequest:(id)arg1 withData:(id)arg2;	// IMP=0x001000000010fbf1
- (void)prepareForNextRequestWithResponse:(id)arg1;	// IMP=0x001000000010f9b7
- (void)prepareForNextRequest;	// IMP=0x001000000010f921
@property(readonly, nonatomic) _Bool hasBigResponses;
- (id)operationID;	// IMP=0x001000000010f81c
- (id)initWithDatabase:(id)arg1;	// IMP=0x001000000010f772
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x0010000000113e34
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000113b65
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x00100000001137a6
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3;	// IMP=0x0010000000113786
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000113540
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;	// IMP=0x00100000001133c1
- (void)requestCompletedWith:(id)arg1 error:(id)arg2;	// IMP=0x0010000000112f91
- (void)sessionFailedWithError:(id)arg1;	// IMP=0x0010000000112e15
- (void)closeSession:(_Bool)arg1;	// IMP=0x0010000000112c54
- (id)createSessionIfNeeded;	// IMP=0x0010000000112966
- (void)_simulateResponseWithURL:(id)arg1 statusCode:(long long)arg2 headers:(id)arg3 data:(id)arg4 error:(id)arg5;	// IMP=0x0010000000114016
- (void)_simulateResumeForSessionTask:(id)arg1 response:(id)arg2 executionCount:(long long)arg3;	// IMP=0x0010000000114010

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

