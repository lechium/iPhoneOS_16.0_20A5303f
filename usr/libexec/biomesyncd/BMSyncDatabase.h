//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _flags;	// 24 = 0x18
    NSString *__error_ivar;	// 32 = 0x20
    unsigned long long __internal_state_ivar;	// 40 = 0x28
    CDUnknownBlockType _corruptionHandler;	// 48 = 0x30
}

- (void).cxx_destruct;	// IMP=0x001000000003bb91
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x001000000003b9e8
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x001000000003b6e6
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x001000000003b6ae
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x001000000003b62c
- (void)clearCachedStatements;	// IMP=0x001000000003b616
- (_Bool)rollback;	// IMP=0x001000000003b600
- (_Bool)commit;	// IMP=0x001000000003b5ea
- (_Bool)beginTransaction;	// IMP=0x001000000003b5d4
- (void)close;	// IMP=0x001000000003b524
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x001000000003b44c
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x001000000003a5c1
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x001000000003a49b
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x001000000003a2fb
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x001000000003a1a1
- (id)initWithPath:(id)arg1;	// IMP=0x001000000003a18d
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000003a0e5
- (int)CRDTLocationCount;	// IMP=0x0010000000004f70
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000004e01
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x0010000000004c3e
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x0010000000004a8d
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x0010000000004836
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x001000000000466a
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x001000000000422a
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x0010000000003fc2
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x0010000000003cd6
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x0010000000003b93
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x0010000000003a6c
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x001000000000388a
- (id)allPeers;	// IMP=0x001000000000749e
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000007361
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007222
- (id)lastSyncDateFromAnyDevice;	// IMP=0x0010000000007166
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007022
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x0010000000006ac6
- (id)localDevice;	// IMP=0x0010000000006a08
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000016e28
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x0010000000016bb2
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x001000000001699d
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x001000000001674c
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x0010000000016618
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x0010000000016510
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x0010000000023573
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x00100000000233dc
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x00100000000230fe
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000002299c
- (void)locationsInClockVector:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000022284
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x0010000000021dee
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000021a8e
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000002183e
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x0010000000021752
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002161c
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002143e
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x00100000000211e7
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000020bca
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x0010000000020929
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000206f8
- (int)ckAtomCount;	// IMP=0x0010000000020646
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000020452
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x001000000001ff0a
- (id)timestampClockVectorForStreamName:(id)arg1;	// IMP=0x001000000001fc67
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000001faf2
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000001f8d5
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000001ee53
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x0010000000026908
- (id)ckSyncEngineMetaData;	// IMP=0x00100000000268ef
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000026b63
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x0010000000026a5c
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x0010000000026921
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000026ec5
- (id)latestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000026d07
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000036e18
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x0010000000036cda
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x0010000000036b84
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x0010000000036a1c
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003684d
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x00100000000366c5
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x00100000000365a8
- (void)deleteCKRecordsAtOrBeforeLocation:(id)arg1;	// IMP=0x00100000000363a2
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000036281
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x0010000000035ff1
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x0010000000035de4
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000035c75
- (id)ckRecordForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000035ad8
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x001000000003571c
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x0010000000035456
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x00100000000351bf
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x0010000000034fbc
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x0010000000034dff
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000034c67
- (_Bool)saveSystemFieldsData:(id)arg1 syncToCloudKit:(_Bool)arg2 recordName:(id)arg3 zoneName:(id)arg4 recordType:(unsigned long long)arg5;	// IMP=0x00100000000348af
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(_Bool)arg2 recordType:(unsigned long long)arg3;	// IMP=0x00100000000346f6
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003450b
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x0010000000034413
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x0010000000034172
- (void)compactAndDeleteSessionLogs;	// IMP=0x001000000003cd89
- (id)computeAggregatedSessionLogs;	// IMP=0x001000000003cc97
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x001000000003c975
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x001000000003c691
- (void)recordSessionEnd:(id)arg1;	// IMP=0x001000000003c4ef
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x001000000003c289
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003d197
- (unsigned long long)_numPagesToVacuum;	// IMP=0x001000000003ce0a

@end

