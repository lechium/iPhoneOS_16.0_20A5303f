//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CLTimer, CMStrideCalLocationFSM, CMStrideCalibrationActivityBuffer, CMStrideCalibrationDatabase, CMStrideCalibrationElevationBuffer, CMStrideCalibrationRunningFormBuffer, CMStrideCalibrationStats, CMStrideCalibrationStepCountBuffer, NSMutableArray, NSString;
@protocol CLClientAuthorizationCacheProtocol, CLIntersiloUniverse, CLStreamingAwareLocationProviderProtocol;

@interface CMStrideCalibrator : NSObject
{
    struct unique_ptr<CLOdometerNotifier_Type::Client, std::default_delete<CLOdometerNotifier_Type::Client>> fOdometerClient;	// 8 = 0x8
    void *fServiceLocationProvider;	// 16 = 0x10
    struct unique_ptr<CLServiceLocationProvider_Type::Client, std::default_delete<CLServiceLocationProvider_Type::Client>> fServiceLocationClient;	// 24 = 0x18
    id <CLClientAuthorizationCacheProtocol> fClientAuthorizationCache;	// 32 = 0x20
    struct unique_ptr<CLStreamingAwareLocationProvider_Type::Client, std::default_delete<CLStreamingAwareLocationProvider_Type::Client>> fStreamingAwareLocationClient;	// 40 = 0x28
    id <CLStreamingAwareLocationProviderProtocol> fStreamingAwareProxy;	// 48 = 0x30
    struct unique_ptr<CLStepCountNotifier_Type::Client, std::default_delete<CLStepCountNotifier_Type::Client>> fStepCountClient;	// 56 = 0x38
    struct unique_ptr<CLMotionState_Type::Client, std::default_delete<CLMotionState_Type::Client>> fMotionStateClient;	// 64 = 0x40
    struct unique_ptr<CLCompanionNotifier_Type::Client, std::default_delete<CLCompanionNotifier_Type::Client>> fCompanionClient;	// 72 = 0x48
    struct unique_ptr<CLMotionStateMediator_Type::Client, std::default_delete<CLMotionStateMediator_Type::Client>> fMotionStateMediatorClient;	// 80 = 0x50
    id <CLIntersiloUniverse> fUniverse;	// 88 = 0x58
    CLTimer *fStopOpportunisticCalibrationTimer;	// 96 = 0x60
    CMStrideCalibrationActivityBuffer *fActivityBuffer;	// 104 = 0x68
    CMStrideCalibrationElevationBuffer *fElevationBuffer;	// 112 = 0x70
    CMStrideCalibrationRunningFormBuffer *fFormBuffer;	// 120 = 0x78
    CMStrideCalibrationStepCountBuffer *fStepsBuffer;	// 128 = 0x80
    CMStrideCalibrationStats *fStats;	// 136 = 0x88
    CMStrideCalibrationDatabase *fDatabase;	// 144 = 0x90
    CMStrideCalLocationFSM *fStrideCalLocationFSM;	// 152 = 0x98
    NSMutableArray *fLatestCalDataArray;	// 160 = 0xa0
    shared_ptr_a3117978 fStepCountDb;	// 168 = 0xa8
    double fLastGoodLocFix;	// 184 = 0xb8
    long long fCurrentSession;	// 192 = 0xc0
    _Bool fLogPedometer;	// 200 = 0xc8
    CDUnknownBlockType _calibrationTrackCallback;	// 208 = 0xd0
}

- (id).cxx_construct;	// IMP=0x001000000038dfbe
- (void).cxx_destruct;	// IMP=0x001000000038defb
@property(copy, nonatomic) CDUnknownBlockType calibrationTrackCallback; // @synthesize calibrationTrackCallback=_calibrationTrackCallback;
- (_Bool)queryStrideLengthTracks:(void *)arg1;	// IMP=0x001000000038dec6
- (id)copyHistory;	// IMP=0x001000000038dead
- (void)updateUserHeight:(long long)arg1;	// IMP=0x001000000038de94
- (void)updateCalibrationBins:(double)arg1;	// IMP=0x001000000038d240
- (_Bool)checkValidTrack:(id)arg1 associatedEntry:(const struct CLStepDistance *)arg2;	// IMP=0x001000000038caf0
- (void)fsm:(id)arg1 didUpdateSource:(int)arg2;	// IMP=0x001000000038caea
- (void)fsm:(id)arg1 didUpdateLocationAtTime:(double)arg2;	// IMP=0x001000000038c6fd
- (void)fsm:(id)arg1 didYieldTrack:(id)arg2;	// IMP=0x001000000038c664
- (void)fsm:(id)arg1 didTransitionFromState:(int)arg2 toState:(int)arg3;	// IMP=0x001000000038c464
- (void)strideCalibrationDatabase:(id)arg1 didInsertEntry:(struct CLStrideCalEntry)arg2;	// IMP=0x001000000038c36e
- (void)quitForcedLocationState;	// IMP=0x001000000038c25b
- (void)attemptForcedLocation;	// IMP=0x001000000038be2f
- (void)checkForLocationStateTransition;	// IMP=0x001000000038b9fd
- (_Bool)outOfSession;	// IMP=0x001000000038b9ec
- (_Bool)inOutdoorPedestrianSession;	// IMP=0x001000000038b9c7
- (long long)currentSession;	// IMP=0x001000000038b9ba
- (void)tick:(double)arg1;	// IMP=0x001000000038b98c
- (void)addLatestCalData:(id)arg1;	// IMP=0x001000000038b83b
- (_Bool)isCalibrationConvergedMedianForSpeed:(double)arg1;	// IMP=0x001000000038b822
- (void)setSession:(long long)arg1;	// IMP=0x001000000038b6ca
- (void)dealloc;	// IMP=0x001000000038b5d2
- (id)initInUniverse:(id)arg1 stepCountDb:(shared_ptr_a3117978)arg2;	// IMP=0x001000000038b076
- (void)onRunningFormMetrics:(const struct FormMetrics *)arg1;	// IMP=0x001000000062e0eb
- (void)authorizeLocationInReplay;	// IMP=0x001000000062e0e5
- (void)onLocationNotification:(const int *)arg1 data:(const void *)arg2;	// IMP=0x001000000062df68
- (void)onOdometerNotification:(const int *)arg1 data:(const union NotificationData *)arg2;	// IMP=0x001000000062def6
- (void)onMotionStateNotification:(const int *)arg1 data:(const union NotificationData *)arg2;	// IMP=0x001000000062decc
- (void)onStepCountNotification:(const int *)arg1 data:(const union NotificationData *)arg2;	// IMP=0x001000000062de50
- (_Bool)isAuthorizedForLocation;	// IMP=0x001000000091cbab
- (void)checkLocationAuthorization;	// IMP=0x001000000091ca87
- (void)tickleArrow;	// IMP=0x001000000091ca6f
- (void)stopLeechingLocation;	// IMP=0x001000000091ca42
- (void)startLeechingLocation;	// IMP=0x001000000091ca12
- (void)stopLocationUpdates;	// IMP=0x001000000091c9b7
- (void)startLocationUpdates;	// IMP=0x001000000091c951
- (void)stopGpsOdometerUpdates;	// IMP=0x001000000091c924
- (void)startGpsOdometerUpdates;	// IMP=0x001000000091c8f4
- (void)stopGpsOdometerSpectatorUpdates;	// IMP=0x001000000091c8c7
- (void)startGpsOdometerSpectatorUpdates;	// IMP=0x001000000091c897
- (void)stopElevationSpectatorUpdates;	// IMP=0x001000000091c86a
- (void)startElevationSpectatorUpdates;	// IMP=0x001000000091c83a
- (void)stopElevationUpdates;	// IMP=0x001000000091c80d
- (void)startElevationUpdates;	// IMP=0x001000000091c7dd
- (void)teardownCLNotifiers;	// IMP=0x001000000091c75a
- (void)setupCLNotifiers;	// IMP=0x001000000091c17e
- (void)onMotionStateMediatorNotification:(const int *)arg1 data:(const union NotificationData *)arg2;	// IMP=0x001000000091cd4b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

