//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class NSMutableArray, NSString, PDAccountManager, PDAppletSubcredentialManager, PDAssertionManager, PDCardFileManager, PDDatabaseManager, PDDefaultPassManager, PDDeviceRegistrationServiceCoordinator, PDExpressPassManager, PDExpressTransitUpgradeController, PDISO18013Manager, PDPaymentWebServiceCoordinator, PDPushProvisioningManager, PDRelevantPassProvider, PDRemoteInterfacePresenter, PDSpotlightIndexer, PDUserNotificationManager, PDWebServicesCoordinator, PKEntitlementWhitelist, PKIDSManager, PKSecureElement, PKUsageNotificationServer;
@protocol PDPassLibraryDelegate;

@interface PDPassLibrary : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    struct os_unfair_lock_s _lock;	// 16 = 0x10
    NSMutableArray *_userNotifications;	// 24 = 0x18
    PKSecureElement *_secureElement;	// 32 = 0x20
    PDPaymentWebServiceCoordinator *_paymentWebServicesCoordinator;	// 40 = 0x28
    PDWebServicesCoordinator *_webServicesCoordinator;	// 48 = 0x30
    PDCardFileManager *_cardFileManager;	// 56 = 0x38
    PDDatabaseManager *_databaseManager;	// 64 = 0x40
    PDExpressPassManager *_expressPassManager;	// 72 = 0x48
    PDUserNotificationManager *_userNotificationManager;	// 80 = 0x50
    PDRelevantPassProvider *_relevantPassProvider;	// 88 = 0x58
    PKUsageNotificationServer *_usageNotificationServer;	// 96 = 0x60
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 104 = 0x68
    PKIDSManager *_idsManager;	// 112 = 0x70
    PDSpotlightIndexer *_spotlightIndexer;	// 120 = 0x78
    PDExpressTransitUpgradeController *_expressUpgradeController;	// 128 = 0x80
    PDAccountManager *_accountManager;	// 136 = 0x88
    PDAppletSubcredentialManager *_subcredentialManager;	// 144 = 0x90
    PDPushProvisioningManager *_pushProvisioningManager;	// 152 = 0x98
    PDDefaultPassManager *_defaultPassManager;	// 160 = 0xa0
    PDAssertionManager *_assertionManager;	// 168 = 0xa8
    PDISO18013Manager *_isoManager;	// 176 = 0xb0
    PDDeviceRegistrationServiceCoordinator *_deviceRegistrationServiceCoordinator;	// 184 = 0xb8
    id <PDPassLibraryDelegate> _delegate;	// 192 = 0xc0
}

- (void).cxx_destruct;	// IMP=0x00200000000681cc
@property(nonatomic) __weak id <PDPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PDDeviceRegistrationServiceCoordinator *deviceRegistrationServiceCoordinator; // @synthesize deviceRegistrationServiceCoordinator=_deviceRegistrationServiceCoordinator;
@property(retain, nonatomic) PDISO18013Manager *isoManager; // @synthesize isoManager=_isoManager;
@property(retain, nonatomic) PDAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDExpressTransitUpgradeController *expressUpgradeController; // @synthesize expressUpgradeController=_expressUpgradeController;
@property(retain, nonatomic) PDSpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain, nonatomic) PKIDSManager *idsManager; // @synthesize idsManager=_idsManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PKUsageNotificationServer *usageNotificationServer; // @synthesize usageNotificationServer=_usageNotificationServer;
@property(retain, nonatomic) PDRelevantPassProvider *relevantPassProvider; // @synthesize relevantPassProvider=_relevantPassProvider;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDWebServicesCoordinator *webServicesCoordinator; // @synthesize webServicesCoordinator=_webServicesCoordinator;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServicesCoordinator; // @synthesize paymentWebServicesCoordinator=_paymentWebServicesCoordinator;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
- (void)spotlightStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067d53
- (void)spotlightResetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067b35
- (void)spotlightReindexContentWithIdentifiers:(id)arg1 acknowledgement:(CDUnknownBlockType)arg2;	// IMP=0x00100000000679c3
- (void)spotlightReindexAllContentWithAcknowledgement:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067880
- (void)forceImmediateRevocationCheck;	// IMP=0x00100000000677ab
- (void)removeAllScheduledActivities;	// IMP=0x0010000000067593
- (void)pendingUserNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067489
- (void)issueWalletUserNotificationWithTitle:(id)arg1 message:(id)arg2 forPassUniqueIdentifier:(id)arg3 customActionRoute:(id)arg4;	// IMP=0x00100000000672d2
- (void)shuffleGroups:(int)arg1;	// IMP=0x00100000000671ea
- (void)noteAppleAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000066c93
- (void)introduceDatabaseIntegrityProblem;	// IMP=0x0010000000066bc8
- (void)getDiffForPassUpdateUserNotificationWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000066a7a
- (_Bool)_writePass:(id)arg1 withSettings:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000000669d6
- (_Bool)_writePass:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000669b1
- (unsigned long long)_addPassesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x00100000000665e5
- (void)_addPasses:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000066498
- (void)_getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000663a4
- (_Bool)_entitledForPassTypeID:(id)arg1 teamID:(id)arg2 associatedPassTypeIdentifiers:(id)arg3 associatedApplicationIdentifiers:(id)arg4 forActions:(unsigned long long)arg5;	// IMP=0x00100000000661cc
- (_Bool)_entitledForPassType:(unsigned long long)arg1 uniqueIdentifier:(id)arg2 actions:(unsigned long long)arg3;	// IMP=0x001000000006605b
- (_Bool);	// IMP=0x001000000006603c
- (_Bool)_entitledForObject:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x0010000000065ecc
- (id)_entitlementFilteredPasses:(id)arg1;	// IMP=0x0010000000065db5
- (void)_sanitizePasses:(id)arg1;	// IMP=0x0010000000065c83
- (id)_sanitizePassIfNeeded:(id)arg1;	// IMP=0x0010000000065c0f
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x0010000000065b7a
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x0010000000065aec
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;	// IMP=0x0010000000065a5e
- (void)contactlessInterfaceDidPresentFromSource:(long long)arg1;	// IMP=0x00100000000659d0
- (void)supportsSearchForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000065761
- (void)invalidateVehicleConnectionSessionIdentifier:(id)arg1;	// IMP=0x001000000006566c
- (void)sendRKEPassThroughMessage:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000065497
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000065379
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000651ad
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000064ec0
- (void)supportsDisbursements:(CDUnknownBlockType)arg1;	// IMP=0x0010000000064c7d
- (void)usingSynchronousProxy:(_Bool)arg1 fetchAppletSubCredentialForPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000064309
- (void)usingSynchronousProxy:(_Bool)arg1 generateTransactionKeyWithReaderIdentifier:(id)arg2 readerPublicKey:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000063e92
- (void)canAddHomeKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000006369d
- (void)canAddCarKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000634f3
- (void)canShareShareableSecureElementPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000633af
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000062e62
- (void)setBackupMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000629f6
- (void)backupMetadataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000062669
- (void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000062436
- (void)usingSynchronousProxy:(_Bool)arg1 longTermPrivacyKeyForCredentialGroupIdentifier:(id)arg2 reuseExisting:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000006225c
- (void)usingSynchronousProxy:(_Bool)arg1 addISO18013Blobs:(id)arg2 cardType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000062082
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x0010000000061e62
- (void)usingSynchronousProxy:(_Bool)arg1 generateISOEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000061c9f
- (void)usingSynchronousProxy:(_Bool)arg1 generateSEEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000061ade
- (void)usingSynchronousProxy:(_Bool)arg1 signWithFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 challenge:(id)arg5 publicKeyIdentifier:(id)arg6 externalizedAuth:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x001000000006179b
- (void)usingSynchronousProxy:(_Bool)arg1 checkFidoKeyPresenceForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000061599
- (void)usingSynchronousProxy:(_Bool)arg1 createFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 challenge:(id)arg4 externalizedAuth:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000061323
- (void)signData:(id)arg1 forPassUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000060b3d
- (void)migrateDataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000060a27
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;	// IMP=0x00100000000608e4
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;	// IMP=0x0010000000060796
- (void)recomputeRelevantPassesWithSearchMode:(long long)arg1;	// IMP=0x00100000000606da
- (void)personalizePassWithUniqueIdentifier:(id)arg1 contact:(id)arg2 personalizationToken:(id)arg3 requiredPersonalizationFields:(unsigned long long)arg4 personalizationSource:(unsigned long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000006050e
- (void)updateObjectWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000603cc
- (void)resetApplePayWithDiagnosticReason:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000060255
- (void)removePassesOfType:(unsigned long long)arg1 withDiagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000060105
- (void)recoverPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ff6c
- (void)removePassesWithUniqueIDs:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005fc14
- (void)removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005fa3e
- (void)usingSynchronousProxy:(_Bool)arg1 enableExpressForPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005f5f5
- (void)usingSynchronousProxy:(_Bool)arg1 containsPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005f41a
- (void)usingSynchronousProxy:(_Bool)arg1 replaceUnsignedPassWithDataFileDescriptor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005f084
- (void)usingSynchronousProxy:(_Bool)arg1 availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e870
- (void)usingSynchronousProxy:(_Bool)arg1 provisionHomeKeyPassForSerialNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d2ab
- (void)usingSynchronousProxy:(_Bool)arg1 addUnsignedPassesWithDataFileDescriptors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005c91a
- (void)_usingSynchronousProxy:(_Bool)arg1 addPassesWithEnumerator:(CDUnknownBlockType)arg2 estimatedNumberOfPasses:(unsigned long long)arg3 osTransaction:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000005c2c4
- (void)usingSynchronousProxy:(_Bool)arg1 addPassesContainer:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005bfd2
- (void)addPassesWithData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005bb5d
- (void)noteObjectSharedWithUniqueID:(id)arg1;	// IMP=0x001000000005ba1f
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)arg1;	// IMP=0x001000000005b8d1
- (void)setSortingState:(long long)arg1 forObjectWithUniqueID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005b73b
- (void)updateSettings:(unsigned long long)arg1 forObjectWithUniqueID:(id)arg2;	// IMP=0x001000000005b60e
- (void)usingSynchronousProxy:(_Bool)arg1 getImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 suffix:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005b423
- (void)getImageSetForUniqueID:(id)arg1 ofType:(long long)arg2 displayProfile:(id)arg3 suffix:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000005b2f1
- (void)usingSynchronousProxy:(_Bool)arg1 getCachedImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 displayTraits:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005b106
- (void)usingSynchronousProxy:(_Bool)arg1 getContentForUniqueID:(id)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005af95
- (void)getContentForUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005af7b
- (void)_queue_replacePass:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ae32
- (void)replacePassWithPassData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ad08
- (void)getManifestHashAndSettingsForPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005aa18
- (void)getRouteRelevantPassesForLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000059cc6
- (void)getPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000059bfa
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(id)arg2 uniqueID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000059aa1
- (void)getDataForBundleResources:(id)arg1 objectUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000059973
- (void)getDataForBundleResourceNamed:(id)arg1 withExtension:(id)arg2 objectUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000059835
- (void)getArchivedObjectWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000059726
- (void)isPassbookVisibleWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000596ca
- (void)hasSecureElementPassesOfType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000059652
- (void)isRemovingPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000595d7
- (void)passWithDPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000594c9
- (void)passWithFPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000593ed
- (void)postUpgradedPassNotificationForMarket:(id)arg1 passUniqueID:(id)arg2;	// IMP=0x0010000000059143
- (void)checkForTransitNotification;	// IMP=0x0010000000059054
- (void)_getServiceProviderDataForPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000058eee
- (void)_getEncryptedServiceProviderDataForSecureElementPass:(id)arg1 publicKey:(id)arg2 scheme:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000058d60
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000589f8
- (void)usingSynchronousProxy:(_Bool)arg1 getEncryptedServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000057629
- (void)_transitTopUpMessage:(id)arg1 passes:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000056df1
- (void)_transitDCIMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000055b4b
- (void)transitMessageForRouteInfo:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000055579
- (void)supportedTransitPartnersForDigitalIssuance:(CDUnknownBlockType)arg1;	// IMP=0x0010000000054bb4
- (void)sortedTransitPassesForAppletDataFormat:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005422e
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x001000000005342f
- (void)expressTransitPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000531c5
- (void)peerPaymentPassUniqueIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000530d9
- (void)defaultPaymentPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000052f09
- (void)countPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000052db7
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000052b8b
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000052b28
- (id)_filteredPasses:(id)arg1 forApplicationIdentifier:(id)arg2;	// IMP=0x00100000000529cd
- (id)_filteredPasses:(id)arg1 forWebDomain:(id)arg2;	// IMP=0x0010000000052872
- (void)enabledValueAddedServicePassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000526de
- (void)usingSynchronousProxy:(_Bool)arg1 getManifestHashForPassWithUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005240a
- (void)getMetadataForFieldWithProperties:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000052245
- (void)getPassUniqueIDsForAssociatedApplicationIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000051b1e
- (void)getPassesWithUniqueIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000518a9
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000516e4
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005151f
- (void)inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000051361
- (void)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000511bc
- (id)_inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000050fed
- (id)_inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000050d1e
- (void)_paymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 webPayment:(_Bool)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 withHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000005076e
- (void)_passesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000050535
- (_Bool)_hasPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 paymentApplicationStates:(id)arg3;	// IMP=0x001000000005043b
- (void)_hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000050155
- (void)hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 isMultiTokensRequest:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000050124
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004fe2c
- (void)inAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004fbda
- (void)hasRemoteLibraryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004fb80
- (void)getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004fa8a
- (void)notifyPassUsedWithIdentifier:(id)arg1 fromSource:(long long)arg2;	// IMP=0x001000000004fa08
- (void)sendUserEditedCatalog:(id)arg1;	// IMP=0x001000000004f8db
- (void)usingSynchronousProxy:(_Bool)arg1 getPaymentPassesPendingActivationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004f68c
- (void)usingSynchronousProxy:(_Bool)arg1 getGroupsControllerSnapshotWithOptions:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004f314
- (void)getGroupsControllerSnapshotWithOptions:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004f2fa
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesAndCatalogOfPassTypes:(unsigned long long)arg2 limitResults:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004f039
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004f01c
- (void)isPaymentPassActivationAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004efdc
- (void)canPresentPaymentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e301
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)arg1 fromSource:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004e125
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e0c2
- (void)openDigitalIssuanceUIForIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e03c
- (void)paymentPassWithAssociatedAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004dd9d
- (void)presentPaymentSetupRequest:(id)arg1 orientation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000004dc08
- (void)paymentSetupFeaturesForConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004d5d4
- (_Bool)_isConfigurationValid:(id)arg1;	// IMP=0x001000000004d473
- (void)openPaymentUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000004d180
- (void)openWalletUIWithRelevantPass:(id)arg1;	// IMP=0x001000000004cfa8
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPassWithUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004ceb9
- (void)canAddFelicaPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004ce76
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004cc4f
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesOfStyles:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004ca54
- (void)getPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004c98d
- (void)getPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004c8cc
- (void)sendCatalogChanged:(id)arg1;	// IMP=0x001000000004c84a
- (void)sendPassRecovered:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000004c6ad
- (void)sendPassRemoved:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000004c589
- (void)sendPassUpdated:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000004c3ec
- (void)sendPassAdded:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000004c24f
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004c211
- (id)remoteObjectProxy;	// IMP=0x001000000004c1d3
- (void)clearConnectionReference;	// IMP=0x001000000004c014
@property(readonly, nonatomic) _Bool willSanitizePasses;
- (void)dealloc;	// IMP=0x001000000004beb1
- (id)initWithConnection:(id)arg1;	// IMP=0x001000000004be14

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

