//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE;

@interface PaymentTransaction
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x0040000000425266
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x001000000042515a
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x0010000000425030
+ (id)_propertySettersForMerchant;	// IMP=0x0010000000424ad6
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x00100000004227d5
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x00100000004222d4
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x0010000000420842
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x001000000042082b
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x0010000000420645
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x00100000004205ab
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x00100000004204d3
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x001000000042026a
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x001000000041ff6b
+ (id)_predicateForPANIdentifier:(id)arg1;	// IMP=0x001000000041ff48
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x001000000041ff25
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x001000000041ff02
+ (id)_predicateForNoWorldRegion;	// IMP=0x001000000041fee2
+ (id)_predicateForWorldRegion;	// IMP=0x001000000041fec2
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x001000000041f661
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x001000000041f322
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x001000000041f1dd
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x001000000041f098
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x001000000041f025
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x001000000041eedb
+ (id)_predicateForMapsMatch;	// IMP=0x001000000041edd7
+ (id)_predicateForIsProcessedByTransactionProcessor;	// IMP=0x001000000041ec90
+ (id)_predicateForHasCityAndCountry;	// IMP=0x001000000041eb8c
+ (id)_predicateForHasLocation;	// IMP=0x001000000041eb6c
+ (id)_predicateForHasPOIMatch;	// IMP=0x001000000041eb4c
+ (id)_predicateForNoMapsMatch;	// IMP=0x001000000041ea48
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x001000000041e9d5
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x001000000041e962
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x001000000041e8ef
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x001000000041e87c
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x001000000041e859
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x001000000041e5eb
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x001000000041e578
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x001000000041e505
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x001000000041e2e4
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x001000000041e2c1
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x001000000041e29e
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x001000000041e27b
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x001000000041e258
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x001000000041e235
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x001000000041e212
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x001000000041e1ef
+ (id)_predicateForMapsBrandIdentifiers:(id)arg1;	// IMP=0x001000000041e1cc
+ (id)_predicateForMapsIdentifiers:(id)arg1;	// IMP=0x001000000041e1a9
+ (id)_predicateForMerchantIdentifiers:(id)arg1;	// IMP=0x001000000041e186
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x001000000041e163
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x001000000041e0f0
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x001000000041e0cd
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x001000000041e0aa
+ (id)_predicateForMerchantName:(id)arg1;	// IMP=0x001000000041e087
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x001000000041e014
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x001000000041df93
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x001000000041dde3
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x001000000041db16
+ (id)_predicateForUnansweredQuestions;	// IMP=0x001000000041d93c
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x001000000041d8c9
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x001000000041d8a6
+ (id)_predicateForRedemptionType:(unsigned long long)arg1;	// IMP=0x001000000041d833
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x001000000041d6d2
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x001000000041d6af
+ (id)_predicateForAdjustmentType:(long long)arg1;	// IMP=0x001000000041d63c
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x001000000041d619
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x001000000041d5f6
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x001000000041d56e
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x001000000041d4ed
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x001000000041d46c
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x001000000041d3eb
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x001000000041d36a
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x001000000041d2e9
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x001000000041d268
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x001000000041d027
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x001000000041ce3d
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x001000000041cd1c
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x001000000041cbb9
+ (id)_predicateForPID:(id)arg1;	// IMP=0x001000000041cb96
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x001000000041cb23
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x001000000041cacd
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x001000000041c8ae
+ (id)_predicateForTransactionArchivePID:(long long)arg1;	// IMP=0x001000000041c83b
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x001000000041c7c8
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x001000000041c748
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x001000000041c6c8
+ (id)authenticationContextFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x001000000041c58d
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x001000000041b728
+ (id)merchantFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x001000000041b154
+ (unsigned long long)suppressionBehaviorForTransactionSourceIdentifier:(id)arg1 serviceIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004188d5
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000415a20
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004155ec
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x0010000000415560
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 fromPID:(long long)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000414ee9
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000414ec3
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x0010000000414d15
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x00100000004149d5
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x0010000000414877
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x0010000000414776
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x00100000004144d5
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x0010000000414464
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x00100000004142c2
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000041413b
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x00100000004140c8
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x00100000004140a5
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x0010000000413eed
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x0010000000413ec6
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x00100000004138d2
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x00100000004131b0
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x0010000000412ef2
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x0010000000412e3b
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x0010000000412d42
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x0010000000412b44
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 withRedemptionType:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x001000000041265e
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x00100000004124c5
+ (id)_predicateForRequest:(id)arg1;	// IMP=0x001000000041125c
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x0010000000411196
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x0010000000410f61
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x0010000000410ec9
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x0010000000410d17
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000410a3a
+ (id)transactionServiceIdentifiersInDatabase:(id)arg1 withTransactionType:(long long)arg2 withPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 startDate:(id)arg7 endDate:(id)arg8;	// IMP=0x001000000041056e
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x00100000004101c7
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x001000000040fe20
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 inDatabase:(id)arg4;	// IMP=0x001000000040fa4f
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 forPeerPaymentSubtype:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x001000000040f774
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000040f4c4
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x001000000040f1a2
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x001000000040f009
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040ee6e
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040ecd3
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x001000000040e9b8
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x001000000040e79c
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x001000000040e5fa
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x001000000040e55e
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x001000000040e12f
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x001000000040dd97
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x001000000040dbbf
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000040d9ee
+ (id)transactionsForAdjustmentType:(long long)arg1 limit:(long long)arg2 inDatabase:(id)arg3;	// IMP=0x001000000040d920
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x001000000040d839
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x001000000040d6a1
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040cc12
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x001000000040c971
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x001000000040c76f
+ (id);	// IMP=0x001000000040c423
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2;	// IMP=0x001000000040c373
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000040c05e
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040c038
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2;	// IMP=0x001000000040c023
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000040bd0e
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040bce8
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2;	// IMP=0x001000000040bcd3
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000040b9be
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000040b998
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2;	// IMP=0x001000000040b983
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x001000000040b8d1
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x001000000040b845
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x001000000040b7b9
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x001000000040b65d
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x001000000040b4d2
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x001000000040b446
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x001000000040b3ba
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x001000000040abdc
+ (id)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x001000000040a801
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x001000000040a773
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x001000000040a686
+ (void)addJoinClausesForProperty:(id)arg1 toJoins:(id)arg2;	// IMP=0x0010000000409fda
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x0010000000409f5d
+ (id)databaseTable;	// IMP=0x0010000000409f50
- (void)_createPaymentTransactionAuthentication;	// IMP=0x004000000042276b
- (_Bool)_hasValidMerchantData;	// IMP=0x00100000004226f3
- (id)_transactionSourceIdentifierObject;	// IMP=0x001000000041c62a
- (id)transactionAuthenticationContext;	// IMP=0x001000000041c420
- (id)transactionAuthenticationResult;	// IMP=0x001000000041c27c
- (long long)accountType;	// IMP=0x001000000041c231
- (id)passUniqueIdentifier;	// IMP=0x001000000041c164
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x001000000041c119
- (long long)transactionType;	// IMP=0x001000000041c0ce
- (id)dbPaymentTransactionArchive;	// IMP=0x001000000041c0a4
- (id)transactionSourceIdentifier;	// IMP=0x001000000041c054
- (id)transactionArchive;	// IMP=0x001000000041bfca
- (id)paymentApplication;	// IMP=0x001000000041bf33
- (id)accountIdentifier;	// IMP=0x001000000041bf1a
- (id)allRecordTypesAndNames;	// IMP=0x001000000041beb2
- (id)serviceIdentifier;	// IMP=0x001000000041be99
- (id)identifier;	// IMP=0x001000000041be80
- (MISSING_TYPE *)foreignExchangeInformation;	// IMP=0x001000000041b9ce
- (id)merchant;	// IMP=0x001000000041b38a
- (id)paymentTransaction;	// IMP=0x0010000000419d27
- (void)updateWithReleasedData:(id)arg1;	// IMP=0x0010000000419c8e
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x0010000000419beb
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x0010000000419b48
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x0010000000419aac
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x001000000041974d
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x00100000004193ee
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x001000000041936f
- (void)updateWithPaymentTransactionRewards:(id)arg1;	// IMP=0x00100000004192f0
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x0010000000419271
- (void)updateWithCommutePlanUnits:(id)arg1;	// IMP=0x00100000004191ce
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x001000000041912b
- (void)updateWithMerchant:(id)arg1;	// IMP=0x0010000000418bc4
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x0010000000418b6a
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x001000000041887b
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x0010000000415ec4
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x0010000000415c7c
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x0010000000415911
- (_Bool)deleteFromDatabase;	// IMP=0x001000000040ac82
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000407f9f

@end

