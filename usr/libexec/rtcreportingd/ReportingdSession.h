//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSXPCConnection;
@protocol OS_os_transaction, ReportingSessionEventCacheDelegate, ReportingdSessionDelegate;

@interface ReportingdSession : NSObject
{
    unsigned int _sessionID;	// 8 = 0x8
    NSDictionary *_sessionInfo;	// 16 = 0x10
    NSDictionary *_userInfo;	// 24 = 0x18
    NSDictionary *_frameworks;	// 32 = 0x20
    NSDictionary *_backends;	// 40 = 0x28
    NSDictionary *_hierarchyDictionary;	// 48 = 0x30
    NSMutableDictionary *_periodicServices;	// 56 = 0x38
    id <ReportingdSessionDelegate> _sessionDelegate;	// 64 = 0x40
    NSString *_sessionIDString;	// 72 = 0x48
    NSString *_storebagVersion;	// 80 = 0x50
    int _clientPID;	// 88 = 0x58
    NSString *_bundleID;	// 96 = 0x60
    unsigned char _deviceid[41];	// 104 = 0x68
    unsigned int _effectiveUserIdentifier;	// 148 = 0x94
    NSXPCConnection *_connection;	// 152 = 0x98
    _Bool _hasAggregator;	// 160 = 0xa0
    _Bool _hasFinishedGracefully;	// 161 = 0xa1
    _Bool _disableGracefulTerminationReporting;	// 162 = 0xa2
    NSData *_digestKey;	// 168 = 0xa8
    int _digestAlgorithm;	// 176 = 0xb0
    NSDate *_timeSinceLastMessage;	// 184 = 0xb8
    id <ReportingSessionEventCacheDelegate> _activitySchedulerDelegate;	// 192 = 0xc0
    _Bool _counted;	// 200 = 0xc8
    NSObject<OS_os_transaction> *_transaction;	// 208 = 0xd0
}

@property(copy) NSDate *timeSinceLastMessage; // @synthesize timeSinceLastMessage=_timeSinceLastMessage;
@property(copy) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly) int clientPID; // @synthesize clientPID=_clientPID;
@property(getter=isCounted) _Bool counted; // @synthesize counted=_counted;
@property _Bool hasAggregator; // @synthesize hasAggregator=_hasAggregator;
@property(copy) NSString *storebagVersion; // @synthesize storebagVersion=_storebagVersion;
@property(readonly) NSString *sessionIDString; // @synthesize sessionIDString=_sessionIDString;
@property(readonly, nonatomic) NSDictionary *sessionInfo; // @synthesize sessionInfo=_sessionInfo;
@property(readonly, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property unsigned int sessionID; // @synthesize sessionID=_sessionID;
- (void)invalidate;	// IMP=0x00100000000116a1
- (void)sendOneMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 storebag:(id)arg3 category:(unsigned short)arg4 type:(unsigned short)arg5 payload:(id)arg6;	// IMP=0x0010000000011097
- (void)addSessionsAccumulatedHealthInfoToPayload:(id)arg1 sessionList:(id)arg2 storebags:(id)arg3;	// IMP=0x0010000000010db7
- (unsigned long long)addSessionHealthInfo:(id)arg1 healthReport:(id)arg2;	// IMP=0x0010000000010c4b
- (unsigned long long)batchedEventsSize;	// IMP=0x0010000000010aec
- (void)updateCombinedSessionID;	// IMP=0x001000000001090d
- (void)uploadLogData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000010748
- (void)uploadFileWithURL:(id)arg1 extensionToken:(char *)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000010500
- (void)internalFlushMessagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000010041
- (void)internalSendMessage:(id)arg1 timestamp:(const struct timeval *)arg2 method:(unsigned short)arg3 respCode:(unsigned short)arg4;	// IMP=0x001000000000ff17
- (id)sendMessageWithDictionary:(id)arg1 error:(id)arg2;	// IMP=0x001000000000f80d
- (void)shutdownSessionAggregation;	// IMP=0x001000000000f7b1
- (void)aggregateMessage:(id)arg1 timestamp:(double)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5;	// IMP=0x001000000000f690
- (void)sendToAggregator:(id)arg1 timestamp:(double)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5;	// IMP=0x001000000000f5f5
@property(readonly) NSString *hierarchyToken;
@property(readonly) unsigned int hierarchyLevel;
- (void)receivedUserInfo:(id)arg1;	// IMP=0x001000000000f43c
- (void)updateSessionWithDefaultSessionInfo;	// IMP=0x001000000000f40a
- (id)fetchBlacklistedEvents;	// IMP=0x001000000000f192
- (id)fetchWhitelistedEvents;	// IMP=0x001000000000ef4a
- (id)fetchReportingStates;	// IMP=0x001000000000ed8c
- (void)syncReportingStates;	// IMP=0x001000000000e8c0
- (_Bool)updateReportingStates;	// IMP=0x001000000000e630
- (void)updateUserInfoForBackends;	// IMP=0x001000000000e44d
- (void)createBackendsWithStorebag:(id)arg1;	// IMP=0x001000000000e1bd
- (void)removeEphemeralSession:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000df26
- (void)setEphemeralSession:(id)arg1 enabled:(_Bool)arg2;	// IMP=0x001000000000dcbe
- (void)validateEphemeralSession:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000da17
- (void)getSessionId:(CDUnknownBlockType)arg1;	// IMP=0x001000000000d9b8
- (void)setDigestKey:(id)arg1 algorithm:(int)arg2;	// IMP=0x001000000000d7bd
- (void)updateSharedDataForKey:(id)arg1 value:(id)arg2;	// IMP=0x001000000000d6eb
- (void)updateSharedDataWithDictionary:(id)arg1;	// IMP=0x001000000000d693
- (void)sendMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000000d465
- (MISSING_TYPE *)uploadFileAtPath:extensionToken:completionHandler: /* Error: Ran out of types for this method. */;	// IMP=0x001000000000d40d
- (void)finishSessionGracefully;	// IMP=0x001000000000d37d
- (void)flushMessagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000d26c
- (void)sendMessageWithDictionary:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000d11f
- (void)fetchDisplayURL:(CDUnknownBlockType)arg1;	// IMP=0x001000000000cd45
- (void)fetchStatesWithUserInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000cc65
- (void)startConfigWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000000cac5
- (void)sendStartMessage;	// IMP=0x001000000000c76e
- (void)setSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3 hasAggregationBlock:(_Bool)arg4;	// IMP=0x001000000000c60f
- (void)setHierarchyToken:(id)arg1;	// IMP=0x001000000000c4d0
- (void)updateUserInfo:(id)arg1;	// IMP=0x001000000000c493
- (_Bool)hasValidUserInfoKeys;	// IMP=0x001000000000c43f
- (void)releaseUserInfo;	// IMP=0x001000000000c418
- (id)sessionInformation;	// IMP=0x001000000000c311
- (void)dealloc;	// IMP=0x001000000000bf80
- (id)initWithSessionDelegate:(id)arg1 connection:(id)arg2;	// IMP=0x001000000000bd9e

@end

