//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSNumber, NSString;
@protocol OS_dispatch_queue, ReportingSessionEventCacheDelegate;

@interface RTCReportingBackend : NSObject
{
    NSDictionary *_profile;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    int _state;	// 24 = 0x18
    NSString *_productVersion;	// 32 = 0x20
    NSString *_osName;	// 40 = 0x28
    NSString *_buildVersion;	// 48 = 0x30
    NSString *_hardwareType;	// 56 = 0x38
    NSString *_productFamily;	// 64 = 0x40
    double _startTimeStamp;	// 72 = 0x48
    unsigned int _sessionID;	// 80 = 0x50
    NSString *_combinedSessionIDString;	// 88 = 0x58
    int _compType;	// 96 = 0x60
    unsigned short _clientVersion;	// 100 = 0x64
    unsigned short _eventID;	// 102 = 0x66
    unsigned char _selfVersionMajor;	// 104 = 0x68
    unsigned char _selfVersionMiddle;	// 105 = 0x69
    unsigned char _selfVersionMinor;	// 106 = 0x6a
    _Bool _isInternal;	// 107 = 0x6b
    unsigned char _shouldUseWiFiOnly;	// 108 = 0x6c
    _Atomic unsigned int _totalBytesSent;	// 112 = 0x70
    _Atomic unsigned int _bytesSentSinceLastReport;	// 116 = 0x74
    _Bool _overrideServerResponse;	// 120 = 0x78
    NSDictionary *_userInfoDict;	// 128 = 0x80
    _Bool _batchEvents;	// 136 = 0x88
    _Bool _hasRealtimeEvents;	// 137 = 0x89
    char *_udid;	// 144 = 0x90
    unsigned int _effectiveUserIdentifier;	// 152 = 0x98
    NSString *_displayURL;	// 160 = 0xa0
    _Bool _dnuEnabled;	// 168 = 0xa8
    int _dnuType;	// 172 = 0xac
    double _samplingFactor;	// 176 = 0xb0
    NSNumber *_samplingThreshold;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_stateQueue;	// 192 = 0xc0
    NSArray *_eventWhitelist;	// 200 = 0xc8
    NSArray *_eventBlacklist;	// 208 = 0xd0
    NSData *_digestKey;	// 216 = 0xd8
    int _digestAlgorithm;	// 224 = 0xe0
    id <ReportingSessionEventCacheDelegate> _activitySchedulerDelegate;	// 232 = 0xe8
    _Bool _allowNestedData;	// 240 = 0xf0
    unsigned char _includeSessionIDInHeader;	// 241 = 0xf1
    int _sessionPID;	// 244 = 0xf4
    NSArray *_filters;	// 248 = 0xf8
}

+ (void)applyFilters:(id)arg1 dict:(id)arg2 type:(unsigned short)arg3 category:(unsigned short)arg4;	// IMP=0x0040000000005290
+ (void)applyFilters:(id)arg1 dict:(id)arg2 type:(unsigned short)arg3 category:(unsigned short)arg4 actions:(id)arg5;	// IMP=0x0010000000004e75
+ (id)newBackendWithName:(id)arg1 profile:(id)arg2 productFamily:(id)arg3 clientType:(int)arg4;	// IMP=0x0010000000004373
@property int sessionPID; // @synthesize sessionPID=_sessionPID;
@property(retain) NSArray *eventBlacklist; // @synthesize eventBlacklist=_eventBlacklist;
@property(retain) NSArray *eventWhitelist; // @synthesize eventWhitelist=_eventWhitelist;
@property _Bool allowNestedData; // @synthesize allowNestedData=_allowNestedData;
@property int digestAlgorithm; // @synthesize digestAlgorithm=_digestAlgorithm;
- (void);	// IMP=0x0010000000005df5
@property(copy) NSData *digestKey; // @synthesize digestKey=_digestKey;
@property(retain) NSNumber *samplingThreshold; // @synthesize samplingThreshold=_samplingThreshold;
@property double samplingFactor; // @synthesize samplingFactor=_samplingFactor;
@property _Bool hasRealtimeEvents; // @synthesize hasRealtimeEvents=_hasRealtimeEvents;
@property _Bool batchEvents; // @synthesize batchEvents=_batchEvents;
@property(copy) NSDictionary *userInfoDict; // @synthesize userInfoDict=_userInfoDict;
@property _Bool isInternal; // @synthesize isInternal=_isInternal;
@property(copy) NSString *productFamily; // @synthesize productFamily=_productFamily;
@property(copy) NSString *hardwareType; // @synthesize hardwareType=_hardwareType;
@property(copy) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(copy) NSString *osName; // @synthesize osName=_osName;
@property(copy) NSString *productVersion; // @synthesize productVersion=_productVersion;
@property(copy) NSString *displayURL; // @synthesize displayURL=_displayURL;
@property(copy) NSString *name; // @synthesize name=_name;
@property unsigned int effectiveUserIdentifier; // @synthesize effectiveUserIdentifier=_effectiveUserIdentifier;
@property char *udid; // @synthesize udid=_udid;
@property unsigned short clientVersion; // @synthesize clientVersion=_clientVersion;
@property int compType; // @synthesize compType=_compType;
@property(copy) NSString *combinedSessionIDString; // @synthesize combinedSessionIDString=_combinedSessionIDString;
@property unsigned int sessionID; // @synthesize sessionID=_sessionID;
- (_Bool)matchClientNameAndServiceID:(id)arg1 clientName:(id)arg2 serviceID:(id)arg3;	// IMP=0x0010000000005a61
- (_Bool)matchStringWithList:(id)arg1 wholeString:(id)arg2 whitelist:(_Bool)arg3;	// IMP=0x00100000000058fb
- (_Bool)matchExactStringWithList:(id)arg1 wholeString:(id)arg2 whitelist:(_Bool)arg3;	// IMP=0x00100000000057a8
- (void)checkHashedClientName:(id)arg1 userInfoDict:(id)arg2;	// IMP=0x00100000000053e7
- (id)hashString:(id)arg1;	// IMP=0x0010000000005325
- (unsigned long long)batchedEventsSize;	// IMP=0x001000000000531d
- (void)filterEvent:(id)arg1 type:(unsigned short)arg2 category:(unsigned short)arg3;	// IMP=0x0010000000005308
- (void)filterEvent:(id)arg1 type:(unsigned short)arg2 category:(unsigned short)arg3 actions:(id)arg4;	// IMP=0x00100000000052b3
- (void)createFiltersFromArray:(id)arg1;	// IMP=0x0010000000004c76
- (_Bool)isBlacklistedEvent:(unsigned short)arg1;	// IMP=0x0010000000004b2e
- (_Bool)isWhitelistedEvent:(unsigned short)arg1;	// IMP=0x00100000000049fa
- (void)setCorrelatedSessionID:(id)arg1;	// IMP=0x00100000000049b6
- (_Bool)uploadLogData:(id)arg1;	// IMP=0x00100000000049ae
- (_Bool)uploadFileAtPath:(id)arg1 extensionToken:(char *)arg2;	// IMP=0x00100000000049a6
- (id)flushMessagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000498f
- (id)sendMessage:(id)arg1 timestamp:(const struct timeval *)arg2 method:(unsigned short)arg3 respCode:(unsigned short)arg4 flag:(int)arg5;	// IMP=0x0010000000004964
- (void)setStartTimestamp:(const struct timeval *)arg1;	// IMP=0x0010000000004947
- (id)sendMessage:(id)arg1 timestamp:(const struct timeval *)arg2 method:(unsigned short)arg3 respCode:(unsigned short)arg4 eventID:(unsigned short)arg5 flag:(int)arg6;	// IMP=0x001000000000493f
- (int)updateState;	// IMP=0x0010000000004922
@property int state;
- (void)setSelfVersion:(id)arg1;	// IMP=0x001000000000473c
- (void)setReportingSessionActivitySchedulerDelegate:(id)arg1;	// IMP=0x0010000000004728
- (void)dealloc;	// IMP=0x0010000000004647
- (void)cleanup;	// IMP=0x0010000000004641
- (id)initWithName:(id)arg1 profile:(id)arg2 productFamily:(id)arg3;	// IMP=0x001000000000455e

@end

