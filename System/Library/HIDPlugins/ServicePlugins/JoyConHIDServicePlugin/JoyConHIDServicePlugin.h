//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSMutableArray, NSObject, NSString, NSTimer, NSXPCConnection;
@protocol GCNintendoJoyConFusionGestureServiceClientInterface, OS_voucher;

@interface JoyConHIDServicePlugin
{
    unsigned char _globalPacketNumber;	// 8 = 0x8
    struct {
        NSString *string;
        _Atomic _Bool hasFecthedAtLeastOnce;
    } _serialNumber;	// 16 = 0x10
    struct {
        struct {
            unsigned short firmwareVersion;
            unsigned char type;
            unsigned char bluetoothMAC[6];
            unsigned char unknown1;
            unsigned char unknown2;
            unsigned char unknown3;
        } properties;
        _Bool hasFecthedAtLeastOnce;
        _Bool valid;
    } _deviceInfo;	// 32 = 0x20
    struct {
        struct {
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } factory;
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
                unsigned int hasLeft:1;
                unsigned int hasRight:1;
            } user;
            struct {
                CDStruct_298edf78 left;
                CDStruct_298edf78 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } parameters;
        } stick;
    } _calibration;	// 46 = 0x2e
    struct {
        _Bool initialized;
        struct {
            _Bool charging;
            unsigned char level;
        } info;
    } _battery;	// 156 = 0x9c
    unsigned char _lowPowerSetting;	// 159 = 0x9f
    unsigned char _inputReportMode;	// 160 = 0xa0
    CDStruct_9f249b22 _playerLights;	// 161 = 0xa1
    id <GCNintendoJoyConFusionGestureServiceClientInterface> _gestureClient;	// 168 = 0xa8
    NSTimer *_homeButtonLongPressGestureTimer;	// 176 = 0xb0
    NSTimer *_homeButtonLongPressRecognizedGesture;	// 184 = 0xb8
    _Bool _previousHomeButtonPressed;	// 192 = 0xc0
    NSMutableArray *_pendingSubcommands;	// 200 = 0xc8
    struct {
        unsigned char identifier;
        NSObject<OS_voucher> *voucher;
        CDUnknownBlockType responseHandler;
        unsigned long long requestTimestamp;
    } _outstandingSubcommand;	// 208 = 0xd0
    NSXPCConnection *_daemonConnection;	// 240 = 0xf0
}

+ (_Bool)matchService:(unsigned int)arg1 options:(id)arg2 score:(long long *)arg3;	// IMP=0x00100000000063af
- (void).cxx_destruct;	// IMP=0x000000000000c9dc
- (float)defaultRightAxisSnapRadius;	// IMP=0x000000000000c9d3
- (float)defaultLeftAxisSnapRadius;	// IMP=0x000000000000c9ca
- (float)defaultRightThumbstickDeadzoneRadius;	// IMP=0x000000000000c9c1
- (float)defaultLeftThumbstickDeadzoneRadius;	// IMP=0x000000000000c9b8
- (float)defaultRightThumbstickNoiseBuffer;	// IMP=0x000000000000c9aa
- (float)defaultLeftThumbstickNoiseBuffer;	// IMP=0x000000000000c99c
- (void)connectToNintendoJoyConFusionGestureServiceWithClient:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c950
- (void)fetchDeviceRegistryIDWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000c8d4
- (void)initGameControllerDaemonXPC;	// IMP=0x000000000000c526
- (unsigned char)nextGlobalPacketNumber;	// IMP=0x000000000000c504
- (void)applyDeadzone:(float)arg1 axisSnapRadius:(float)arg2 input:(MISSING_TYPE **)arg3;	// IMP=0x000000000000c4fe
- (void)homeButtonPressed:(_Bool)arg1;	// IMP=0x000000000000c223
- (void)homeButtonLongPressGestureEnded:(id)arg1;	// IMP=0x000000000000c17b
- (void)homeButtonLongPressGestureBegan:(id)arg1;	// IMP=0x000000000000c078
- (CDStruct_a46637cf)currentRumbleData;	// IMP=0x000000000000bd32
- (id)defaultHapticMotors;	// IMP=0x000000000000bbe1
- (float)defaultHapticDispatchFrequency;	// IMP=0x000000000000bbd3
- (void)dispatchHapticEvent;	// IMP=0x000000000000bbc1
- (void)dispatchSetVibrationEnabledSubcommandWithChange:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000baf8
- (void)dispatchSetPlayerLightsSubcommandWithNewState:(CDStruct_9f249b22)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b9a5
- (void)dispatchSPIFlashReadSubcommandWithAddress:(unsigned int)arg1 length:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000b538
- (void)dispatchSetLowPowerStateSubcommandWithChange:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b46f
- (void)dispatchSetInputReportModeSubcommandWithRequestedMode:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b3a6
- (void)dispatchRequestDeviceInfoSubcommandWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b139
- (void)enqueueSubcommand:(unsigned char)arg1 data:(const void *)arg2 length:(unsigned long long)arg3 replyHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000000aa11
- (void)dispatchPendingSubcommandIfReady;	// IMP=0x000000000000a97f
- (void)dispatchCurrentRumbleData;	// IMP=0x000000000000a440
- (unsigned char)fourBitAmplitudeLookup:(float)arg1;	// IMP=0x000000000000a376
- (void)handleSubcommandReply:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x000000000000a05d
- (void)handleStandardFullPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x0000000000009b12
- (void)handleHIDControllerPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x00000000000097b7
- (void)refreshCalibrationData;	// IMP=0x0000000000008ac1
- (void)refreshDeviceInfo;	// IMP=0x00000000000086c6
- (void)refreshLowPowerSetting;	// IMP=0x00000000000084ab
- (void)setVibrationEnabled:(_Bool)arg1;	// IMP=0x0000000000008342
- (void)setLowPower:(_Bool)arg1;	// IMP=0x00000000000081c8
- (void)switchToInputMode:(unsigned char)arg1;	// IMP=0x000000000000805f
- (void)setPlayerLights:(CDStruct_9f249b22)arg1;	// IMP=0x0000000000007f6b
- (_Bool)io_playerLights:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000007a94
- (_Bool)io_inputMode:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000007945
- (_Bool)io_lowPowerSetting:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000078f4
- (_Bool)io_calibrationInfo:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000006ebb
- (_Bool)io_serialNumber:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000006e8c
@property(readonly, copy) NSString *description;
- (_Bool)shouldDisconnectWhenIdle;	// IMP=0x0000000000006e6d
- (void)setupRawReportHandling;	// IMP=0x0000000000006c2e
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2 client:(id)arg3;	// IMP=0x0000000000006aac
- (id)propertyForKey:(id)arg1 client:(id)arg2;	// IMP=0x0000000000006618
- (void)cancel;	// IMP=0x00000000000065cf
- (id)initWithService:(unsigned int)arg1;	// IMP=0x0000000000006469

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

