//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MapKit/NSObject-Protocol.h>

@class CLLocation, NSBundle, NSObject, NSString;
@protocol MKLocationProviderDelegate, OS_dispatch_queue;

@protocol MKLocationProvider <NSObject>
@property(readonly, nonatomic) double timeScale;
@property(readonly, nonatomic) _Bool isTracePlayer;
@property(readonly, nonatomic) _Bool shouldShiftIfNecessary;
@property(readonly, nonatomic) _Bool usesCLMapCorrection;
@property(nonatomic) long long activityType;
@property(readonly, nonatomic) long long accuracyAuthorization;
@property(readonly, nonatomic) int authorizationStatus;
@property(readonly, nonatomic) double expectedGpsUpdateInterval;
@property(copy, nonatomic) CDUnknownBlockType authorizationRequestBlock;
@property(nonatomic) int headingOrientation;
@property(nonatomic) _Bool fusionInfoEnabled;
@property(nonatomic) _Bool matchInfoEnabled;
@property(nonatomic) double distanceFilter;
@property(nonatomic, getter=isLocationServicesPreferencesDialogEnabled) _Bool locationServicesPreferencesDialogEnabled;
@property(nonatomic) double desiredAccuracy;
@property(copy, nonatomic) NSString *effectiveBundleIdentifier;
@property(retain, nonatomic) NSBundle *effectiveBundle;
@property(nonatomic) __weak id <MKLocationProviderDelegate> delegate;
- (void)dismissHeadingCalibrationDisplay;
- (void)accuracyAuthorizationOnQueue:(NSObject<OS_dispatch_queue> *)arg1 result:(void (^)(long long))arg2;
- (void)authorizationStatusOnQueue:(NSObject<OS_dispatch_queue> *)arg1 result:(void (^)(int))arg2;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:(NSString *)arg1 completion:(void (^)(NSError *))arg2;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (void)requestWhenInUseAuthorization;
- (void)stopUpdatingVehicleHeading;
- (void)startUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (void)startUpdatingVehicleSpeed;
- (void)stopUpdatingHeading;
- (void)startUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)startUpdatingLocation;

@optional
@property(readonly, nonatomic) CLLocation *lastLocation;
@end

