//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class NSString, VKMapView;

__attribute__((visibility("hidden")))
@interface MKBasicMapView : UIView
{
    UIView *_hostView;	// 8 = 0x8
    VKMapView *_mapView;	// 16 = 0x10
    double _mapModeStartTime;	// 24 = 0x18
    double _trafficStartTime;	// 32 = 0x20
    _Bool _changingViewSize;	// 40 = 0x28
    _Bool _inactive;	// 41 = 0x29
    _Bool _hasRenderedSomething;	// 42 = 0x2a
    _Bool _inBackground;	// 43 = 0x2b
}

- (void).cxx_destruct;	// IMP=0x00000000000e011f
@property(readonly, nonatomic, getter=isInBackground) _Bool inBackground; // @synthesize inBackground=_inBackground;
@property(nonatomic) _Bool inactive; // @synthesize inactive=_inactive;
@property(nonatomic) _Bool hasRenderedSomething; // @synthesize hasRenderedSomething=_hasRenderedSomething;
@property(readonly, nonatomic, getter=isChangingViewSize) _Bool changingViewSize; // @synthesize changingViewSize=_changingViewSize;
@property(nonatomic) double trafficStartTime; // @synthesize trafficStartTime=_trafficStartTime;
@property(nonatomic) double mapModeStartTime; // @synthesize mapModeStartTime=_mapModeStartTime;
@property(readonly, nonatomic) VKMapView *mapView; // @synthesize mapView=_mapView;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;	// IMP=0x00000000000e0064
- (void)_updateStatsForTimeSpentInCurrentMapTypeIsShowingFlyover:(_Bool)arg1 ignoreIfViewInWindow:(_Bool)arg2;	// IMP=0x00000000000dfe82
- (void)updateStatsForTimeSpentInCurrentMapTypeIsShowingFlyover:(_Bool)arg1;	// IMP=0x00000000000dfe6e
- (void)updateStatsForSwitchingToMapType:(int)arg1;	// IMP=0x00000000000dfe4b
- (void)updateStatsForTrafficEnabledTime;	// IMP=0x00000000000dfe37
- (void)_updateStatsForTrafficEnabledTime:(_Bool)arg1;	// IMP=0x00000000000dfd8a
- (void)updateStatsForEnablingTraffic:(_Bool)arg1;	// IMP=0x00000000000dfd67
- (void)setHidden:(_Bool)arg1;	// IMP=0x00000000000dfd26
- (void)didMoveToWindow;	// IMP=0x00000000000dfb3f
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000000dfa43
- (void)_unregisterSceneNotifications;	// IMP=0x00000000000df911
- (void)_sceneDidEnterBackground:(id)arg1;	// IMP=0x00000000000df8fa
- (void)_sceneWillEnterForeground:(id)arg1;	// IMP=0x00000000000df8e3
- (void)_registerSceneNotifications;	// IMP=0x00000000000df79c
- (void)_updateForCurrentScreen;	// IMP=0x00000000000df4d3
- (void)_updateMapViewHidden;	// IMP=0x00000000000df434
- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;	// IMP=0x00000000000df417
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toCameraModelPointToView:(id)arg2;	// IMP=0x00000000000df394
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;	// IMP=0x00000000000df311
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;	// IMP=0x00000000000df28e
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000000df13b
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000deffb
- (void)_animateCanvasForBounds:(struct CGRect)arg1;	// IMP=0x00000000000dec84
@property(nonatomic) _Bool rendersInBackground;
- (double)calloutContainerCanvasScale;	// IMP=0x00000000000debe1
- (struct CGSize)calloutContainerCanvasSize;	// IMP=0x00000000000deb91
- (void)addCalloutSubview:(id)arg1;	// IMP=0x00000000000deb74
@property(readonly, nonatomic) struct UIEdgeInsets edgeInsets;
- (void)dealloc;	// IMP=0x00000000000dea5e
- (id)initWithFrame:(struct CGRect)arg1 andGlobe:(_Bool)arg2 shouldRasterize:(_Bool)arg3 allowsAntialiasing:(_Bool)arg4;	// IMP=0x00000000000de526
- (id)initWithFrame:(struct CGRect)arg1 andGlobe:(_Bool)arg2 shouldRasterize:(_Bool)arg3;	// IMP=0x00000000000de511
- (void)_finishedSnapshot:(id)arg1;	// IMP=0x00000000000de4f4
- (void)_didEnterBackground;	// IMP=0x00000000000de43d
- (void)_updateBackgroundState:(long long)arg1;	// IMP=0x00000000000de324
- (void)_updateBackgroundState;	// IMP=0x00000000000de288

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

