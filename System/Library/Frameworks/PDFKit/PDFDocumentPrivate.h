//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSIndexSet, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSOrderedSet, NSString, NSURL, PDFAKDocumentAdaptor, PDFAKPageOverlayViewProvider, PDFForm, PDFOutline, PDFRenderingProperties, PDFSelection;
@protocol OS_dispatch_queue, PDFAKControllerDelegateProtocol, PDFDocumentPageChangeDelegate;

__attribute__((visibility("hidden")))
@interface PDFDocumentPrivate : NSObject
{
    struct CGPDFDocument *document;	// 8 = 0x8
    NSURL *documentURL;	// 16 = 0x10
    _Bool createdWithHighLatencyDataProvider;	// 24 = 0x18
    NSMutableArray *pages;	// 32 = 0x20
    NSOrderedSet *pagesOrderedSet;	// 40 = 0x28
    NSMutableDictionary *pageIndices;	// 48 = 0x30
    NSMutableDictionary *pageDictionaryIndices;	// 56 = 0x38
    NSMutableIndexSet *preloadingPageIndexes;	// 64 = 0x40
    _Bool subclassOverridesPageAtIndex;	// 72 = 0x48
    id delegate;	// 80 = 0x50
    _Bool respondsToDidUnlock;	// 88 = 0x58
    _Bool respondsToDidFindMatch;	// 89 = 0x59
    _Bool respondsToDidBeginDocumentFind;	// 90 = 0x5a
    _Bool respondsToDidEndDocumentFind;	// 91 = 0x5b
    _Bool respondsToDidBeginPageFind;	// 92 = 0x5c
    _Bool respondsToDidEndPageFind;	// 93 = 0x5d
    _Bool respondsToDidMatchString;	// 94 = 0x5e
    _Bool respondsToPrintJobTitle;	// 95 = 0x5f
    _Bool respondsToClassForPage;	// 96 = 0x60
    _Bool respondsToClassForAnnotationType;	// 97 = 0x61
    _Bool respondsToClassForAnnotationClass;	// 98 = 0x62
    unsigned long long pageCount;	// 104 = 0x68
    int majorVersion;	// 112 = 0x70
    int minorVersion;	// 116 = 0x74
    _Bool isEncrypted;	// 120 = 0x78
    _Bool isUnlocked;	// 121 = 0x79
    unsigned int accessPermissions;	// 124 = 0x7c
    _Bool allowsPrinting;	// 128 = 0x80
    _Bool allowsCopying;	// 129 = 0x81
    _Bool allowsDocumentChanges;	// 130 = 0x82
    _Bool allowsDocumentAssembly;	// 131 = 0x83
    _Bool allowsContentAccessibility;	// 132 = 0x84
    _Bool allowsCommenting;	// 133 = 0x85
    _Bool allowsFormFieldEntry;	// 134 = 0x86
    long long permission;	// 136 = 0x88
    NSString *ownerPassword;	// 144 = 0x90
    NSString *userPassword;	// 152 = 0x98
    NSDictionary *attributes;	// 160 = 0xa0
    PDFOutline *outline;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *textExtractionQueue;	// 176 = 0xb0
    NSObject<OS_dispatch_queue> *formFillingQueue;	// 184 = 0xb8
    _Bool finding;	// 192 = 0xc0
    int findModel;	// 196 = 0xc4
    NSArray *findStrings;	// 200 = 0xc8
    PDFSelection *findInstance;	// 208 = 0xd0
    unsigned long long findOptions;	// 216 = 0xd8
    long long findPageIndex;	// 224 = 0xe0
    long long findCharIndex;	// 232 = 0xe8
    long long lastFindPageIndex;	// 240 = 0xf0
    long long lastFindCharIndex;	// 248 = 0xf8
    NSMutableArray *findResults;	// 256 = 0x100
    PDFForm *formData;	// 264 = 0x108
    _Bool formDataLoaded;	// 272 = 0x110
    NSArray *documentCatalogMetadata;	// 280 = 0x118
    NSString *xmpNameSpace;	// 288 = 0x120
    NSString *xmpPrefix;	// 296 = 0x128
    NSString *xmpRootPath;	// 304 = 0x130
    id <PDFDocumentPageChangeDelegate> pageChangeDelegate;	// 312 = 0x138
    _Bool documentChanged;	// 320 = 0x140
    _Bool documentHasBurnInAnnotations;	// 321 = 0x141
    unsigned long long documentRedactionCount;	// 328 = 0x148
    struct {
        _Bool pagesAdded;
        _Bool blankPagesAdded;
        _Bool pagesRemoved;
        _Bool pagesExchanged;
    } pagesChanged;	// 336 = 0x150
    NSDictionary *appendedAttributes;	// 344 = 0x158
    NSIndexSet *initialBookmarkedPageIndices;	// 352 = 0x160
    NSMutableIndexSet *bookmarkedPages;	// 360 = 0x168
    PDFAKDocumentAdaptor *akDocumentAdaptor;	// 368 = 0x170
    id <PDFAKControllerDelegateProtocol> pdfAKControllerDelegateForDeferredSetup;	// 376 = 0x178
    PDFAKPageOverlayViewProvider *akPageOverlayViewProvider;	// 384 = 0x180
    PDFRenderingProperties *renderingProperties;	// 392 = 0x188
    _Bool useTaggedPDF;	// 400 = 0x190
    _Bool limitedSearch;	// 401 = 0x191
    NSObject<OS_dispatch_queue> *asyncSearchQueue;	// 408 = 0x198
}

- (void).cxx_destruct;	// IMP=0x0000000000093c04

@end

