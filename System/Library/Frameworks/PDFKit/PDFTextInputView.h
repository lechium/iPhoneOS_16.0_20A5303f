//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class NSDictionary, NSMutableArray, NSString, PDFTextSearchAggregator, UITextHighlightView, UITextInputPasswordRules, UITextInteraction, UITextPosition, UITextRange, UITextSearchingDimmingView;
@protocol NSObject><NSCopying, PDFTextInputDelegate, UITextInputDelegate, UITextInputTokenizer;

__attribute__((visibility("hidden")))
@interface PDFTextInputView : UIView
{
    id <PDFTextInputDelegate> _delegate;	// 8 = 0x8
    UITextRange *_textSelectionRange;	// 16 = 0x10
    UITextInteraction *_textInteraction;	// 24 = 0x18
    id <UITextInputDelegate> _textInputDelegate;	// 32 = 0x20
    id <UITextInputTokenizer> _textInputTokenizer;	// 40 = 0x28
    _Bool _dimmingViewVisible;	// 48 = 0x30
    UITextHighlightView *_searchHighlightView;	// 56 = 0x38
    UITextSearchingDimmingView *_searchDimmingView;	// 64 = 0x40
    UITextRange *_highlightedTextRange;	// 72 = 0x48
    NSMutableArray *_foundTextRanges;	// 80 = 0x50
    PDFTextSearchAggregator *_activeSearch;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x00000000000251e7
- (void)layoutSubviews;	// IMP=0x0000000000024700
- (void)clearAllDecoratedFoundText;	// IMP=0x000000000002469f
- (void)decorateFoundTextRange:(id)arg1 inDocument:(id)arg2 usingStyle:(long long)arg3;	// IMP=0x0000000000024267
- (void)performTextSearchWithQueryString:(id)arg1 usingOptions:(id)arg2 resultAggregator:(id)arg3;	// IMP=0x000000000002412a
- (long long)compareFoundRange:(id)arg1 toRange:(id)arg2 inDocument:(id)arg3;	// IMP=0x0000000000024090
- (id)_targetedPreviewForRange:(id)arg1;	// IMP=0x0000000000023956
- (void)_setDimmingViewVisible:(_Bool)arg1;	// IMP=0x0000000000023627
- (id)linkRegionsConstrainedToLineAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000023139
- (_Bool)interactionShouldBegin:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000022f74
- (void)deleteBackward;	// IMP=0x0000000000022f60
- (void)insertText:(id)arg1;	// IMP=0x0000000000022f4c
@property(readonly, nonatomic) _Bool hasText;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x0000000000022f22
- (void)unmarkText;	// IMP=0x0000000000022f0e
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000022efa
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000022ea6
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000022e91
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x0000000000022e89
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000022df8
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000022de6
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000022dd2
- (id)_closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000022830
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000022302
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x000000000002210a
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000021f28
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000021e93
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000021e31
- (void)setTokenizer:(id)arg1;	// IMP=0x0000000000021e1d
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000021997
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000000217fb
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x00000000000214e1
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x00000000000214c7
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000021457
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy) UITextRange *selectedTextRange;
- (id)textInRange:(id)arg1;	// IMP=0x0000000000020caa
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000020ca2
- (id)_selectionForTextRange:(id)arg1;	// IMP=0x0000000000020af7
- (void)updateGestureRecognizerDependencies;	// IMP=0x0000000000020778
- (void)handleGesture:(unsigned long long)arg1 state:(long long)arg2 location:(struct CGPoint)arg3 locationOfFirstTouch:(struct CGPoint)arg4 isIndirectTouch:(_Bool)arg5;	// IMP=0x0000000000020705
- (id)selection;	// IMP=0x00000000000206e8
- (void)setSelection:(id)arg1;	// IMP=0x00000000000205bd
- (void)updateTextSelectionGraphics;	// IMP=0x0000000000020574
- (id)initWithDelegate:(id)arg1;	// IMP=0x000000000002045e

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long returnKeyType;
@property(readonly) id <NSObject><NSCopying> selectedTextSearchDocument;
@property(nonatomic) long long selectionAffinity;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsTextReplacement;
@property(copy, nonatomic) NSString *textContentType;
@property(readonly, nonatomic) UIView *textInputView;

@end

