//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CAMetalLayer, MISSING_TYPE, MTLRenderPassDescriptor, NSMutableArray, NSMutableDictionary, NSString, SCNMTLMesh, SCNMTLMeshElement, SCNMTLRenderPipeline, SCNMTLResourceManager, SCNMTLShadable;
@protocol CAMetalDrawable, MTLBuffer, MTLCommandBuffer, MTLCommandQueue, MTLDepthStencilState, MTLDevice, MTLRenderCommandEncoder, MTLSamplerState, MTLTexture, OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, SCNMTLRenderContextCommandBufferStatusMonitor, SCNMTLRenderContextResourceManagerMonitor;

__attribute__((visibility("hidden")))
@interface SCNMTLRenderContext : NSObject
{
    long long _currentFrameIndex;	// 8 = 0x8
    struct __C3DEngineStats *__engineStats;	// 16 = 0x10
    double _superSamplingFactor;	// 24 = 0x18
    struct SCNMatrix4 _screenTransform;	// 32 = 0x20
    long long _sampleCount;	// 96 = 0x60
    _Bool _needSuperSampling;	// 104 = 0x68
    SCNMTLResourceManager *_resourceManager;	// 112 = 0x70
    id <MTLDevice> _device;	// 120 = 0x78
    _Bool _isValidationEnabled;	// 128 = 0x80
    int _profile;	// 132 = 0x84
    unsigned int _features;	// 136 = 0x88
    struct __C3DEngineContext *_engineContext;	// 144 = 0x90
    unsigned int _wantsWideGamut:1;	// 152 = 0x98
    unsigned int _isOpaque:1;	// 152 = 0x98
    unsigned int _disableLinearRendering:1;	// 152 = 0x98
    unsigned int _enableARMode:1;	// 152 = 0x98
    unsigned int _shouldDelegateARCompositing:1;	// 152 = 0x98
    unsigned int _useFunctionConstants:1;	// 152 = 0x98
    unsigned int _reverseZ:1;	// 152 = 0x98
    id <MTLCommandQueue> _ownedCommandQueue;	// 160 = 0xa0
    NSObject<OS_dispatch_semaphore> *_inFlightSemaphore;	// 168 = 0xa8
    struct atomic<int> _pendingGPUFrameCount;	// 176 = 0xb0
    id <MTLTexture> _textureTarget;	// 184 = 0xb8
    CAMetalLayer *_layerTarget;	// 192 = 0xc0
    id <CAMetalDrawable> _drawable;	// 200 = 0xc8
    float _targetedFrameInterval;	// 208 = 0xd0
    _Bool _shouldPresentAfterMinimumDuration;	// 212 = 0xd4
    _Bool _shouldPresentWithTransaction;	// 213 = 0xd5
    MTLRenderPassDescriptor *_currentRenderPassDescriptor;	// 216 = 0xd8
    MTLRenderPassDescriptor *_originalRenderPassDescriptor;	// 224 = 0xe0
    MISSING_TYPE *_renderSize;	// 232 = 0xe8
    id <MTLCommandBuffer> _currentCommandBuffer;	// 240 = 0xf0
    struct SCNMTLRenderCommandEncoder *_renderEncoder;	// 248 = 0xf8
    id <MTLCommandBuffer> _resourceCommandBuffer;	// 256 = 0x100
    struct SCNMTLBlitCommandEncoder _resourceBlitEncoder;	// 264 = 0x108
    struct SCNMTLComputeCommandEncoder _resourceComputeEncoder;	// 280 = 0x118
    CDStruct_365d5154 _renderPassParameters;	// 1992 = 0x7c8
    CDStruct_21854d8c _currentStreamBufferIndices;	// 1998 = 0x7ce
    struct SCNMTLBufferPool *_volatileBufferPools[3];	// 2000 = 0x7d0
    void *_frameVolatileBufferPool;	// 2024 = 0x7e8
    NSMutableArray *_volatileMeshes;	// 2032 = 0x7f0
    NSMutableArray *_bufferPool;	// 2040 = 0x7f8
    NSMutableArray *_usedVolatileMeshElements;	// 2048 = 0x800
    NSMutableArray *_freeVolatileMeshElements;	// 2056 = 0x808
    struct SCNMTLBufferPool *_constantBufferPools[3];	// 2064 = 0x810
    void *_frameConstantBufferPool;	// 2088 = 0x828
    void *_frameTexturePool;	// 2096 = 0x830
    id <MTLDepthStencilState> _defaultDepthStencilState;	// 2104 = 0x838
    id <MTLSamplerState> _defaultSamplerState;	// 2112 = 0x840
    struct __C3DFXMetalProgram *_background2DProgram[3];	// 2120 = 0x848
    struct __C3DFXMetalProgram *_backgroundCubeProgram[3];	// 2144 = 0x860
    struct __C3DFXMetalProgram *_backgroundVideoProgram;	// 2168 = 0x878
    struct __C3DFXMetalProgram *_backgroundVideoAlpha0Program;	// 2176 = 0x880
    struct __C3DRasterizerStates *_backgroundRasterizerStates;	// 2184 = 0x888
    double _initialTime;	// 2192 = 0x890
    NSObject<OS_dispatch_queue> *_resourceQueue;	// 2200 = 0x898
    NSObject<OS_dispatch_group> *_resourceGroup;	// 2208 = 0x8a0
    id <MTLBuffer> _shadowKernelBuffer;	// 2216 = 0x8a8
    struct {
        struct __C3DFXPassInstance *passInstance;
        struct __C3DLightingSystem *lightingSystem;
        struct __C3DDynamicBatchingSystem *dynamicBatchingSystem;
        struct __C3DFXPass *pass;
        void *renderGraphPass;
        _Bool passRequiresLighting;
        struct __C3DTransformTree *transformTree;
    } _processingContext;	// 2224 = 0x8b0
    unsigned int _seed;	// 2280 = 0x8e8
    struct SCNSceneBuffer _frameUniforms[6];	// 2288 = 0x8f0
    CDStruct_deec94a8 _sceneUniforms;	// 6512 = 0x1970
    struct {
        id <MTLBuffer> buffer;
        unsigned long long offset;
        unsigned long long size;
        id <MTLTexture> shadowMaps[256];
        id <MTLTexture> textureMaps[256];
        id <MTLSamplerState> samplerStates[256];
    } _lightsData;	// 6528 = 0x1980
    struct {
        struct float4x4 modelTransform;
        struct float4x4 lastFrameModelTransform;
        struct float4x4 normalTransform;
        struct float4x4 modelViewTransform;
        struct float4x4 modelViewProjectionTransform;
        struct float2x3 boundingBox;
        struct float2x3 worldBoundingBox;
        struct __C3DNode *instanceNode;
        unsigned int flags;
        unsigned int *probeCacheIndex;
        unsigned int boneTransformSizeWritten;
    } _nodeUniforms;	// 12704 = 0x31a0
    struct {
        CDStruct_c6b9131d currentLightingSet;
        id <MTLTexture> currentShadowMaps[8];
        id <MTLTexture> currentGoboMaps[8];
        struct unordered_map<unsigned long long, SCNMTLLightSetData, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, SCNMTLLightSetData>>> frameLightingSetDatas;
        unsigned long long currentLightingHashKey;
        struct {
            long long count;
            struct __C3DLight *lights[8];
            struct __C3DLightRuntimeData *lightsData[8];
        } currentLightingDesc;
        CDStruct_14d5dc5e currentLightingSpace;
        CDStruct_14d5dc5e currentLightingSpaceShadow;
        _Bool needLightingSpaceTransformation;
        struct SCNMTLClusterSystem clusterSystem;
        struct Info clusterInfo;
        id <MTLTexture> reflectionProbesTextureArray;
    } _lighting;	// 13120 = 0x3340
    struct Cache {
        struct __C3DRasterizerStates *rasterizerStates;
        struct __C3DMesh *mesh;
        SCNMTLMesh *metalMesh;
        struct __C3DMeshElement *meshElement;
        SCNMTLMeshElement *metalMeshElement;
        struct __C3DFXMetalProgram *program;
        struct __C3DMaterial *material;
        struct __C3DGeometry *geometry;
        SCNMTLShadable *metalShadable;
        struct __C3DEffectCommonProfile *commonProfile;
        struct __C3DBlendStates *blendStates;
        unsigned char colorBufferWriteMask;
        unsigned char topologyClass;
        struct __C3DNode *node;
        unsigned long long vertexDescriptorHash;
        unsigned char tessellationPipelineStateHash;
        SCNMTLRenderPipeline *renderPipeline;
    } _cache;	// 14208 = 0x3780
    struct {
        struct __C3DFXPass *debugLightMeshPass[7];
        struct __C3DFXPass *lightPasses[7];
        struct __C3DMesh *lightMeshes[7];
        _Bool resourcesAreReady;
    } _deferredRendering;	// 14336 = 0x3800
    struct {
        unsigned long long hash;
        SCNMTLRenderPipeline *pipeline;
    } _compositeRendering[2];	// 14512 = 0x38b0
    SCNMTLRenderPipeline *_downSamplePipeline;	// 14544 = 0x38d0
    struct {
        id <MTLTexture> backgroundTexture;
        id <MTLTexture> overlayTexture;
        id <MTLTexture> stencilDepthTexture;
    } _skCompositing;	// 14552 = 0x38d8
    struct {
        unsigned long long pixelFormat;
        unsigned long long sampleCount;
        SCNMTLRenderPipeline *displayCubemapPipeline;
        SCNMTLRenderPipeline *displayTexture2DPipeline;
        SCNMTLRenderPipeline *displayDepth2DPipeline;
        SCNMTLRenderPipeline *displayDepthCubePipeline;
    } _debug;	// 14576 = 0x38f0
    _Bool _showsAuthoringEnvironment;	// 14624 = 0x3920
    struct {
        _Bool collectEnabled;
        NSMutableDictionary *errors;
    } _compilationIssues;	// 14632 = 0x3928
    struct {
        unsigned int modelTransformBindingCount;
        unsigned int modelViewTransformBindingCount;
        unsigned int normalTransformBindingCount;
        unsigned int nodeOpacityBindingCount;
    } _counters;	// 14648 = 0x3938
    struct {
        unsigned long long passHash;
        struct __C3DMaterial *material;
    } _renderGraph;	// 14664 = 0x3948
    id <SCNMTLRenderContextResourceManagerMonitor> _resourceManagerMonitor;	// 14680 = 0x3958
    id <SCNMTLRenderContextCommandBufferStatusMonitor> _commandBufferStatusMonitor;	// 14688 = 0x3960
    id _commandBufferScheduledHandlers;	// 14696 = 0x3968
    id _commandBufferCompletedHandlers;	// 14704 = 0x3970
    id _drawablePresentedHandlers;	// 14712 = 0x3978
    _Bool enablesDeferredShading;	// 14720 = 0x3980
    MTLRenderPassDescriptor *_clientRenderPassDescriptor;	// 14728 = 0x3988
    id <MTLRenderCommandEncoder> _clientRenderCommandEncoder;	// 14736 = 0x3990
    id <MTLCommandBuffer> _clientCommandBuffer;	// 14744 = 0x3998
    unsigned long long _debugOptions;	// 14752 = 0x39a0
    double _contentScaleFactor;	// 14760 = 0x39a8
    id <MTLCommandQueue> _clientCommandQueue;	// 14768 = 0x39b0
    NSString *_generatedTexturePath;	// 14776 = 0x39b8
}

+ (void)registerBindings;	// IMP=0x00100000000d2b87
- (id).cxx_construct;	// IMP=0x00000000000d9187
- (void).cxx_destruct;	// IMP=0x00000000000d9145
@property(retain, nonatomic) NSString *generatedTexturePath; // @synthesize generatedTexturePath=_generatedTexturePath;
@property(nonatomic) double superSamplingFactor; // @synthesize superSamplingFactor=_superSamplingFactor;
@property(nonatomic) __weak id <SCNMTLRenderContextCommandBufferStatusMonitor> commandBufferStatusMonitor; // @synthesize commandBufferStatusMonitor=_commandBufferStatusMonitor;
@property(nonatomic) __weak id <SCNMTLRenderContextResourceManagerMonitor> resourceManagerMonitor; // @synthesize resourceManagerMonitor=_resourceManagerMonitor;
@property(retain, nonatomic) id <MTLCommandQueue> clientCommandQueue; // @synthesize clientCommandQueue=_clientCommandQueue;
@property(readonly, nonatomic) void *renderEncoder; // @synthesize renderEncoder=_renderEncoder;
@property(nonatomic) _Bool shouldPresentAfterMinimumDuration; // @synthesize shouldPresentAfterMinimumDuration=_shouldPresentAfterMinimumDuration;
@property(readonly, nonatomic) void *frameTexturePool; // @synthesize frameTexturePool=_frameTexturePool;
@property(readonly, nonatomic) SCNMTLResourceManager *resourceManager; // @synthesize resourceManager=_resourceManager;
@property(nonatomic) _Bool enablesDeferredShading; // @synthesize enablesDeferredShading;
@property(nonatomic) double contentScaleFactor; // @synthesize contentScaleFactor=_contentScaleFactor;
@property(nonatomic) unsigned long long debugOptions; // @synthesize debugOptions=_debugOptions;
@property(retain, nonatomic) id <MTLCommandBuffer> clientCommandBuffer; // @synthesize clientCommandBuffer=_clientCommandBuffer;
@property(retain, nonatomic) id <MTLRenderCommandEncoder> clientRenderCommandEncoder; // @synthesize clientRenderCommandEncoder=_clientRenderCommandEncoder;
@property(retain, nonatomic) MTLRenderPassDescriptor *clientRenderPassDescriptor; // @synthesize clientRenderPassDescriptor=_clientRenderPassDescriptor;
- (void)addDrawablePresentedHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d8ebc
- (void)addCommandBufferCompletedHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d8da9
- (void)addCommandBufferScheduledHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d8c96
- (unsigned long long)cubeArrayTypeIfSupported;	// IMP=0x00000000000d8c7e
- (struct __C3DMaterial *)getCurrentPassMaterial;	// IMP=0x00000000000d8c71
- (unsigned long long)getCurrentPassHash;	// IMP=0x00000000000d8c64
- (void)setCurrentPassMaterial:(struct __C3DMaterial *)arg1;	// IMP=0x00000000000d8c57
- (void)setCurrentPassHash:(unsigned long long)arg1;	// IMP=0x00000000000d8c4a
- (void)writeBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000000d8bbc
- (void)endRenderCommandEncoding;	// IMP=0x00000000000d8b9d
- (void)renderSKSceneWithRenderer:(id)arg1 overlay:(_Bool)arg2 atTime:(double)arg3;	// IMP=0x00000000000d8544
- (MISSING_TYPE *)renderSize;	// IMP=0x00000000000d8536
- (float)renderTime;	// IMP=0x00000000000d8528
- (void)_drawFullScreenTexture:(id)arg1 over:(_Bool)arg2;	// IMP=0x00000000000d81ce
- (void)_drawShadowMaps;	// IMP=0x00000000000d7be9
- (void)_drawPBRTextures;	// IMP=0x00000000000d7364
@property(readonly, nonatomic) id <MTLCommandBuffer> currentCommandBuffer;
@property(readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property(readonly, nonatomic) id <MTLRenderCommandEncoder> currentRenderCommandEncoder;
- (void)endDeferredLighting;	// IMP=0x00000000000d731b
- (void)renderLight:(struct __C3DNode *)arg1 lightType:(int)arg2 lightData:(struct __C3DLightRuntimeData *)arg3;	// IMP=0x00000000000d6f90
- (void)beginDeferredLighting;	// IMP=0x00000000000d6cb0
- (void)drawFullScreenQuadForPass:(struct __C3DFXPass *)arg1;	// IMP=0x00000000000d6b8d
- (void)resetVolatileMeshElements;	// IMP=0x00000000000d6993
- (void)unmapVolatileMeshElement:(struct __C3DMeshElement *)arg1;	// IMP=0x00000000000d691b
- (struct __C3DMeshElement *)createVolatileMeshElementOfType:(BOOL)arg1 primitiveCount:(long long)arg2 bytesPerIndex:(long long)arg3;	// IMP=0x00000000000d6730
- (void)_recycleMTLBufferToPool:(id)arg1;	// IMP=0x00000000000d6696
- (id)_newMTLBufferFromPoolWithLength:(unsigned long long)arg1;	// IMP=0x00000000000d65b8
- (void)resetVolatileMeshes;	// IMP=0x00000000000d6481
- (void)unmapVolatileMesh:(struct __C3DMesh *)arg1 modifiedVerticesCount:(long long)arg2;	// IMP=0x00000000000d6368
- (_Bool)mapVolatileMesh:(struct __C3DMesh *)arg1 verticesCount:(long long)arg2;	// IMP=0x00000000000d6153
- (void)drawWireframeOverlayForElements:(CDStruct_d65e47c4 *)arg1 range:(CDStruct_912cb5d2)arg2 store:(struct __C3DRendererElementStore *)arg3 passInstance:(struct __C3DFXPassInstance *)arg4;	// IMP=0x00000000000d28d5
@property(readonly, nonatomic) NSMutableDictionary *compilationErrors;
@property(nonatomic) _Bool collectsCompilationErrors;
@property(nonatomic) _Bool showsAuthoringEnvironment;
- (void)drawRenderElement:(struct __C3DRendererElement *)arg1 withPass:(struct __C3DFXPass *)arg2;	// IMP=0x00000000000cf85f
- (void)_prepareMaterialTextures:(struct __C3DMaterial *)arg1;	// IMP=0x00000000000cf768
- (void)stopProcessingRendererElements:(_Bool)arg1;	// IMP=0x00000000000cf655
- (void)startProcessingRendererElementsWithEngineIterationContext:(CDStruct_65434d98 *)arg1;	// IMP=0x00000000000ce987
- (void)processRendererElements:(CDStruct_d65e47c4 *)arg1 count:(unsigned int)arg2 engineIterationContext:(CDStruct_65434d98 *)arg3;	// IMP=0x00000000000cde1a
- (void)renderMesh:(struct __C3DMesh *)arg1 meshElement:(struct __C3DMeshElement *)arg2 withProgram:(struct __C3DFXMetalProgram *)arg3 engineContext:(struct __C3DEngineContext *)arg4 transform:(union C3DMatrix4x4)arg5 color:(const struct C3DColor4 *)arg6 rasterizerStates:(struct __C3DRasterizerStates *)arg7 blendState:(struct __C3DBlendStates *)arg8 texture:(struct __C3DImage *)arg9 depthBias:(_Bool)arg10;	// IMP=0x00000000000cda8b
- (void)renderVideoBackground:(struct __C3DImageProxy *)arg1 engineContext:(struct __C3DEngineContext *)arg2 slot:(struct __C3DEffectSlot *)arg3;	// IMP=0x00000000000cd233
- (void)renderBackground:(struct __C3DEffectSlot *)arg1 engineContext:(struct __C3DEngineContext *)arg2 passInstance:(struct __C3DFXPassInstance *)arg3;	// IMP=0x00000000000cc761
- (float)_zFarForSkyboxRenderingProjectionMatrix:(const union C3DMatrix4x4 *)arg1 defaultZFar:(float)arg2;	// IMP=0x00000000000cc742
- (void)_updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:(union C3DMatrix4x4 *)arg1;	// IMP=0x00000000000cc489
- (void)_drawPatchForMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2;	// IMP=0x00000000000cc2ba
- (void)_drawMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2;	// IMP=0x00000000000cbf94
- (void)_setMeshBuffers:(id)arg1;	// IMP=0x00000000000cbcde
- (void)_setSceneBufferAtVertexIndex:(long long)arg1 fragmentIndex:(long long)arg2;	// IMP=0x00000000000cbb9f
- (void)popDebugGroup;	// IMP=0x00000000000cbb7f
- (void)pushDebugGroup:(id)arg1;	// IMP=0x00000000000cbb5f
- (void)setRasterizerStates:(struct __C3DRasterizerStates *)arg1;	// IMP=0x00000000000cb9ba
- (void)_logLightingInformation;	// IMP=0x00000000000cb963
- (id)radianceTextureForEffectSlot:(struct __C3DEffectSlot *)arg1;	// IMP=0x00000000000cb899
- (id)irradianceTextureForEffectSlot:(struct __C3DEffectSlot *)arg1;	// IMP=0x00000000000cb764
- (id)textureForEffectSlot:(struct __C3DEffectSlot *)arg1;	// IMP=0x00000000000cb741
- (id)newRenderTargetWithDescription:(CDStruct_ace98575 *)arg1 size:(unsigned long long)arg2 arrayLength: /* Error: Ran out of types for this method. */;	// IMP=0x00000000000cb4a5
- (void)endRenderPass;	// IMP=0x00000000000cb3f2
- (void)beginRenderPass:(id)arg1 renderEncoder:(void *)arg2 parameters:(CDStruct_365d5154)arg3;	// IMP=0x00000000000cb2c3
@property(readonly, nonatomic) struct SCNMTLComputeCommandEncoder *resourceComputeEncoder;
@property(readonly, nonatomic) struct SCNMTLBlitCommandEncoder *resourceBlitEncoder;
@property(readonly, nonatomic) id <MTLCommandBuffer> resourceCommandBuffer;
- (void)_createResourceCommandBufferIfNeeded;	// IMP=0x00000000000cafd7
- (void)_clearRenderCaches;	// IMP=0x00000000000caf96
- (void *)_clusterInfo;	// IMP=0x00000000000caf89
- (void)_setReflectionProbeArrayTexture:(id)arg1;	// IMP=0x00000000000caf7c
- (id)_reflectionProbeArrayTexture;	// IMP=0x00000000000caf6f
- (id)_finalRenderTexture;	// IMP=0x00000000000cade1
@property(readonly, nonatomic) CAMetalLayer *layerTarget;
@property(readonly, nonatomic) id <MTLTexture> textureTarget;
- (void)endFrameWaitingUntilCompleted:(_Bool)arg1 status:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x00000000000ca590
- (void)endFrameSceneSpecifics;	// IMP=0x00000000000ca562
- (void)beginFrame:(id)arg1;	// IMP=0x00000000000ca17b
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *resourceQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *resourceGroup;
@property(readonly, nonatomic) long long currentFrameIndex;
- (struct __C3DEngineStats *)stats;	// IMP=0x00000000000ca14d
- (void)_clearUnusedBindingPoints;	// IMP=0x00000000000c9f84
@property(nonatomic) _Bool isOpaque;
@property(nonatomic) long long sampleCount;
@property(nonatomic) _Bool reverseZ;
@property(nonatomic) _Bool shouldDelegateARCompositing;
@property(nonatomic) _Bool enableARMode;
@property(nonatomic) _Bool disableLinearRendering;
@property(readonly, nonatomic) long long pendingGPUFrameCount;
@property(nonatomic) _Bool wantsWideGamut;
- (_Bool)supportsMTLFeatureSet:(unsigned long long)arg1;	// IMP=0x00000000000c9d1b
@property(readonly, nonatomic) int profile;
@property(readonly, nonatomic) unsigned int features;
@property(nonatomic) struct SCNMatrix4 screenTransform;
@property(readonly, nonatomic) void *frameConstantBufferPool;
@property(nonatomic) long long preferredFramesPerSecond;
@property(readonly, nonatomic) id <MTLCommandQueue> commandQueue;
@property(readonly, nonatomic) struct __C3DEngineContext *engineContext;
@property(readonly, nonatomic) id <MTLDevice> device;
- (void)dealloc;	// IMP=0x00000000000c98a8
- (id)initWithDevice:(id)arg1 engineContext:(struct __C3DEngineContext *)arg2;	// IMP=0x00000000000c928c
- (void)_reduceStatsOfConstantBuffer:(id)arg1;	// IMP=0x00000000000c9258
- (struct __C3DFXPass *)_createPassWithVertex:(id)arg1 fragment:(id)arg2;	// IMP=0x00000000000c9180
- (id)renderTargetInfo;	// IMP=0x00000000000fee1c
- (void)viewports:(const void **)arg1:(long long *)arg2;	// IMP=0x00000000000fedec
- (_Bool)constantOffsetAndSize:(int)arg1:(id)arg2:(long long *)arg3:(long long *)arg4;	// IMP=0x00000000000fedba
- (const char *)constantData:(int)arg1;	// IMP=0x00000000000fed88
- (id)sampler:(int)arg1:(id)arg2;	// IMP=0x00000000000fed56
- (id)buffer:(int)arg1:(id)arg2:(long long *)arg3:(long long *)arg4;	// IMP=0x00000000000fed24
- (id)texture:(int)arg1:(id)arg2;	// IMP=0x00000000000fecf2
- (unsigned long long)colorPixelFormatAtIndex:(long long)arg1;	// IMP=0x00000000000fee70
- (unsigned long long)depthStencilPixelFormat;	// IMP=0x00000000000fee2d
- (_Bool)vrrEnabled;	// IMP=0x00000000000fee25

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

