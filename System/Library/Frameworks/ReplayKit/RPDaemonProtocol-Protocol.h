//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ReplayKit/NSObject-Protocol.h>

@class NSData, NSDictionary, NSString, NSURL, NSXPCListenerEndpoint;

@protocol RPDaemonProtocol <NSObject>
- (oneway void)stopAllActiveClients;
- (oneway void)stopCurrentActiveSessionWithHandler:(void (^)(_Bool))arg1;
- (oneway void)consumeSandboxExtension:(NSString *)arg1 processNewConnection:(_Bool)arg2;
- (oneway void)macApplicationDidBecomeActiveWithContextID:(NSString *)arg1 completionHandler:(void (^)(NSError *, _Bool, _Bool))arg2;
- (oneway void)macApplicationDidResignActive;
- (oneway void)reportCameraUsage:(long long)arg1;
- (oneway void)saveVideo:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;
- (oneway void)saveClipToCameraRoll:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;
- (oneway void)saveVideoToCameraRoll:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;
- (oneway void)updateProcessIDForAudioCaptureWithPID:(int)arg1;
- (oneway void)getSystemBroadcastExtensionInfo:(void (^)(NSArray *, NSError *))arg1;
- (oneway void)resumeInAppClipWithWindowLayerContextID:(NSString *)arg1 completionHandler:(void (^)(NSError *, _Bool, _Bool))arg2;
- (oneway void)exportClipToURL:(NSURL *)arg1 duration:(double)arg2 completionHandler:(void (^)(NSError *))arg3;
- (oneway void)stopClipBufferingWithCompletionHandler:(void (^)(NSError *))arg1;
- (oneway void)startClipBufferingWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 withCompletionHandler:(void (^)(NSError *, _Bool, _Bool))arg5;
- (oneway void)openControlCenterSystemRecordingView;
- (oneway void)setBroadcastPickerPreferredExt:(NSString *)arg1 showsMicButton:(_Bool)arg2;
- (oneway void)getSystemBroadcastPickerInfo:(void (^)(NSString *, _Bool))arg1;
- (oneway void)setupSystemBroadcastWithHostBundleID:(NSString *)arg1 broadcastExtensionBundleID:(NSString *)arg2 broadcastConfigurationData:(NSData *)arg3 userInfo:(NSDictionary *)arg4 handler:(void (^)(NSError *))arg5;
- (oneway void)resumeSystemBroadcastWithCompletionHandler:(void (^)(_Bool))arg1;
- (oneway void)stopSystemBroadcastWithHandler:(void (^)(NSError *))arg1;
- (oneway void)startSystemBroadcastWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 listenerEndpoint:(NSXPCListenerEndpoint *)arg5 withHandler:(void (^)(NSError *))arg6;
- (oneway void)setMicrophoneEnabled:(_Bool)arg1;
- (oneway void)resumeSystemRecordingWithCompletionHandler:(void (^)(_Bool))arg1;
- (oneway void)stopSystemRecordingWithURLHandler:(void (^)(NSURL *, NSError *))arg1;
- (oneway void)stopSystemRecordingWithHandler:(void (^)(NSError *))arg1;
- (oneway void)startSystemRecordingWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 withHandler:(void (^)(NSError *))arg5;
- (oneway void)setBroadcastURL:(NSURL *)arg1;
- (oneway void)resumeInAppBroadcastWithWindowLayerContextID:(NSString *)arg1 completionHandler:(void (^)(NSError *, _Bool, _Bool))arg2;
- (oneway void)pauseInAppBroadcast;
- (oneway void)setupBroadcastWithHostBundleID:(NSString *)arg1 broadcastExtensionBundleID:(NSString *)arg2 broadcastConfigurationData:(NSData *)arg3 userInfo:(NSDictionary *)arg4 handler:(void (^)(NSError *))arg5;
- (oneway void)stopInAppBroadcastWithHandler:(void (^)(NSError *))arg1;
- (oneway void)startInAppBroadcastWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 listenerEndpoint:(NSXPCListenerEndpoint *)arg5 withHandler:(void (^)(NSError *, _Bool, _Bool))arg6;
- (oneway void)resumeInAppCaptureWithWindowLayerContextID:(NSString *)arg1 completionHandler:(void (^)(NSError *, _Bool, _Bool))arg2;
- (oneway void)pauseInAppCapture;
- (oneway void)stopInAppCaptureWithHandler:(void (^)(NSError *))arg1;
- (oneway void)startInAppCaptureWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 withHandler:(void (^)(NSError *, _Bool, _Bool))arg5;
- (oneway void)discardInAppRecordingWithHandler:(void (^)(void))arg1;
- (oneway void)resumeInAppRecordingWithWindowLayerContextID:(NSString *)arg1 completionHandler:(void (^)(NSError *, _Bool, _Bool))arg2;
- (oneway void)pauseInAppRecording;
- (oneway void)stopInAppRecordingWithUrl:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;
- (oneway void)stopInAppRecordingWithHandler:(void (^)(NSURL *, NSError *))arg1;
- (oneway void)startInAppRecordingWithContextID:(NSString *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 withHandler:(void (^)(NSError *, _Bool, _Bool))arg5;

@optional
- (oneway void)saveVideo:(NSURL *)arg1 extensionToken:(NSString *)arg2 handler:(void (^)(NSError *))arg3;
- (oneway void)exportClipToURL:(NSURL *)arg1 duration:(double)arg2 extensionToken:(id)arg3 completionHandler:(void (^)(NSError *))arg4;
- (oneway void)stopInAppRecordingWithUrl:(NSURL *)arg1 extensionToken:(NSString *)arg2 handler:(void (^)(NSError *))arg3;
@end

