//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface NSObject (Foundation)
+ (id)__old_unswizzled_keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x0020000000053020
+ (_Bool)__old_unswizzled_automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0020000000052fd0
+ (const char *)_localClassNameForClass;	// IMP=0x002000000048dcb1
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x002000000049154f
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;	// IMP=0x0020000000491349
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004de20e
+ (_Bool)accessInstanceVariablesDirectly;	// IMP=0x00200000004de206
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e45bf
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e42cf
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e428d
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e424b
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e3bdf
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e3569
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e3252
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004e2b5f
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x00200000004f4e52
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x00200000004f4bfe
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;	// IMP=0x00200000004f4a4c
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;	// IMP=0x00200000004f514f
+ (_Bool)_shouldAddObservationForwardersForKey:(id)arg1;	// IMP=0x00200000004f523a
+ (id)classFallbacksForKeyedArchiver;	// IMP=0x0020000000509e79
+ (Class)classForKeyedUnarchiver;	// IMP=0x0020000000509e86
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;	// IMP=0x0020000000568bb8
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;	// IMP=0x00200000005687c5
+ (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x002000000060bafb
- (id)__NS_swiftOverlay_keyPathsForValuesAffectingValueForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000053210
- (_Bool)__NS_swiftOverlay_automaticallyNotifiesObserversForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000053070
- (id)newTaggedNSStringWithASCIIBytes_:(const char *)arg1 length_:(long long)arg2;	// IMP=0x00100000001c1630
- (id)replacementObjectForArchiver:(id)arg1;	// IMP=0x0010000000448437
- (Class)classForArchiver;	// IMP=0x0010000000448425
- (const char *)_localClassNameForClass;	// IMP=0x001000000048dc9f
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;	// IMP=0x0010000000491693
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x0010000000491613
- (void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2;	// IMP=0x001000000049307b
- (void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x001000000049305e
- (id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x0010000000492fed
- (void)_receiveBox:(id)arg1;	// IMP=0x00100000004b630f
- (void)removeObservation:(id)arg1;	// IMP=0x00100000004b62d1
- (id)addObserver:(id)arg1;	// IMP=0x00100000004b624b
- (void)receiveObservedValue:(id)arg1;	// IMP=0x00100000004b6140
- (void)receiveObservedError:(id)arg1;	// IMP=0x00100000004b6035
- (_Bool)_isToManyChangeInformation;	// IMP=0x00100000004b602d
- (void)_destroyObserverList;	// IMP=0x00100000004b6019
- (void *)_observerStorageOfSize:(unsigned long long)arg1;	// IMP=0x00100000004b6011
- (id *)_observerStorage;	// IMP=0x00100000004b6009
- (id)addObservationTransformer:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b5f66
- (id)addObserverBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b5e22
- (id)addChainedObservers:(id)arg1;	// IMP=0x00100000004b5cd8
- (void)finishObserving;	// IMP=0x00100000004b5c9f
- (_Bool)_overrideUseFastBlockObservers;	// IMP=0x00100000004b5c97
- (void)setValuesForKeysWithDictionary:(id)arg1;	// IMP=0x00100000004dffc9
- (id)dictionaryWithValuesForKeys:(id)arg1;	// IMP=0x00100000004dfebf
- (void)setNilValueForKey:(id)arg1;	// IMP=0x00100000004dfe53
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x00100000004dfd62
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x00100000004dfc70
- (id)mutableSetValueForKeyPath:(id)arg1;	// IMP=0x00100000004dfb23
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;	// IMP=0x00100000004df9d6
- (id)mutableArrayValueForKeyPath:(id)arg1;	// IMP=0x00100000004df889
- (_Bool)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;	// IMP=0x00100000004df71b
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x00100000004df5c4
- (id)valueForKeyPath:(id)arg1;	// IMP=0x00100000004df477
- (id)mutableSetValueForKey:(id)arg1;	// IMP=0x00100000004df318
- (id)mutableOrderedSetValueForKey:(id)arg1;	// IMP=0x00100000004df1b9
- (id)mutableArrayValueForKey:(id)arg1;	// IMP=0x00100000004df05a
- (_Bool)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;	// IMP=0x00100000004deeed
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000004dec84
- (id)valueForKey:(id)arg1;	// IMP=0x00100000004de9f8
- (_Bool)_isKVOA;	// IMP=0x00100000004ef299
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000004f28c2
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x00100000004f3578
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;	// IMP=0x00100000004f3417
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x00100000004f321e
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;	// IMP=0x00100000004f2ede
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x00100000004f29b5
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x00100000004f49d8
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x00100000004f461a
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x00100000004f4196
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x00100000004f3ee8
- (void)didChangeValueForKey:(id)arg1;	// IMP=0x00100000004f3ecf
- (void)willChangeValueForKey:(id)arg1;	// IMP=0x00100000004f3eb3
@property void *observationInfo;
- (id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(_Bool)arg2;	// IMP=0x00100000004f682f
- (id)_implicitObservationInfo;	// IMP=0x00100000004f6827
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000004f67d0
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000004f6771
- (void)_changeValueForKeys:(id *)arg1 count:(unsigned long long)arg2 maybeOldValuesDict:(id)arg3 maybeNewValuesDict:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000004f5c3e
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)arg1 toValuesForKeys:(id)arg2;	// IMP=0x00100000004f568c
- (void)_didChangeValuesForKeys:(id)arg1;	// IMP=0x00100000004f5670
- (void)_willChangeValuesForKeys:(id)arg1;	// IMP=0x00100000004f5651
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;	// IMP=0x00100000004f5242
- (void)_didEndKeyValueObserving;	// IMP=0x00100000004f5234
- (void)_willBeginKeyValueObserving;	// IMP=0x00100000004f522e
- (id)replacementObjectForKeyedArchiver:(id)arg1;	// IMP=0x0010000000509e21
@property(readonly) Class classForKeyedArchiver;
@property(readonly, retain) id autoContentAccessingProxy;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;	// IMP=0x00100000005683d7
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;	// IMP=0x00100000005683c5
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;	// IMP=0x001000000056835d
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0010000000590bb1
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4;	// IMP=0x0010000000590b2c
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;	// IMP=0x0010000000590a99
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3 modes:(id)arg4;	// IMP=0x0010000000590a33
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4 modes:(id)arg5;	// IMP=0x001000000059059a
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x001000000060babe
- (Class)classForPortCoder;	// IMP=0x001000000060baac
@end

