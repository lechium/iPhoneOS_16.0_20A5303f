//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, NSString, UITextRange, UIView;
@protocol NSObject><NSCopying;

__attribute__((visibility("hidden")))
@interface WKPDFView
{
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;	// 8 = 0x8
    struct RetainPtr<NSData> _data;	// 16 = 0x10
    struct RetainPtr<CGPDFDocument *> _documentForPrinting;	// 24 = 0x18
    struct BlockPtr<void ()> _findCompletion;	// 32 = 0x20
    struct RetainPtr<NSString> _findString;	// 40 = 0x28
    unsigned long long _findStringCount;	// 48 = 0x30
    unsigned long long _findStringMaxCount;	// 56 = 0x38
    struct RetainPtr<UIView> _fixedOverlayView;	// 64 = 0x40
    struct optional<unsigned long> _focusedSearchResultIndex;	// 72 = 0x48
    long long _focusedSearchResultPendingOffset;	// 88 = 0x58
    struct RetainPtr<PDFHostViewController> _hostViewController;	// 96 = 0x60
    struct CGSize _overlaidAccessoryViewsInset;	// 104 = 0x68
    struct RetainPtr<UIView> _pageNumberIndicator;	// 120 = 0x78
    struct CString _passwordForPrinting;	// 128 = 0x80
    // Error: parsing type: '{InteractionInformationAtPosition="request"{InteractionInformationRequest="point"{IntPoint="m_x"i"m_y"i}"includeSnapshot"B"includeLinkIndicator"B"includeCaretContext"B"includeHasDoubleClickHandler"B"includeImageData"B"linkIndicatorShouldHaveLegacyMargins"B"disallowUserAgentShadowContent"B}"canBeValid"B"nodeAtPositionHasDoubleClickHandler"{optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}"selectability"C"isSelected"B"prefersDraggingOverTextSelection"B"isNearMarkedText"B"touchCalloutEnabled"B"isLink"B"isImage"B"isAttachment"B"isAnimatedImage"B"isPausedVideo"B"isElement"B"isContentEditable"B"containerScrollingNodeID"Q"isDataDetectorLink"B"preventTextInteraction"B"elementContainsImageOverlay"B"shouldNotUseIBeamInEditableContent"B"isImageOverlayText"B"isVerticalWritingMode"B"adjustedPointForNodeRespondingToClickEvents"{FloatPoint="m_x"f"m_y"f}"url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"idAttribute"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"bounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"image"{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}"textBefore"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"textAfter"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"caretLength"f"lineCaretExtent"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"cursor"{optional<WebCore::Cursor>=""(?="__null_state_"c"__val_"{Cursor="m_type"i"m_image"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"m_hotSpot"{IntPoint="m_x"i"m_y"i}"m_platformCursor"^v})"__engaged_"B}"linkIndicator"{TextIndicatorData="selectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textBoundingRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"contentImageWithoutSelectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textRectsInBoundingRectCoordinates"{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatRect}"m_capacity"I"m_size"I}"contentImageScaleFactor"f"contentImageWithHighlight"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImageWithoutSelection"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImage"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"estimatedBackgroundColor"{Color="m_colorAndFlags"Q}"presentationTransition"C"options"{OptionSet<WebCore::TextIndicatorOption>="m_storage"S}}"dataDetectorIdentifier"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"dataDetectorResults"{RetainPtr<NSArray>="m_ptr"^v}"dataDetectorBounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}"hostImageOrVideoElementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}}', name: _positionInformation
    struct RetainPtr<NSString> _suggestedFilename;	// 752 = 0x2f0
    struct WeakObjCPtr<WKWebView> _webView;	// 760 = 0x2f8
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;	// 768 = 0x300
    struct RetainPtr<WKShareSheet> _shareSheet;	// 776 = 0x308
    struct RetainPtr<id<UITextSearchAggregator>> _searchAggregator;	// 784 = 0x310
    struct RetainPtr<NSString> _searchString;	// 792 = 0x318
}

+ (_Bool)web_requiresCustomSnapshotting;	// IMP=0x001000000041ebeb
- (id).cxx_construct;	// IMP=0x00000000004202f4
- (void).cxx_destruct;	// IMP=0x0000000000420131
- (void)clearAllDecoratedFoundText;	// IMP=0x00000000004200ea
- (void)decorateFoundTextRange:(id)arg1 inDocument:(id)arg2 usingStyle:(long long)arg3;	// IMP=0x000000000042006e
- (void)performTextSearchWithQueryString:(id)arg1 usingOptions:(id)arg2 resultAggregator:(id)arg3;	// IMP=0x000000000041ffae
- (long long)compareFoundRange:(id)arg1 toRange:(id)arg2 inDocument:(id)arg3;	// IMP=0x000000000041fec5
@property(readonly) UITextRange *selectedTextRange;
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;	// IMP=0x000000000041fe50
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;	// IMP=0x000000000041fd8e
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;	// IMP=0x000000000041fd31
- (void)shareSheetDidDismiss:(id)arg1;	// IMP=0x000000000041fcee
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x000000000041fa06
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;	// IMP=0x000000000041f9ba
- (void)actionSheetAssistant:(id)arg1 performAction:(_Bool)arg2;	// IMP=0x000000000041f8b6
-     // Error parsing type: {optional<WebKit::InteractionInformationAtPosition>=(?=c{InteractionInformationAtPosition={InteractionInformationRequest={IntPoint=ii}BBBBBBB}B{optional<bool>=(?=cB)B}CBBBBBBBBBBBQBBBBBB{FloatPoint=ff}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{IntRect={IntPoint=ii}{IntSize=ii}}{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>=^{ShareableBitmap}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}f{FloatRect={FloatPoint=ff}{FloatSize=ff}}{optional<WebCore::Cursor>=(?=c{Cursor=i{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{IntPoint=ii}^v})B}{TextIndicatorData={FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>=^{FloatRect}II}f{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{Color=Q}C{OptionSet<WebCore::TextIndicatorOption>=S}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{RetainPtr<NSArray>=^v}{IntRect={IntPoint=ii}{IntSize=ii}}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}})B}24@0:8@16, name: positionInformationForActionSheetAssistant:
- (void)pdfHostViewControllerExtensionProcessDidCrash:(id)arg1;	// IMP=0x000000000041f7bc
- (void)pdfHostViewController:(id)arg1 didLongPressPageIndex:(long long)arg2 atLocation:(struct CGPoint)arg3 withAnnotationRect:(struct CGRect)arg4;	// IMP=0x000000000041f76c
- (void)pdfHostViewController:(id)arg1 didLongPressURL:(id)arg2 atLocation:(struct CGPoint)arg3 withAnnotationRect:(struct CGRect)arg4;	// IMP=0x000000000041f757
- (void)_showActionSheetForURL:(id)arg1 atLocation:(struct CGPoint)arg2 withAnnotationRect:(struct CGRect)arg3;	// IMP=0x000000000041f3f6
- (void)pdfHostViewController:(id)arg1 goToPageIndex:(long long)arg2 withViewFrustum:(struct CGRect)arg3;	// IMP=0x000000000041f3b8
- (void)pdfHostViewController:(id)arg1 goToURL:(id)arg2;	// IMP=0x000000000041f39d
- (void)_goToURL:(id)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x000000000041f164
- (id)_URLWithPageIndex:(long long)arg1;	// IMP=0x000000000041f0ee
- (void)pdfHostViewController:(id)arg1 findStringUpdate:(unsigned long long)arg2 done:(_Bool)arg3;	// IMP=0x000000000041ef33
- (void)pdfHostViewController:(id)arg1 documentDidUnlockWithPassword:(id)arg2;	// IMP=0x000000000041eeb4
- (void)pdfHostViewController:(id)arg1 updatePageCount:(long long)arg2;	// IMP=0x000000000041ee64
@property(readonly, nonatomic) _Bool web_isBackground;
@property(readonly, nonatomic) NSString *web_suggestedFilename;
@property(readonly, nonatomic) NSData *web_dataRepresentation;
- (void)web_snapshotRectInContentViewCoordinates:(struct CGRect)arg1 snapshotWidth:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000041ecdf
- (void)web_beginAnimatedResizeWithUpdates:(CDUnknownBlockType)arg1;	// IMP=0x000000000041ec94
- (void)web_scrollViewDidZoom:(id)arg1;	// IMP=0x000000000041ec77
- (void)web_scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;	// IMP=0x000000000041ec5a
- (void)web_scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;	// IMP=0x000000000041ec3d
- (void)web_scrollViewDidScroll:(id)arg1;	// IMP=0x000000000041ec20
@property(readonly, nonatomic) UIView *web_contentView;
- (void)web_hideFindUI;	// IMP=0x000000000041ebc7
- (void)web_findString:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;	// IMP=0x000000000041eaf9
- (void)_focusOnSearchResultWithOptions:(unsigned long long)arg1;	// IMP=0x000000000041e91a
- (_Bool)_computeFocusedSearchResultIndexWithOptions:(unsigned long long)arg1 didWrapAround:(_Bool *)arg2;	// IMP=0x000000000041e84e
- (void)web_countStringMatches:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;	// IMP=0x000000000041e724
- (void)_findString:(id)arg1 withOptions:(unsigned long long)arg2 maxCount:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000041e648
- (void)_resetFind;	// IMP=0x000000000041e582
- (void)web_didSameDocumentNavigation:(unsigned int)arg1;	// IMP=0x000000000041e52c
- (void)_scrollToURLFragment:(id)arg1;	// IMP=0x000000000041e470
- (void)web_setFixedOverlayView:(id)arg1;	// IMP=0x000000000041e429
- (void)web_computedContentInsetDidChange;	// IMP=0x000000000041e415
- (void)web_setOverlaidAccessoryViewsInset:(struct CGSize)arg1;	// IMP=0x000000000041e3ec
- (void)web_setMinimumSize:(struct CGSize)arg1;	// IMP=0x000000000041e356
- (void)_updateLayoutAnimated:(_Bool)arg1;	// IMP=0x000000000041e301
- (void)_movePageNumberIndicatorToPoint:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x000000000041e1f0
- (struct CGPoint)_offsetForPageNumberIndicator;	// IMP=0x000000000041e10d
- (void)web_setContentProviderData:(id)arg1 suggestedFilename:(id)arg2;	// IMP=0x000000000041ddcc
- (id)web_initWithFrame:(struct CGRect)arg1 webView:(id)arg2 mimeType:(id)arg3;	// IMP=0x000000000041dcca
- (id)_contentView;	// IMP=0x000000000041dca0
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000041dc83
- (_Bool)web_handleKeyEvent:(id)arg1;	// IMP=0x000000000041dbe8
- (void)dealloc;	// IMP=0x000000000041da9c
@property(readonly, nonatomic) struct CGPDFDocument *_wk_printedDocument;
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;	// IMP=0x00000000004205e0
@property(readonly, nonatomic) _Bool _wk_printFormatterRequiresMainThread;
- (struct CGPDFDocument *)_ensureDocumentForPrinting;	// IMP=0x00000000004204f4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id <NSObject><NSCopying> selectedTextSearchDocument;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsTextReplacement;

@end

