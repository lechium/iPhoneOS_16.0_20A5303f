//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE;

#pragma mark Named Structures

struct RTCamera {
    CDUnknownFunctionPointerType *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    float _field4;
    float _field5;
    int _field6;
    float *_field7;
    id **_field8;
    CDStruct_f1db2b5e _field9;
    CDStruct_f1db2b5e _field10;
    struct RTRaySegment *_field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
};

struct RTGeometry;

struct RTIntersectionResult {
    float _field1;
    struct RTGeometry *_field2;
    id _field3;
};

struct RTRaySegment;

struct RTRenderable;

struct __sbuf {
    char *_field1;
    int _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field1;
};

struct vector<MDLLight *, std::allocator<MDLLight *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<MDLLight *__strong *, std::allocator<MDLLight *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<ModelIO::RTRenderable *, std::allocator<ModelIO::RTRenderable *>> {
    struct RTRenderable **__begin_;
    struct RTRenderable **__end_;
    struct __compressed_pair<ModelIO::RTRenderable **, std::allocator<ModelIO::RTRenderable *>> {
        struct RTRenderable **__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    MISSING_TYPE *_field1[4];
} CDStruct_f1db2b5e;

