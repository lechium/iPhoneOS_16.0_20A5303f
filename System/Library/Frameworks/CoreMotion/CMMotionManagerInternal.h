//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface CMMotionManagerInternal : NSObject
{
    struct os_unfair_lock_s fSampleLock;	// 8 = 0x8
    struct Dispatcher *fAccelerometerDispatcher;	// 16 = 0x10
    double fAccelerometerUpdateInterval;	// 24 = 0x18
    CDUnknownBlockType fAccelerometerHandler;	// 32 = 0x20
    NSOperationQueue *fAccelerometerQueue;	// 40 = 0x28
    double fLastAccelerometerNotificationTimestamp;	// 48 = 0x30
    struct Sample {
        double timestamp;
        CDStruct_03942939 acceleration;
    } fLatestAccelerometerSample;	// 56 = 0x38
    struct Dispatcher *fAmbientPressureDispatcher;	// 80 = 0x50
    double fAmbientPressureUpdateInterval;	// 88 = 0x58
    CDUnknownBlockType fAmbientPressureHandler;	// 96 = 0x60
    NSOperationQueue *fAmbientPressureQueue;	// 104 = 0x68
    double fLastAmbientPressureNotificationTimestamp;	// 112 = 0x70
    Sample_068dee23 fLatestAmbientPressureSample;	// 120 = 0x78
    struct Dispatcher *fCompensatedAmbientPressureDispatcher;	// 136 = 0x88
    double fCompensatedAmbientPressureUpdateInterval;	// 144 = 0x90
    CDUnknownBlockType fCompensatedAmbientPressureHandler;	// 152 = 0x98
    NSOperationQueue *fCompensatedAmbientPressureQueue;	// 160 = 0xa0
    double fLastCompensatedAmbientPressureNotificationTimestamp;	// 168 = 0xa8
    Sample_068dee23 fLatestCompensatedAmbientPressureSample;	// 176 = 0xb0
    struct Dispatcher *fGyroDispatcher;	// 192 = 0xc0
    double fGyroUpdateInterval;	// 200 = 0xc8
    CDUnknownBlockType fGyroHandler;	// 208 = 0xd0
    NSOperationQueue *fGyroQueue;	// 216 = 0xd8
    double fLastGyroNotificationTimestamp;	// 224 = 0xe0
    struct Sample {
        double timestamp;
        CDStruct_03942939 rotationRate;
        unsigned short sampleNum;
        _Bool fsync;
    } fLatestGyroSample;	// 232 = 0xe8
    struct Dispatcher *fDeviceMotionDispatcher;	// 256 = 0x100
    double fDeviceMotionUpdateInterval;	// 264 = 0x108
    CDUnknownBlockType fDeviceMotionHandler;	// 272 = 0x110
    NSOperationQueue *fDeviceMotionQueue;	// 280 = 0x118
    double fLastDeviceMotionNotificationTimestamp;	// 288 = 0x120
    int fDeviceMotionMode;	// 296 = 0x128
    unsigned long long fAttitudeReferenceFrame;	// 304 = 0x130
    _Bool fCompassCalibrationHud;	// 312 = 0x138
    _Bool fIsCompassCalibrated;	// 313 = 0x139
    _Bool fIsUsingCalibratedCompass;	// 314 = 0x13a
    _Bool fHaveSentDeviceRequiresMovementError;	// 315 = 0x13b
    _Bool fHaveSentTrueNorthUnavailableError;	// 316 = 0x13c
    double fDeviceMotionStartTimestamp;	// 320 = 0x140
    CDStruct_bf7dff04 fInitialReferenceRotation;	// 328 = 0x148
    _Bool fIsInitialReferenceAvailable;	// 360 = 0x168
    struct Dispatcher *fMagnetometerDispatcher;	// 368 = 0x170
    double fMagnetometerUpdateInterval;	// 376 = 0x178
    CDUnknownBlockType fMagnetometerHandler;	// 384 = 0x180
    NSOperationQueue *fMagnetometerQueue;	// 392 = 0x188
    double fLastMagnetometerNotificationTimestamp;	// 400 = 0x190
    struct Sample {
        double timestamp;
        CDStruct_03942939 magneticField;
        float temperature;
    } fLatestMagnetometerSample;	// 408 = 0x198
    _Bool fShowsDeviceMovementDisplay;	// 432 = 0x1b0
    struct Dispatcher *fPrivateAccelerometerDataDispatcher;	// 440 = 0x1b8
    CDUnknownFunctionPointerType fPrivateAccelerometerDataCallback;	// 448 = 0x1c0
    void *fPrivateAccelerometerDataCallbackInfo;	// 456 = 0x1c8
    struct Dispatcher *fPrivateGyroDataDispatcher;	// 464 = 0x1d0
    CDUnknownFunctionPointerType fPrivateGyroDataCallback;	// 472 = 0x1d8
    void *fPrivateGyroDataCallbackInfo;	// 480 = 0x1e0
    struct Dispatcher *fPrivateMagnetometerDataDispatcher;	// 488 = 0x1e8
    CDUnknownFunctionPointerType fPrivateMagnetometerDataCallback;	// 496 = 0x1f0
    void *fPrivateMagnetometerDataCallbackInfo;	// 504 = 0x1f8
    struct Dispatcher *fPrivateDeviceMotionDispatcher;	// 512 = 0x200
    CDUnknownFunctionPointerType fPrivateDeviceMotionCallback;	// 520 = 0x208
    void *fPrivateDeviceMotionCallbackInfo;	// 528 = 0x210
    _Bool fPrivateDeviceMotionUse9Axis;	// 536 = 0x218
    _Bool fPrivateUseAccelerometer;	// 537 = 0x219
    void *fConnection;	// 544 = 0x220
    NSObject<OS_dispatch_queue> *fConnectionQueue;	// 552 = 0x228
    _Bool fSidebandSensorFusionEnabled;	// 560 = 0x230
    _Bool fSidebandSensorFusionLatency;	// 561 = 0x231
    _Bool fSidebandSensorFusionSnoop;	// 562 = 0x232
    struct unique_ptr<CLIspDataVisitor, std::default_delete<CLIspDataVisitor>> fSidebandVisitor;	// 568 = 0x238
    int fPrivatePowerConservationMode;	// 576 = 0x240
    CDUnknownFunctionPointerType fPrivateNotificationCallback;	// 584 = 0x248
    void *fPrivateNotificationCallbackInfo;	// 592 = 0x250
    struct Dispatcher *fPrivateDeviceMotionSensorStatusDispatcher;	// 600 = 0x258
    CDUnknownBlockType fDeviceMotionErrorHandler;	// 608 = 0x260
    NSOperationQueue *fDeviceMotionErrorQueue;	// 616 = 0x268
    _Bool fIsApplicationActive;	// 624 = 0x270
    struct unique_ptr<CLDeviceMotionLiteService, std::default_delete<CLDeviceMotionLiteService>> fDeviceMotionLiteService;	// 632 = 0x278
    struct unique_ptr<CMMotionManagerStatsCollector, std::default_delete<CMMotionManagerStatsCollector>> fMotionManagerStatsCollector;	// 640 = 0x280
    struct Dispatcher *fFactoryGyroDispatcher;	// 648 = 0x288
    double fFactoryGyroUpdateInterval;	// 656 = 0x290
    struct Dispatcher *fFactoryGyroTemperatureDispatcher;	// 664 = 0x298
    double fFactoryGyroTemperatureUpdateInterval;	// 672 = 0x2a0
    CDUnknownBlockType fFactoryGyroHandler;	// 680 = 0x2a8
    NSOperationQueue *fFactoryGyroQueue;	// 688 = 0x2b0
    double fLastFactoryGyroNotificationTimestamp;	// 696 = 0x2b8
    float fLastFactoryGyroTemperature;	// 704 = 0x2c0
    _Bool fFactoryGyroFitComputed;	// 708 = 0x2c4
    struct NonlinearGyroBiasFit fFactoryGyroNonlinearGyroBiasFit;	// 709 = 0x2c5
    struct LinearFit fFactoryGyroLinearGyroBiasFit;	// 992 = 0x3e0
    NSOperationQueue *_fDeviceMotionLiteClientQueue;	// 1016 = 0x3f8
    CDUnknownBlockType _fDeviceMotionLiteFusedHandler;	// 1024 = 0x400
    NSString *_fDeviceMotionLitePhysicalDeviceID;	// 1032 = 0x408
}

- (id).cxx_construct;	// IMP=0x0000000000117e3a
- (void).cxx_destruct;	// IMP=0x0000000000117ddc
@property(retain, nonatomic) NSString *fDeviceMotionLitePhysicalDeviceID; // @synthesize fDeviceMotionLitePhysicalDeviceID=_fDeviceMotionLitePhysicalDeviceID;
@property(copy, nonatomic) CDUnknownBlockType fDeviceMotionLiteFusedHandler; // @synthesize fDeviceMotionLiteFusedHandler=_fDeviceMotionLiteFusedHandler;
@property(retain, nonatomic) NSOperationQueue *fDeviceMotionLiteClientQueue; // @synthesize fDeviceMotionLiteClientQueue=_fDeviceMotionLiteClientQueue;
- (void)teardownPrivate;	// IMP=0x0000000000117d3f
- (void)dealloc;	// IMP=0x0000000000117ce5
- (id)init;	// IMP=0x00000000001179fa

@end

