//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;	// IMP=0x0080000000089782
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;	// IMP=0x0080000000089771
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;	// IMP=0x0080000000089742
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;	// IMP=0x008000000008964e
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;	// IMP=0x008000000008955a
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;	// IMP=0x0080000000089549
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;	// IMP=0x008000000008952c
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;	// IMP=0x008000000008945c
+ (int)payloadForCodecType:(long long)arg1;	// IMP=0x00800000000891e0
+ (long long)codecTypeForPayload:(int)arg1;	// IMP=0x0080000000088f64
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;	// IMP=0x0080000000088de1
+ (_Bool)shouldEnablePacketSizeLimitForPayload:(int)arg1;	// IMP=0x0080000000088dd5
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;	// IMP=0x0080000000088dc0
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;	// IMP=0x0080000000088d78
+ (_Bool)shouldUseCookieForPayload:(int)arg1;	// IMP=0x0080000000088d5c
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;	// IMP=0x0080000000088d1a
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x0080000000088cfc
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x0080000000088ca1
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;	// IMP=0x0080000000088732
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;	// IMP=0x008000000008845d
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;	// IMP=0x008000000008840a
+ (id)codecModesForEVS32kHz;	// IMP=0x00800000000883fd
+ (id)codecModesForEVS16kHz;	// IMP=0x00800000000883f0
+ (id)codecModesForEVS8kHz;	// IMP=0x00800000000883e3
+ (id)codecModesForAMR16kHz;	// IMP=0x00800000000883d6
+ (id)codecModesForAMR8kHz;	// IMP=0x00800000000883c9
+ (int)codecBandwidthForPayload:(int)arg1;	// IMP=0x008000000008839c
+ (_Bool)canSetBitrateForPayload:(int)arg1;	// IMP=0x0080000000088380
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;	// IMP=0x0080000000088230
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;	// IMP=0x0080000000088110
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;	// IMP=0x00800000000880f0
+ (unsigned int)sampleRateForPayload:(int)arg1;	// IMP=0x008000000008802b
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;	// IMP=0x0080000000087ff8
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;	// IMP=0x0080000000087fdc

@end

