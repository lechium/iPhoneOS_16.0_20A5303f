//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVConference/NSObject-Protocol.h>

@class NSString, NSUUID;
@protocol VCConnectionProtocol;

@protocol VCConnectionProtocol <NSObject>
@property unsigned int downlinkBitrateCap;
@property unsigned int uplinkBitrateCap;
@property unsigned int uplinkBitrateCapOneToOne;
@property unsigned int uplinkAudioBitrateCapOneToOne;
@property(readonly) NSString *remoteInterfaceTypeString;
@property(readonly) NSString *localInterfaceTypeString;
@property(readonly) unsigned int type;
@property int priority;
@property int remoteCellTech;
@property int localCellTech;
@property(readonly) int remoteConnectionType;
@property(readonly) int localConnectionType;
@property(readonly) NSUUID *connectionUUID;
@property(readonly) _Bool serverIsDegraded;
@property(readonly) _Bool isEndToEndLink;
@property(readonly) _Bool isVPN;
@property(readonly) _Bool isRelay;
@property(readonly) int connectionId;
@property int maxConnectionMTU;
@property int connectionMTU;
@property(readonly) _Bool isIPv6;
@property(readonly) NSString *localInterfaceName;
@property(readonly) _Bool isWifiToWifi;
@property(readonly) _Bool isVirtualRelayLink;
@property(readonly) _Bool isRemoteDelegated;
@property(readonly) _Bool isLocalDelegated;
@property(readonly) _Bool isRemoteConstrained;
@property(readonly) _Bool isLocalConstrained;
@property(readonly) _Bool isRemoteExpensive;
@property(readonly) _Bool isLocalExpensive;
@property(readonly) _Bool isRemoteOn5G;
@property(readonly) _Bool isLocalOn5G;
@property(readonly) _Bool isRemoteOnCellular;
@property(readonly) _Bool isLocalOnCellular;
@property(readonly) _Bool isRemoteOnWiFi;
@property(readonly) _Bool isLocalOnWiFi;
- (unsigned short)updateMaxConnectionMTU:(unsigned short)arg1;
- (long long)compare:(id <VCConnectionProtocol>)arg1 isPrimary:(_Bool)arg2 selectionPolicy:(CDStruct_155bd25f *)arg3;
- (_Bool)matchesSourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1;
- (void)getSourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1;
- (_Bool)isOnSameInterfacesWithConnection:(id <VCConnectionProtocol>)arg1;
- (_Bool)isSameAsConnection:(id <VCConnectionProtocol>)arg1;
@end

