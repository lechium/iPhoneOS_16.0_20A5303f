//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreIDCred/NSObject-Protocol.h>

@class DCCredentialOptions, NSArray, NSData, NSDictionary, NSString;

@protocol DCCredentialStoreXPCProtocol <NSObject>
- (void)eraseLegacySEKeySlot:(long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)occupiedLegacySEKeySlotsWithCompletion:(void (^)(NSArray *, NSError *))arg1;
- (void)allElementsOfCredential:(NSString *)arg1 authData:(NSData *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;
- (void)payloadsOfCredential:(NSString *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;
- (void)checkCompletenessOfCredential:(NSString *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;
- (void)elementsOfCredential:(NSString *)arg1 elementIdentifiers:(NSDictionary *)arg2 authData:(NSData *)arg3 completion:(void (^)(NSDictionary *, NSError *))arg4;
- (void)payloadAuthACLForCredential:(NSString *)arg1 completion:(void (^)(NSData *, NSError *))arg2;
- (void)propertiesOfCredential:(NSString *)arg1 completion:(void (^)(DCCredentialProperties *, NSError *))arg2;
- (void)setStateOfCredential:(NSString *)arg1 to:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (void)replacePayloadOfCredential:(NSString *)arg1 withPayload:(NSData *)arg2 format:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;
- (void)credentialIdentifierForPublicKeyIdentifier:(NSData *)arg1 completion:(void (^)(NSString *, NSError *))arg2;
- (void)associateExternalPresentmentKeyWithCredential:(NSString *)arg1 publicKeyIdentifier:(NSData *)arg2 completion:(void (^)(NSError *))arg3;
- (void)deleteCredential:(NSString *)arg1 completion:(void (^)(NSError *))arg2;
- (void)authorizeRemoteKeySigningKeyWithCredential:(NSString *)arg1 remoteKey:(NSData *)arg2 completion:(void (^)(NSData *, NSError *))arg3;
- (void)generatePresentmentKeyForCredential:(NSString *)arg1 completion:(void (^)(DCCredentialCryptoKey *, NSError *))arg2;
- (void)generateDeviceEncryptionKeyForCredential:(NSString *)arg1 completion:(void (^)(DCCredentialCryptoKey *, NSError *))arg2;
- (void)generateKeySigningKeyForCredential:(NSString *)arg1 completion:(void (^)(DCCredentialCryptoKey *, NSError *))arg2;
- (void)credentialIdentifiersInPartitions:(NSArray *)arg1 docType:(NSString *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;
- (void)credentialIdentifiersInPartitions:(NSArray *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)createCredentialInPartition:(NSString *)arg1 options:(DCCredentialOptions *)arg2 completion:(void (^)(NSString *, NSError *))arg3;
- (void)configureWithPartitions:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;
@end

