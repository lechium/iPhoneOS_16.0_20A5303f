//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, RBDisplayListInterpolator;

#pragma mark Function Pointers

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct Contents;

struct DisplayListPredicate {
    struct vector<RB::DisplayListPredicate::Term, 1UL, unsigned int> _terms;
};

struct Document;

struct Invertible {
    struct DisplayListPredicate predicate;
    _Bool inverts_result;
};

struct Term;

struct _CAImageQueue;

struct atomic<_opaque_pthread_t *> {
    struct __cxx_atomic_impl<_opaque_pthread_t *, std::__cxx_atomic_base_impl<_opaque_pthread_t *>> {
        _Atomic struct _opaque_pthread_t *__a_value;
    } __a_;
};

struct cf_ptr<_CAImageQueue *> {
    struct _CAImageQueue *_p;
};

struct objc_ptr<NSData *> {
    NSData *_p;
};

struct objc_ptr<RBDisplayListInterpolator *> {
    RBDisplayListInterpolator *_p;
};

struct objc_ptr<id<RBDisplayListContents>> {
    id _p;
};

struct unique_ptr<RB::DisplayList::Contents, RB::Destroy<RB::DisplayList::Contents>> {
    struct __compressed_pair<RB::DisplayList::Contents *, RB::Destroy<RB::DisplayList::Contents>> {
        struct Contents *__value_;
    } __ptr_;
};

struct unique_ptr<RB::XML::Document, std::default_delete<RB::XML::Document>> {
    struct __compressed_pair<RB::XML::Document *, std::default_delete<RB::XML::Document>> {
        struct Document *__value_;
    } __ptr_;
};

struct vector<RB::DisplayListPredicate::Term, 1UL, unsigned int> {
    unsigned char _p[32];
    struct Term *_p;
    unsigned int _size;
    unsigned int _capacity;
};

#pragma mark Typedef'd Structures

typedef struct {
    int _field1;
    void *_field2;
} CDStruct_27041886;

