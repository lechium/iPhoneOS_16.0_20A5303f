//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CTTelephonyNetworkInfo, NSDictionary, NSLock, NSMutableDictionary, NSRegularExpression, _NBMetadataHelper, _NBRegExMatcher;

__attribute__((visibility("hidden")))
@interface _NBPhoneNumberUtil : NSObject
{
    NSLock *_entireStringCacheLock;	// 8 = 0x8
    NSMutableDictionary *_entireStringRegexCache;	// 16 = 0x10
    NSLock *_lockPatternCache;	// 24 = 0x18
    NSMutableDictionary *_regexPatternCache;	// 32 = 0x20
    NSRegularExpression *_CAPTURING_DIGIT_PATTERN;	// 40 = 0x28
    NSRegularExpression *_VALID_ALPHA_PHONE_PATTERN;	// 48 = 0x30
    _NBMetadataHelper *_helper;	// 56 = 0x38
    _NBRegExMatcher *_matcher;	// 64 = 0x40
}

+ (void)initialize;	// IMP=0x006000000005062f
+ (id)sharedInstance;	// IMP=0x006000000004f360
- (void).cxx_destruct;	// IMP=0x000000000005c21f
@property(retain, nonatomic) _NBRegExMatcher *matcher; // @synthesize matcher=_matcher;
@property(retain, nonatomic) _NBMetadataHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) NSRegularExpression *VALID_ALPHA_PHONE_PATTERN; // @synthesize VALID_ALPHA_PHONE_PATTERN=_VALID_ALPHA_PHONE_PATTERN;
@property(retain, nonatomic) NSRegularExpression *CAPTURING_DIGIT_PATTERN; // @synthesize CAPTURING_DIGIT_PATTERN=_CAPTURING_DIGIT_PATTERN;
@property(retain, nonatomic) NSMutableDictionary *regexPatternCache; // @synthesize regexPatternCache=_regexPatternCache;
@property(retain, nonatomic) NSLock *lockPatternCache; // @synthesize lockPatternCache=_lockPatternCache;
@property(retain, nonatomic) NSMutableDictionary *entireStringRegexCache; // @synthesize entireStringRegexCache=_entireStringRegexCache;
@property(retain, nonatomic) NSLock *entireStringCacheLock; // @synthesize entireStringCacheLock=_entireStringCacheLock;
- (_Bool)matchesEntirely:(id)arg1 string:(id)arg2;	// IMP=0x000000000005c009
- (_Bool)canBeInternationallyDialled:(id)arg1;	// IMP=0x000000000005bedc
- (_Bool)canBeInternationallyDialled:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005bd90
- (_Bool)isNationalNumberSuffixOfTheOther:(id)arg1 second:(id)arg2;	// IMP=0x000000000005bc72
- (long long)isNumberMatch:(id)arg1 second:(id)arg2;	// IMP=0x000000000005b4c4
- (long long)isNumberMatch:(id)arg1 second:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005b354
- (void)buildNationalNumberForParsing:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x000000000005b072
- (id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(_Bool)arg3 checkRegion:(_Bool)arg4 error:(id *)arg5;	// IMP=0x000000000005a3b6
- (void)setItalianLeadingZerosForPhoneNumber:(id)arg1 phoneNumber:(id)arg2;	// IMP=0x000000000005a244
- (id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005a0b8
- (id)countryCodeByCarrier;	// IMP=0x000000000005a007
@property(readonly, nonatomic) CTTelephonyNetworkInfo *telephonyNetworkInfo;
- (id)parseWithPhoneCarrierRegion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000059e94
- (id)parse:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000059d8d
- (_Bool)checkRegionForParsing:(id)arg1 defaultRegion:(id)arg2;	// IMP=0x0000000000059d08
- (id)maybeStripExtension:(id *)arg1;	// IMP=0x0000000000059afd
- (_Bool)maybeStripNationalPrefixAndCarrierCode:(id *)arg1 metadata:(id)arg2 carrierCode:(id *)arg3;	// IMP=0x00000000000595df
- (long long)maybeStripInternationalPrefixAndNormalize:(id *)arg1 possibleIddPrefix:(id)arg2;	// IMP=0x00000000000594aa
- (_Bool)parsePrefixAsIdd:(id)arg1 sourceString:(id *)arg2;	// IMP=0x00000000000591e2
- (_Bool)descHasPossibleNumberData:(id)arg1;	// IMP=0x0000000000059113
- (id)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id *)arg3 keepRawInput:(_Bool)arg4 phoneNumber:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000058abe
- (id)getSupportedRegions;	// IMP=0x0000000000058a04
- (id)extractCountryCode:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x0000000000058749
- (_Bool)truncateTooLongNumber:(id)arg1;	// IMP=0x000000000005859c
- (_Bool)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000584e8
- (long long)isPossibleNumberWithReason:(id)arg1;	// IMP=0x00000000000583ba
- (long long)isPossibleNumberWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005826c
- (long long)testNumberLength:(id)arg1 desc:(id)arg2;	// IMP=0x000000000005804a
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2 type:(long long)arg3;	// IMP=0x0000000000057af3
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000057ada
- (_Bool)isPossibleNumber:(id)arg1;	// IMP=0x0000000000057ac0
- (_Bool)isPossibleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000057974
- (_Bool)isAlphaNumber:(id)arg1;	// IMP=0x000000000005787b
- (_Bool)isLeadingZeroPossible:(id)arg1;	// IMP=0x00000000000577d9
- (_Bool)isNANPACountry:(id)arg1;	// IMP=0x00000000000575a7
- (id)getNddPrefixForRegion:(id)arg1 stripNonDigits:(_Bool)arg2;	// IMP=0x000000000005748c
- (id)getCountryCodeForValidRegion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000057336
- (id)getCountryCodeForRegion:(id)arg1;	// IMP=0x0000000000057289
- (id)getRegionCodesForCountryCode:(id)arg1;	// IMP=0x0000000000057270
- (id)getRegionCodeForCountryCode:(id)arg1;	// IMP=0x0000000000057201
- (id)getRegionCodeForNumberFromRegionList:(id)arg1 regionCodes:(id)arg2;	// IMP=0x0000000000056ffe
- (id)getRegionCodeForNumber:(id)arg1;	// IMP=0x0000000000056ef2
- (_Bool)isValidNumberForRegion:(id)arg1 regionCode:(id)arg2;	// IMP=0x0000000000056ce8
- (_Bool)isValidNumber:(id)arg1;	// IMP=0x0000000000056c74
- (_Bool)isNumberMatchingDesc:(id)arg1 numberDesc:(id)arg2;	// IMP=0x0000000000056b19
- (long long)getNumberTypeHelper:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000056689
- (long long)getNumberType:(id)arg1;	// IMP=0x000000000005658c
- (id)getNumberDescByType:(id)arg1 type:(long long)arg2;	// IMP=0x0000000000056478
- (id)maybeGetFormattedExtension:(id)arg1 metadata:(id)arg2 numberFormat:(long long)arg3;	// IMP=0x000000000005626f
- (id)getExampleNumberForNonGeoEntity:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000055dfc
- (id)getExampleNumberForType:(id)arg1 type:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000055c79
- (id)getExampleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000055c62
- (id)formatNsnUsingPattern:(id)arg1 formattingPattern:(id)arg2 numberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x00000000000558e4
- (id)chooseFormattingPatternForNumber:(id)arg1 nationalNumber:(id)arg2;	// IMP=0x0000000000055610
- (id)formatNsn:(id)arg1 metadata:(id)arg2 phoneNumberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x00000000000554b3
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000054f35
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000054db9
- (_Bool)hasFormattingPatternForNumber:(id)arg1;	// IMP=0x0000000000054c7e
- (_Bool)hasUnexpectedItalianLeadingZero:(id)arg1;	// IMP=0x0000000000054bfd
- (_Bool)rawInputContainsNationalPrefix:(id)arg1 nationalPrefix:(id)arg2 regionCode:(id)arg3;	// IMP=0x0000000000054ac3
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x000000000005441a
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005429e
- (id)prefixNumberWithCountryCallingCode:(id)arg1 phoneNumberFormat:(long long)arg2 formattedNationalNumber:(id)arg3 formattedExtension:(id)arg4;	// IMP=0x000000000005418b
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000053ca8
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000053b2c
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3;	// IMP=0x0000000000053753
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000000535ca
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2;	// IMP=0x00000000000534fd
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000053381
- (id)getMetadataForRegionOrCallingCode:(id)arg1 regionCode:(id)arg2;	// IMP=0x00000000000532aa
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2;	// IMP=0x0000000000053103
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000052f87
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3;	// IMP=0x0000000000052bcd
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000052a44
- (id)format:(id)arg1 numberFormat:(long long)arg2;	// IMP=0x0000000000052781
- (id)format:(id)arg1 numberFormat:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000052621
- (_Bool)hasValidCountryCallingCode:(id)arg1;	// IMP=0x00000000000525e7
- (_Bool)isValidRegionCode:(id)arg1;	// IMP=0x00000000000524aa
- (_Bool)isNumberGeographical:(id)arg1;	// IMP=0x0000000000052404
- (_Bool)formattingRuleHasFirstGroupOnly:(id)arg1;	// IMP=0x0000000000052398
- (id)normalizeHelper:(id)arg1 normalizationReplacements:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000052228
- (id)getCountryMobileTokenFromCountryCode:(long long)arg1;	// IMP=0x000000000005219b
- (int)getLengthOfNationalDestinationCode:(id)arg1;	// IMP=0x0000000000051dc1
- (int)getLengthOfNationalDestinationCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000051c75
- (int)getLengthOfGeographicalAreaCode:(id)arg1;	// IMP=0x0000000000051b60
- (int)getLengthOfGeographicalAreaCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000051a14
- (id)convertAlphaCharactersInNumber:(id)arg1;	// IMP=0x0000000000051997
- (id)normalizeDiallableCharsOnly:(id)arg1;	// IMP=0x0000000000051917
- (id)normalizeDigitsOnly:(id)arg1;	// IMP=0x000000000005187a
- (void)normalizeSB:(id *)arg1;	// IMP=0x0000000000051842
- (id)normalize:(id)arg1;	// IMP=0x00000000000517a5
- (_Bool)isViablePhoneNumber:(id)arg1;	// IMP=0x000000000005171c
- (id)extractPossibleNumber:(id)arg1;	// IMP=0x0000000000051602
- (void)initNormalizationMappings;	// IMP=0x0000000000050d35
@property(readonly, nonatomic) NSDictionary *DIGIT_MAPPINGS;
- (void)initRegularExpressionSet;	// IMP=0x0000000000050741
- (id)init;	// IMP=0x0000000000050679
- (id)getNationalSignificantNumber:(id)arg1;	// IMP=0x0000000000050494
- (_Bool)isAllDigits:(id)arg1;	// IMP=0x00000000000503ec
- (id)stringByReplacingOccurrencesString:(id)arg1 withMap:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000050290
- (_Bool)isStartingStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000005008e
- (id)matchedStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fe83
- (id)matchesByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fdc4
- (id)matchFirstByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fcc5
- (id)replaceStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004face
- (id)replaceFirstStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004f975
- (int)indexOfStringByString:(id)arg1 target:(id)arg2;	// IMP=0x000000000004f95d
- (int)stringPositionByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f7e4
- (id)componentsSeparatedByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f748
- (id)regularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004f621
- (id)entireRegularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004f487
- (id)errorWithObject:(id)arg1 withDomain:(id)arg2;	// IMP=0x000000000004f3e5

@end

