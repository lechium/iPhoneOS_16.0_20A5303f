//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NotesShared/ICHasDatabaseScope-Protocol.h>
#import <NotesShared/NSObject-Protocol.h>

@class CKModifyRecordsOperation, CKRecord, CKRecordID, NSArray, NSError, NSManagedObjectContext, NSManagedObjectID, NSPredicate, NSString;

@protocol ICCloudObject <NSObject, ICHasDatabaseScope>
+ (void)enumerateAllCloudObjectsInContext:(NSManagedObjectContext *)arg1 predicate:(NSPredicate *)arg2 sortDescriptors:(NSArray *)arg3 relationshipKeyPathsForPrefetching:(NSArray *)arg4 batchSize:(unsigned long long)arg5 saveAfterBatch:(_Bool)arg6 usingBlock:(void (^)(id <ICCloudObject>, _Bool *))arg7;
+ (void)enumerateAllCloudObjectsInContext:(NSManagedObjectContext *)arg1 batchSize:(unsigned long long)arg2 saveAfterBatch:(_Bool)arg3 usingBlock:(void (^)(id <ICCloudObject>, _Bool *))arg4;
+ (NSArray *)allCloudObjectIDsInContext:(NSManagedObjectContext *)arg1 passingTest:(_Bool (^)(id <ICCloudObject>, _Bool *))arg2;
+ (id)newPlaceholderObjectForRecordName:(NSString *)arg1 accountID:(NSString *)arg2 context:(NSManagedObjectContext *)arg3;
+ (id)newCloudObjectForRecord:(CKRecord *)arg1 accountID:(NSString *)arg2 context:(NSManagedObjectContext *)arg3;
+ (id)existingCloudObjectForRecordID:(CKRecordID *)arg1 accountID:(NSString *)arg2 context:(NSManagedObjectContext *)arg3;
@property(readonly, nonatomic) NSManagedObjectID *objectID;
@property(readonly, copy, nonatomic) NSString *loggingDescription;
@property(readonly, nonatomic) _Bool isValidObject;
@property(readonly, nonatomic) _Bool isInICloudAccount;
@property(readonly, nonatomic) _Bool needsToBeFetchedFromCloud;
@property(readonly, nonatomic) _Bool needsToBePushedToCloud;
@property(readonly, nonatomic) _Bool needsToBeDeletedFromCloud;
@property(readonly, copy, nonatomic) CKRecordID *userSpecificRecordID;
@property(readonly, nonatomic) _Bool wantsUserSpecificRecord;
@property(readonly, nonatomic) _Bool needsToSaveUserSpecificRecord;
@property(readonly, copy, nonatomic) NSString *recordType;
@property(readonly, copy, nonatomic) CKRecordID *recordID;
- (void)objectWasFetchedButDoesNotExistInCloud;
- (void)objectWasFetchedFromCloudWithRecord:(CKRecord *)arg1 accountID:(NSString *)arg2 force:(_Bool)arg3;
- (void)objectWasFetchedFromCloudWithRecord:(CKRecord *)arg1 accountID:(NSString *)arg2;
- (void)objectFailedToBePushedToCloudWithOperation:(CKModifyRecordsOperation *)arg1 recordID:(CKRecordID *)arg2 error:(NSError *)arg3;
- (void)objectWasPushedToCloudWithOperation:(CKModifyRecordsOperation *)arg1 serverRecord:(CKRecord *)arg2;
- (void)objectWillBePushedToCloudWithOperation:(CKModifyRecordsOperation *)arg1;
- (void)objectWasDeletedFromCloudByAnotherDevice;
- (void)objectWasDeletedFromCloud;
- (void)fixBrokenReferences;
- (NSArray *)objectsToBeDeletedBeforeThisObject;
- (void)deleteFromLocalDatabase;
- (void)didDeleteUserSpecificRecordID:(CKRecordID *)arg1;
- (void)didFailToSaveUserSpecificRecordWithID:(CKRecordID *)arg1 accountID:(NSString *)arg2 error:(NSError *)arg3;
- (void)didSaveUserSpecificRecord:(CKRecord *)arg1;
- (void)didFetchUserSpecificRecord:(CKRecord *)arg1 accountID:(NSString *)arg2 force:(_Bool)arg3;
- (CKRecord *)newlyCreatedUserSpecificRecord;
- (void)mergeDataFromRecord:(CKRecord *)arg1 accountID:(NSString *)arg2 force:(_Bool)arg3;
- (void)mergeDataFromRecord:(CKRecord *)arg1 accountID:(NSString *)arg2;
- (CKRecord *)newlyCreatedRecord;
@end

