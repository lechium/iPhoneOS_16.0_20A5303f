//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSSet, NSString;

@interface FlexSongBackend : NSObject
{
    _Bool _hidden;	// 8 = 0x8
    _Bool _recalled;	// 9 = 0x9
    NSString *_uid;	// 16 = 0x10
    NSString *_audioEncoderPresetName;	// 24 = 0x18
    NSString *_songName;	// 32 = 0x20
    NSString *_artistName;	// 40 = 0x28
    NSSet *_tagIDs;	// 48 = 0x30
    NSSet *_keywords;	// 56 = 0x38
    NSArray *_assets;	// 64 = 0x40
    NSString *_songFormat;	// 72 = 0x48
    long long _sampleRate;	// 80 = 0x50
    long long _metadataVersion;	// 88 = 0x58
    NSDictionary *_customOptions;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x0000000000002583
@property(retain, nonatomic) NSDictionary *customOptions; // @synthesize customOptions=_customOptions;
@property(nonatomic) long long metadataVersion; // @synthesize metadataVersion=_metadataVersion;
@property(nonatomic) _Bool recalled; // @synthesize recalled=_recalled;
@property(nonatomic) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) long long sampleRate; // @synthesize sampleRate=_sampleRate;
@property(retain, nonatomic) NSString *songFormat; // @synthesize songFormat=_songFormat;
@property(retain, nonatomic) NSArray *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) NSSet *keywords; // @synthesize keywords=_keywords;
@property(retain, nonatomic) NSSet *tagIDs; // @synthesize tagIDs=_tagIDs;
@property(retain, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
@property(retain, nonatomic) NSString *songName; // @synthesize songName=_songName;
@property(retain, nonatomic) NSString *audioEncoderPresetName; // @synthesize audioEncoderPresetName=_audioEncoderPresetName;
@property(retain, nonatomic) NSString *uid; // @synthesize uid=_uid;
- (_Bool)_verifyKeyFrames:(id)arg1 failureReason:(id *)arg2;	// IMP=0x00000000000022dd
- (_Bool)_verifyClips:(id)arg1 inRendition:(id)arg2 failureReason:(id *)arg3;	// IMP=0x0000000000001db5
- (_Bool)verifyRendition:(id)arg1 forDuration:(CDStruct_1b6d18a9)arg2 failureReason:(id *)arg3;	// IMP=0x00000000000019a1
- (void)updateSongArtist:(id)arg1 title:(id)arg2 tags:(id)arg3 keywords:(id)arg4 hidden:(_Bool)arg5 recalled:(_Bool)arg6 metadataVersion:(long long)arg7;	// IMP=0x00000000000018c2
- (id)renditionForDuration:(CDStruct_1b6d18a9)arg1 withOptions:(id)arg2 testingContext:(id)arg3;	// IMP=0x00000000000018ba
- (id)timedMetadataItemsWithIdentifier:(id)arg1 forRendition:(id)arg2;	// IMP=0x00000000000018ad
- (CDStruct_1b6d18a9)minimumDuration;	// IMP=0x000000000000188f
- (id)idealDurations;	// IMP=0x0000000000001882
- (CDStruct_1b6d18a9)naturalDuration;	// IMP=0x0000000000001864
- (_Bool)isLoaded;	// IMP=0x000000000000185c
- (_Bool)canPlay;	// IMP=0x0000000000001854
- (id)existingAssetWithID:(id)arg1;	// IMP=0x0000000000001613
- (id)assetWithID:(id)arg1;	// IMP=0x0000000000001601
- (void)updateAssets:(id)arg1;	// IMP=0x0000000000001158
- (void)updateSampleRate:(long long)arg1;	// IMP=0x000000000000114e
- (id)initWithUID:(id)arg1 songName:(id)arg2 artistName:(id)arg3 tagIDs:(id)arg4 keywords:(id)arg5 hidden:(_Bool)arg6 recalled:(_Bool)arg7 audioEncoderPresetName:(id)arg8 metadataVersion:(long long)arg9 songFormat:(id)arg10 sampleRate:(long long)arg11 customOptions:(id)arg12;	// IMP=0x0000000000000fb4

@end

