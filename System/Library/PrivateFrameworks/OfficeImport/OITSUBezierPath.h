//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface OITSUBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x0010000000277ce9
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x0010000000277cdb
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x0010000000277cce
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000277cc1
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x0010000000277cb4
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000277ca7
+ (unsigned long long)defaultWindingRule;	// IMP=0x0010000000277c9a
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000277c8d
+ (double)defaultFlatness;	// IMP=0x0010000000277c7f
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000277c71
+ (double)defaultMiterLimit;	// IMP=0x0010000000277c63
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000277c55
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0010000000277bba
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000277b94
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x00100000002779da
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x00100000002779b4
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x00100000002777ed
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x001000000027779b
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000277752
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0010000000277709
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x001000000027769c
+ (id)bezierPath;	// IMP=0x001000000027768a
+ (void)initialize;	// IMP=0x001000000027764a
+ (double)lineWidth;	// IMP=0x001000000027d75c
+ (void)setLineWidth:(double)arg1;	// IMP=0x001000000027d74a
+ (unsigned long long)lineJoinStyle;	// IMP=0x001000000027d738
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x001000000027d726
+ (unsigned long long)lineCapStyle;	// IMP=0x001000000027d714
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x001000000027d702
+ (unsigned long long)windingRule;	// IMP=0x001000000027d6f0
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x001000000027d6de
+ (double)flatness;	// IMP=0x001000000027d6cc
+ (void)setFlatness:(double)arg1;	// IMP=0x001000000027d6ba
+ (double)miterLimit;	// IMP=0x001000000027d6a8
+ (void)setMiterLimit:(double)arg1;	// IMP=0x001000000027d696
- (id)initWithCString:(const char *)arg1;	// IMP=0x000000000027ccd0
- (const char *)cString;	// IMP=0x000000000027c9b4
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000027c19d
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000027bafc
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x000000000027ba78
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x000000000027b6b9
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000027b6a2
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x000000000027b3c2
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x000000000027b2a1
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x000000000027b0cc
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x000000000027b021
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x000000000027af10
- (void)appendBezierPath:(id)arg1;	// IMP=0x000000000027aefc
- (void)appendBezierPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x000000000027ad0c
- (void)_appendToPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x000000000027abb3
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x000000000027aade
- (long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x000000000027aa01
- (long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x000000000027a942
- (long long)elementAtIndex:(long long)arg1;	// IMP=0x000000000027a92e
- (long long)elementCount;	// IMP=0x000000000027a924
- (double)lengthToElement:(long long)arg1;	// IMP=0x000000000027a874
- (double)lengthOfElement:(long long)arg1;	// IMP=0x000000000027a83f
- (double)length;	// IMP=0x000000000027a811
- (void)calculateLengths;	// IMP=0x000000000027a76a
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x000000000027a6cc
- (_Bool)isClockwise;	// IMP=0x000000000027a4a6
- (_Bool)isFlat;	// IMP=0x000000000027a495
- (struct CGRect)bounds;	// IMP=0x000000000027a40c
- (struct CGRect)controlPointBounds;	// IMP=0x000000000027a2a5
- (struct CGPoint)currentPoint;	// IMP=0x000000000027a245
- (_Bool)isEmpty;	// IMP=0x000000000027a237
- (_Bool)isCircular;	// IMP=0x000000000027a023
- (_Bool)isRectangular;	// IMP=0x0000000000279cb6
- (_Bool)isDiamond;	// IMP=0x0000000000279a69
- (_Bool)isTriangular;	// IMP=0x000000000027990e
- (struct CGPath *)CGPath;	// IMP=0x00000000002798d0
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000279780
- (id)p_bezierPathByRemovingRedundantElementAndSubregionsSmallerThanThreshold:(double)arg1;	// IMP=0x000000000027925b
- (id)bezierPathByRemovingRedundantElements;	// IMP=0x0000000000279246
- (id)bezierPathByRemovingSmallSubpathsForInteriorWrapsForInset:(double)arg1;	// IMP=0x0000000000279230
- (id)bezierPathByReversingPath;	// IMP=0x000000000027905b
- (id)_copyFlattenedPath;	// IMP=0x0000000000279026
- (id)bezierPathByFlatteningPathWithFlatness:(double)arg1;	// IMP=0x0000000000278fb2
- (id)bezierPathByFlatteningPath;	// IMP=0x0000000000278f98
- (void)flattenIntoPath:(id)arg1 flatness:(double)arg2;	// IMP=0x0000000000278e65
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000278e4b
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x0000000000278bdc
- (void)addClip;	// IMP=0x0000000000278ab8
- (void)fill;	// IMP=0x0000000000278994
- (void)stroke;	// IMP=0x0000000000278824
- (void)_doPath;	// IMP=0x0000000000278677
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;	// IMP=0x0000000000278613
- (_Bool)_isValid:(double)arg1;	// IMP=0x00000000002785ed
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x0000000000278598
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000002784be
- (void)setFlatness:(double)arg1;	// IMP=0x00000000002784b3
- (double)flatness;	// IMP=0x00000000002784a8
- (void)setMiterLimit:(double)arg1;	// IMP=0x000000000027849d
- (double)miterLimit;	// IMP=0x0000000000278492
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0000000000278476
- (unsigned long long)windingRule;	// IMP=0x0000000000278464
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0000000000278448
- (unsigned long long)lineJoinStyle;	// IMP=0x0000000000278436
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000027841c
- (unsigned long long)lineCapStyle;	// IMP=0x000000000027840a
- (void)setLineWidth:(double)arg1;	// IMP=0x00000000002783ff
- (double)lineWidth;	// IMP=0x00000000002783f4
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000278372
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000278328
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002782de
- (void)removeAllPoints;	// IMP=0x000000000027827d
- (void)closePath;	// IMP=0x000000000027826b
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000002781d2
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000278164
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000278152
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000278100
- (void)copyPathAttributesTo:(id)arg1;	// IMP=0x000000000027800a
- (unsigned long long)hash;	// IMP=0x0000000000277ff8
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000277e4a
- (void)dealloc;	// IMP=0x0000000000277dba
- (id)init;	// IMP=0x0000000000277cf7
- (void)_deviceClosePath;	// IMP=0x000000000027d556
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x000000000027d3f5
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027d3bd
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027d330
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x000000000027d19f
- (id)description;	// IMP=0x000000000027d76e
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x00000000002934d0
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x0000000000292fcb
- (void)attachBezierPath:(id)arg1;	// IMP=0x000000000036eba4

@end

