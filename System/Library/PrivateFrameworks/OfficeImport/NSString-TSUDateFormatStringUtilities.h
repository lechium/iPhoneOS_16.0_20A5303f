//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSString.h>

@interface NSString (TSUDateFormatStringUtilities)
+ (id)tsu_numberSymbols;	// IMP=0x00200000002621d1
+ (id)tsu_stringByHexEncodingData:(id)arg1;	// IMP=0x002000000026d33f
+ (id)tsu_stringWithXMLString:(const char *)arg1;	// IMP=0x002000000026cf47
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;	// IMP=0x002000000026cb52
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x002000000026cb36
+ (id)tsu_stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x002000000026caa6
+ (id)tsu_stringByIndentingString:(id)arg1;	// IMP=0x002000000026a123
+ (id)tsu_stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;	// IMP=0x0020000000269fe1
+ (id)tsu_stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x0020000000269f85
+ (id)tsu_stringWithUUID;	// IMP=0x0020000000269f4b
+ (id)tsu_localizedDisplayNameWithPersonNameComponents:(id)arg1;	// IMP=0x002000000026e348
+ (id)tsu_fogFilenameFromShareToken:(id)arg1;	// IMP=0x002000000026eceb
+ (id)tsu_fogShareTokenFromFileURL:(id)arg1;	// IMP=0x002000000026ebac
+ (id)tsu_customNumberFormatDecimalFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;	// IMP=0x002000000028b5eb
+ (id)tsu_customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x002000000028b56e
+ (id)tsu_customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x002000000028b4dc
+ (id)tsu_customNumberFormatIntegerFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x002000000028b3b7
+ (id)tsu_customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;	// IMP=0x002000000028b322
+ (id)tsu_customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3 locale:(id)arg4;	// IMP=0x002000000028b197
+ (id)tsu_customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;	// IMP=0x002000000028ad02
+ (id)tc_stringByFixingUnpairedSurrogateCharactersInString:(id)arg1;	// IMP=0x00200000002e0d7a
+ (_Bool)tc_fixUnpairedSurrogateCharactersInBuffer:(void *)arg1;	// IMP=0x00200000002e0d0c
+ (id)tc_stringWithXmlString:(const char *)arg1;	// IMP=0x00200000002e1417
+ (id)stringWithOcText:(const struct OcText *)arg1;	// IMP=0x00200000000afe0e
+ (id)stringWithCsString:(const struct CsString *)arg1;	// IMP=0x00200000000181f9
+ (_Bool)tc_skipString:(id)arg1;	// IMP=0x0020000000378e6b
+ (id)tc_mapString:(id)arg1;	// IMP=0x0020000000378cdd
- (id)tsu_stringByReplacing2DigitYearStringWith4DigitYearString;	// IMP=0x001000000024eb3a
- (id)tsu_stringByReplacing4DigitYearStringWith2DigitYearString;	// IMP=0x001000000024eacc
- (id)tsu_prefixOfNumberFormatSubpattern;	// IMP=0x0010000000262b92
- (unsigned long long)tsu_indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;	// IMP=0x00100000002629e6
- (id)tsu_suffixOfNumberFormatSubpattern;	// IMP=0x00100000002629b4
- (unsigned long long)tsu_indexOfLastNonSuffixCharacterInNumberFormatSubpattern;	// IMP=0x0010000000262848
- (id)tsu_numberPortionOfNumberFormatSubpattern;	// IMP=0x00100000002627f7
- (id)tsu_negativeSubpatternOfNumberFormatPattern;	// IMP=0x001000000026279d
- (id)tsu_positiveSubpatternOfNumberFormatPattern;	// IMP=0x0010000000262744
- (unsigned long long)tsu_indexOfNumberFormatSubpatternSeparator;	// IMP=0x001000000026256c
- (id)tsu_stringByRemovingEscapedCharactersFromNumberFormatPattern;	// IMP=0x0010000000262422
- (id)tsu_newRangesOfEscapedCharactersInNumberFormatPattern;	// IMP=0x00100000002622ce
- (_Bool)tsu_isNumberFormatPattern;	// IMP=0x001000000026223d
- (id)tsu_stringWithNormalizedQuotationMarks;	// IMP=0x001000000026dc34
- (id)tsu_stringWithNormalizedHyphens;	// IMP=0x001000000026dbac
- (id)tsu_stringWithNormalizedHyphensAndQuotationMarks;	// IMP=0x001000000026db5c
- (_Bool)tsu_isEqualToString:(id)arg1;	// IMP=0x001000000026db41
- (id)tsu_middleTruncateToLength:(unsigned long long)arg1;	// IMP=0x001000000026da97
- (id)tsu_stringWithoutAttachmentCharacters;	// IMP=0x001000000026d9fd
- (id)tsu_setOfContainedWordsIncludingPunctuationAndSymbols:(_Bool)arg1;	// IMP=0x001000000026d68a
- (_Bool)tsu_containsSubstring:(id)arg1;	// IMP=0x001000000026d667
- (void)tsu_enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000026d527
- (struct _NSRange)tsu_range;	// IMP=0x001000000026d50f
- (struct _NSRange)tsu_rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;	// IMP=0x001000000026d419
- (id)tsu_tolerantStringByAppendingPathExtension:(id)arg1;	// IMP=0x001000000026d192
- (_Bool)tsu_containsOnlyCharactersFromSet:(id)arg1;	// IMP=0x001000000026d12f
- (id)tsu_unescapeXML;	// IMP=0x001000000026d04a
- (id)tsu_escapeXML;	// IMP=0x001000000026cf65
- (id)tsu_stringByMakingFirstCharacterUppercase;	// IMP=0x001000000026cea4
- (id)tsu_stringByMakingFirstCharacterLowercase;	// IMP=0x001000000026cda8
- (id)tsu_encodeStringBase64;	// IMP=0x001000000026cd54
- (id)tsu_stringByTrimmingCharactersInSetFromFront:(id)arg1;	// IMP=0x001000000026ca13
- (id)tsu_stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;	// IMP=0x001000000026c777
- (id)tsu_stringWithPathRelativeTo:(id)arg1;	// IMP=0x001000000026c545
- (id)tsu_substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;	// IMP=0x001000000026c430
- (id)tsu_substringWithComposedCharacterSequencesTruncatedToLength:(unsigned long long)arg1;	// IMP=0x001000000026c3c2
- (id)tsu_stringWithRealpath;	// IMP=0x001000000026c356
- (_Bool)tsu_isChildOfPath:(id)arg1;	// IMP=0x001000000026c08a
- (_Bool)tsu_isDescendantOfPath:(id)arg1;	// IMP=0x001000000026bec8
- (id)tsu_escapeForIcuRegex;	// IMP=0x001000000026bb7b
- (unsigned long long)tsu_countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x001000000026baa1
- (id)tsu_stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;	// IMP=0x001000000026b85b
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1;	// IMP=0x001000000026b847
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;	// IMP=0x001000000026b5fe
- (id)tsu_md5Hash;	// IMP=0x001000000026b433
- (id)tsu_stringByFixingBrokenSurrogatePairs;	// IMP=0x001000000026b11d
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;	// IMP=0x001000000026ae34
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1;	// IMP=0x001000000026ae1b
- (id)tsu_stringByAddingCSVEscapesForLocale:(id)arg1;	// IMP=0x001000000026abbd
- (id)tsu_stringByAppendingSeparator:(id)arg1 format:(id)arg2;	// IMP=0x001000000026aa7f
- (id)tsu_stringQuotedIfContainsCharacterSet:(id)arg1;	// IMP=0x001000000026a9a3
- (id)tsu_stringByExpandingTableFormatting;	// IMP=0x001000000026a13a
- (_Bool)tsu_isLegalEmailAddress;	// IMP=0x001000000026df85
- (id)tsu_uncommentedAddressRespectingGroups;	// IMP=0x001000000026df02
- (id)tsu_uncommentedAddress;	// IMP=0x001000000026dcbc
- (_Bool)tsu_isCJKString;	// IMP=0x001000000026e0da
- (id)tsu_sha256HexHashString;	// IMP=0x001000000026e505
- (long long)tsu_compareToVersionString:(id)arg1;	// IMP=0x001000000026e5f9
- (unsigned long long)tsu_numberOfKeysInKeyPath;	// IMP=0x001000000026eb33
- (id)tsu_lastKey;	// IMP=0x001000000026eabf
- (id)tsu_firstKey;	// IMP=0x001000000026ea4e
- (id)tsu_keyPathByAppendingKey:(id)arg1;	// IMP=0x001000000026e996
- (id)tsu_keyPathByPrependingKey:(id)arg1;	// IMP=0x001000000026e8de
- (id)tsu_keyPathByRemovingFirstKey;	// IMP=0x001000000026e878
- (id)tsu_keyPathByRemovingLastKey;	// IMP=0x001000000026e815
- (id)tsu_initUnRedactedWithFormat:(id)arg1;	// IMP=0x001000000026f238
- (id)tsu_initRedactedWithFormat:(id)arg1;	// IMP=0x001000000026f179
- (id)tsu_initUnRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026f09e
- (id)tsu_initRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026ee15
- (unsigned short)tsu_spaceCharacterInCustomNumberFormatSpaceToken;	// IMP=0x001000000028b78a
- (unsigned short)tsu_scaleCharacterInCustomNumberFormatScaleToken;	// IMP=0x001000000028b773
- (id)tsu_formatStringFromCustomNumberFormatScaleToken;	// IMP=0x001000000028b75c
- (int)tsu_fractionAccuracyFromCustomNumberFormatFractionToken;	// IMP=0x001000000028b72c
- (id)tsu_currencyCodeFromCustomNumberFormatCurrencyToken;	// IMP=0x001000000028b6db
- (id)tsu_digitPlaceholderStringInDigitToken;	// IMP=0x001000000028b66b
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatDecimalToken;	// IMP=0x001000000028b418
- (id)tsu_stringByInsertingFormatGroupingSeparators:(id)arg1;	// IMP=0x001000000028b00a
- (_Bool)tsu_customFormatIntegerTokenUsesSeparator;	// IMP=0x001000000028af2e
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatIntegerToken;	// IMP=0x001000000028ae1d
- (_Bool)tsu_isSpecialCustomNumberFormatTokenOfType:(int)arg1;	// IMP=0x001000000028ada8
- (_Bool)tsu_isSpecialCustomNumberFormatToken;	// IMP=0x001000000028ad64
- (void)sfu_appendJsonStringToString:(id)arg1;	// IMP=0x00100000002a0e38
- (_Bool)tsu_pathExtensionConformsToUTI:(id)arg1;	// IMP=0x00100000002a24fe
- (_Bool)tsu_pathConformsToUTI:(id)arg1;	// IMP=0x00100000002a24cd
@property(readonly, nonatomic) NSString *tsu_pathUTI;
@property(readonly, nonatomic) NSString *tsu_UTIFilenameExtension;
- (_Bool)tsu_conformsToAnyUTI:(id)arg1;	// IMP=0x00100000002a22a8
- (_Bool)tsu_conformsToUTI:(id)arg1;	// IMP=0x00100000002a228d
- (const char *)nulTerminatedUTF8;	// IMP=0x00100000002e0cf2
- (_Bool)tc_doesURLHostContainWhitespace;	// IMP=0x00100000002e0bb3
- (_Bool)tc_startsWithString:(id)arg1;	// IMP=0x00100000002e0b92
- (id)tc_stringByRemovingInvalidXmlChars;	// IMP=0x00100000002e1a26
- (_Bool)tc_isEqualToXmlString:(const char *)arg1;	// IMP=0x00100000002e19b8
- (id)tc_componentsSeparatedByWhitespace;	// IMP=0x00100000002e1775
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 nsWithFallbackNs:(id)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002e1649
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002e15bf
- (id)tc_initWithContentOfXmlNode:(struct _xmlNode *)arg1;	// IMP=0x00100000002e1528
- (id)tc_initWithValueOfXmlAttribute:(struct _xmlAttr *)arg1;	// IMP=0x00100000002e1460
- (const char *)tc_xmlString;	// IMP=0x00100000002e1446
- (id)tc_initWithXmlString:(const char *)arg1;	// IMP=0x00100000002e1404
- (void)copyToOcText:(struct OcText *)arg1 encoding:(int)arg2;	// IMP=0x0010000000182990
- (void)copyToOcText:(struct OcText *)arg1;	// IMP=0x0010000000182979
- (void)copyToCsString:(struct CsString *)arg1;	// IMP=0x0010000000354563
- (id)dataUsingWordEncoding:(int)arg1;	// IMP=0x0010000000182a8c
- (id)initWithOcText:(const struct OcText *)arg1;	// IMP=0x00100000000afe45
- (id)initWithCsString:(const struct CsString *)arg1;	// IMP=0x001000000001569a
- (unsigned short *)cWideString;	// IMP=0x0010000000378ba6
- (id)tc_escapedFragment;	// IMP=0x001000000037937f
- (id)tc_escapedPath;	// IMP=0x0010000000379358
- (int)tc_languageTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;	// IMP=0x0010000000379184
- (id)tc_initialsFromAuthorName;	// IMP=0x0010000000378f3f
- (id)getDataUsingOfficeCryptographicEncoding;	// IMP=0x001000000037d385
- (int)tc_fontTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 forXML:(_Bool)arg3;	// IMP=0x001000000041ad6d
- (int)fontTypeForCharacter:(unsigned short)arg1 isControl:(_Bool *)arg2;	// IMP=0x001000000041acbe
- (id)CM_stringByAddingCSSEscapes;	// IMP=0x001000000046883d
- (id)copyCsvRows:(unsigned long long *)arg1;	// IMP=0x00100000004771bf
- (id)_copyCsvRows:(unsigned long long *)arg1 usingDelimiter:(id)arg2 columnCountIsConstant:(_Bool *)arg3;	// IMP=0x0010000000476b64
- (struct _NSRange)oi_rangeOfCharactersFromSet:(id)arg1 index:(int)arg2;	// IMP=0x00100000000f3185
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;	// IMP=0x00100000000ac249
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2;	// IMP=0x00100000000ac231
@end

