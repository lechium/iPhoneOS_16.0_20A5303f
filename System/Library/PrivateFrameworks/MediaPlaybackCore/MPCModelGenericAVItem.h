//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaPlayer/MPAVItem.h>

@class ICAVAssetDownloadURLSession, ICContentKeySession, ICMusicSubscriptionLeaseSession, ICMusicSubscriptionLeaseStatus, ICStoreRequestContext, ICURLRequest, MPCAudioAssetTypeSelection, MPCModelGenericAVItemTimedMetadataRequest, MPCModelGenericAVItemTimedMetadataResponse, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackEngineEventStream, MPCPlaybackRequestEnvironment, MPCPlayerAudioFormat, MPCPlayerAudioRoute, MPCSuzeLeaseSession, MPGaplessInfo, MPMediaLibrary, MPModelGenericObject, MPPropertySet, MPSubscriptionStatusPlaybackInformation, NSArray, NSData, NSDictionary, NSNumber, NSObject, NSOperationQueue, NSString, NSURL;
@protocol MPCModelPlaybackAssetCacheProviding, MPCReportingIdentityPropertiesLoading, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MPCModelGenericAVItem : MPAVItem
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 112 = 0x70
    _Bool _allowsAirPlayFromCloud;	// 120 = 0x78
    NSNumber *_bookmarkTime;	// 128 = 0x80
    _Bool _hasLoadedSubscriptionLeaseSession;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_subscriptionLeaseSessionLoadQueue;	// 144 = 0x90
    ICMusicSubscriptionLeaseSession *_subscriptionLeaseSession;	// 152 = 0x98
    _Bool _hasLoadedSubscriptionPlaybackInformation;	// 160 = 0xa0
    MPSubscriptionStatusPlaybackInformation *_subscriptionPlaybackInformation;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_subscriptionPlaybackInformationLoadQueue;	// 176 = 0xb0
    _Bool _shouldAutomaticallyRefreshSubscriptionLease;	// 184 = 0xb8
    _Bool _isSubscriptionPolicyContent;	// 185 = 0xb9
    _Bool _lastPreparedForNonZeroRate;	// 186 = 0xba
    long long _subscriptionLeaseRequestCount;	// 192 = 0xc0
    _Bool _didDeferPreventionStatusUpdate;	// 200 = 0xc8
    MPCSuzeLeaseSession *_suzeLeaseSession;	// 208 = 0xd0
    _Bool _isAutomaticallyRefreshingSuzeLeaseSession;	// 216 = 0xd8
    CDUnknownBlockType _firstBecomeActivePlayerItemBlock;	// 224 = 0xe0
    NSArray *_currentGlobalTimedMetadataGroups;	// 232 = 0xe8
    MPModelGenericObject *_flattenedGenericObject;	// 240 = 0xf0
    MPModelGenericObject *_flattenedMetadataGenericObject;	// 248 = 0xf8
    MPModelGenericObject *_metadataGenericObject;	// 256 = 0x100
    MPPropertySet *_itemProperties;	// 264 = 0x108
    id <MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;	// 272 = 0x110
    MPCModelGenericAVItemTimedMetadataRequest *_timedMetadataRequest;	// 280 = 0x118
    MPCModelGenericAVItemTimedMetadataResponse *_timedMetadataResponse;	// 288 = 0x120
    NSOperationQueue *_timedMetadataOperationQueue;	// 296 = 0x128
    _Bool _isMusicCellularStreamingAllowed;	// 304 = 0x130
    _Bool _didReceiveHLSTimedMetadata;	// 305 = 0x131
    NSString *_hlsStreamIdentifier;	// 312 = 0x138
    _Bool _isiTunesStoreStream;	// 320 = 0x140
    ICStoreRequestContext *_storeRequestContext;	// 328 = 0x148
    NSURL *_streamingKeyCertificateURL;	// 336 = 0x150
    NSURL *_streamingKeyServerURL;	// 344 = 0x158
    NSString *_rtcReportingServiceIdentifier;	// 352 = 0x160
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 360 = 0x168
    ICContentKeySession *_contentKeySession;	// 368 = 0x170
    ICAVAssetDownloadURLSession *_hlsDownloadURLSession;	// 376 = 0x178
    ICURLRequest *_hlsDownloadURLRequest;	// 384 = 0x180
    struct os_unfair_lock_s _genericObjectLock;	// 392 = 0x188
    _Bool _mediaItemNeedsLoading;	// 396 = 0x18c
    NSURL *_tempFileURLToCleanup;	// 400 = 0x190
    _Bool _radioPlayback;	// 408 = 0x198
    _Bool _radioStreamPlayback;	// 409 = 0x199
    _Bool _subscriptionRequired;	// 410 = 0x19a
    _Bool _hlsAsset;	// 411 = 0x19b
    _Bool _downloadedAsset;	// 412 = 0x19c
    long long _leasePlaybackPreventionState;	// 416 = 0x1a0
    ICMusicSubscriptionLeaseStatus *_leaseStatus;	// 424 = 0x1a8
    NSDictionary *_audioFormatsDictionary;	// 432 = 0x1b0
    long long _preferredAudioAssetType;	// 440 = 0x1b8
    MPCAudioAssetTypeSelection *_preferredAudioAssetTypeSelection;	// 448 = 0x1c0
    id <MPCModelPlaybackAssetCacheProviding> _assetCacheProvider;	// 456 = 0x1c8
    NSString *_assetSourceStoreFrontID;	// 464 = 0x1d0
    long long _equivalencySourceAdamID;	// 472 = 0x1d8
    MPModelGenericObject *_genericObject;	// 480 = 0x1e0
    NSData *_jingleTimedMetadata;	// 488 = 0x1e8
    MPMediaLibrary *_mediaLibrary;	// 496 = 0x1f0
    NSNumber *_siriInitiated;	// 504 = 0x1f8
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 512 = 0x200
    long long _stationItemLikedState;	// 520 = 0x208
    NSDictionary *_trackInfo;	// 528 = 0x210
    NSString *_playerID;	// 536 = 0x218
    MPCPlaybackEngineEventStream *_eventStream;	// 544 = 0x220
    MPCPlayerAudioFormat *_preferredFormat;	// 552 = 0x228
    MPCPlayerAudioFormat *_activeFormat;	// 560 = 0x230
    long long _activeFormatJustification;	// 568 = 0x238
    NSArray *_alternateFormats;	// 576 = 0x240
    NSArray *_availableSortedFormats;	// 584 = 0x248
    MPCPlayerAudioRoute *_audioRoute;	// 592 = 0x250
    long long _loadedAudioAssetType;	// 600 = 0x258
}

+ (id)_utilitySerialQueue;	// IMP=0x001000000003cb4d
+ (_Bool)_prefersHighQualityVideoContentForNetworkType:(long long)arg1;	// IMP=0x001000000003ca0d
+ (_Bool)_prefersHighQualityAudioContentForNetworkType:(long long)arg1;	// IMP=0x001000000003c87a
+ (long long)_unwrapPlaybackError:(id)arg1;	// IMP=0x001000000003c799
- (void).cxx_destruct;	// IMP=0x0000000000033c8d
@property(readonly, nonatomic, getter=isDownloadedAsset) _Bool downloadedAsset; // @synthesize downloadedAsset=_downloadedAsset;
@property(readonly, nonatomic, getter=isHLSAsset) _Bool hlsAsset; // @synthesize hlsAsset=_hlsAsset;
@property(readonly, nonatomic) long long loadedAudioAssetType; // @synthesize loadedAudioAssetType=_loadedAudioAssetType;
@property(retain, nonatomic) MPCPlayerAudioRoute *audioRoute; // @synthesize audioRoute=_audioRoute;
@property(retain, nonatomic) NSArray *availableSortedFormats; // @synthesize availableSortedFormats=_availableSortedFormats;
@property(retain, nonatomic) NSArray *alternateFormats; // @synthesize alternateFormats=_alternateFormats;
@property(nonatomic) long long activeFormatJustification; // @synthesize activeFormatJustification=_activeFormatJustification;
@property(retain, nonatomic) MPCPlayerAudioFormat *activeFormat; // @synthesize activeFormat=_activeFormat;
@property(retain, nonatomic) MPCPlayerAudioFormat *preferredFormat; // @synthesize preferredFormat=_preferredFormat;
@property(nonatomic) __weak MPCPlaybackEngineEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(retain, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
@property(retain, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(nonatomic) long long stationItemLikedState; // @synthesize stationItemLikedState=_stationItemLikedState;
@property(readonly, copy, nonatomic) MPCPlaybackRequestEnvironment *playbackRequestEnvironment; // @synthesize playbackRequestEnvironment=_playbackRequestEnvironment;
@property(nonatomic, getter=isSubscriptionRequired) _Bool subscriptionRequired; // @synthesize subscriptionRequired=_subscriptionRequired;
@property(nonatomic, getter=isRadioStreamPlayback) _Bool radioStreamPlayback; // @synthesize radioStreamPlayback=_radioStreamPlayback;
@property(nonatomic, getter=isRadioPlayback) _Bool radioPlayback; // @synthesize radioPlayback=_radioPlayback;
@property(copy, nonatomic, getter=isSiriInitiated) NSNumber *siriInitiated; // @synthesize siriInitiated=_siriInitiated;
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary; // @synthesize mediaLibrary=_mediaLibrary;
@property(readonly, copy, nonatomic) NSData *jingleTimedMetadata; // @synthesize jingleTimedMetadata=_jingleTimedMetadata;
@property(retain, nonatomic) MPModelGenericObject *genericObject; // @synthesize genericObject=_genericObject;
@property(nonatomic) long long equivalencySourceAdamID; // @synthesize equivalencySourceAdamID=_equivalencySourceAdamID;
@property(copy, nonatomic) NSString *assetSourceStoreFrontID; // @synthesize assetSourceStoreFrontID=_assetSourceStoreFrontID;
@property(retain, nonatomic) id <MPCModelPlaybackAssetCacheProviding> assetCacheProvider; // @synthesize assetCacheProvider=_assetCacheProvider;
@property(readonly, nonatomic) MPCAudioAssetTypeSelection *preferredAudioAssetTypeSelection; // @synthesize preferredAudioAssetTypeSelection=_preferredAudioAssetTypeSelection;
@property(readonly, nonatomic) long long preferredAudioAssetType; // @synthesize preferredAudioAssetType=_preferredAudioAssetType;
@property(copy, nonatomic) NSDictionary *audioFormatsDictionary; // @synthesize audioFormatsDictionary=_audioFormatsDictionary;
- (id)leaseStatus;	// IMP=0x0000000000033975
- (long long)leasePlaybackPreventionState;	// IMP=0x0000000000033964
- (void)resumeContentKeySession;	// IMP=0x0000000000033940
- (void)pauseContentKeySession;	// IMP=0x000000000003391c
- (id)analyticsFormatType;	// IMP=0x00000000000336f7
- (id)analyticsContentType;	// IMP=0x00000000000336a3
- (void)_updatePreventionStatusWithLeaseSession:(id)arg1;	// IMP=0x00000000000332fb
- (void)_updateJingleTimedMetadata;	// IMP=0x0000000000032e35
- (void)_updateBookmarkTime:(double)arg1 isCheckpoint:(_Bool)arg2;	// IMP=0x0000000000032bf5
- (void)_updateAutomaticSubscriptionLeaseRefresh;	// IMP=0x0000000000032b9c
- (id)_storeUbiquitousIdentifier;	// IMP=0x0000000000032b4c
- (id)_stopTime;	// IMP=0x0000000000032afc
- (double)_startTime;	// IMP=0x0000000000032aac
- (id)_storeRequestContext;	// IMP=0x0000000000032a97
- (_Bool)_shouldRememberBookmarkTime;	// IMP=0x0000000000032a42
- (id)_rtcReportingServiceIdentifierWithAssetURL:(id)arg1;	// IMP=0x000000000003270e
- (id)_rtcReportingMediaIdentifierWithAssetLoadProperties:(id)arg1;	// IMP=0x0000000000032548
- (id)_radioStation;	// IMP=0x00000000000324dd
- (void)_postInvalidationNotifications;	// IMP=0x0000000000032403
- (id)_modelPlaybackPosition;	// IMP=0x0000000000032341
- (id)_isPrivateListeningEnabled;	// IMP=0x00000000000322e6
- (void)_invalidateContentItem;	// IMP=0x00000000000322c2
- (void)_updateHasBeenPlayedWithElapsedTime:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003208b
- (void)_handlePlaybackFinishedTime:(double)arg1 didFinishByHittingEnd:(_Bool)arg2;	// IMP=0x0000000000031532
- (void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000312ad
- (void)_getSubscriptionLeasePropertiesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030fbd
- (id)_bookmarkTime;	// IMP=0x0000000000030f21
- (unsigned long long)_audioFormatPreference;	// IMP=0x0000000000030ed6
- (void)_applyPreferredPeakBitRateToPlayerItem:(id)arg1 withItemType:(long long)arg2;	// IMP=0x000000000003098a
- (void)_applyLoudnessInfo;	// IMP=0x00000000000304df
- (_Bool)_allowsStreamingPlayback;	// IMP=0x00000000000304d7
- (_Bool)_allowsAssetCaching;	// IMP=0x00000000000303fd
- (CDStruct_c6d350ec)_timeoutValues;	// IMP=0x00000000000301ff
- (void)_timedMetadataResponseDidInvalidateNotification:(id)arg1;	// IMP=0x00000000000301b8
- (void)_suzeLeaseSessionRenewDidFailNotification:(id)arg1;	// IMP=0x000000000003009c
- (void)_subscriptionLeaseStatusDidChangeNotification:(id)arg1;	// IMP=0x000000000002fff2
- (void)_contentTasteControllerDidChangeNotification:(id)arg1;	// IMP=0x000000000002ff93
- (void)_ageVerificationStateDidChangeNotification:(id)arg1;	// IMP=0x000000000002ff34
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;	// IMP=0x000000000002fed5
- (void)environmentMonitorDidChangeNetworkType:(id)arg1;	// IMP=0x000000000002fe76
- (void)nowPlayingInfoCenter:(id)arg1 lyricsForContentItem:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002f99f
- (void)_reloadTimedMetadataRequest;	// IMP=0x000000000002f58e
- (void)metadataOutput:(id)arg1 didOutputTimedMetadataGroups:(id)arg2 fromPlayerItemTrack:(id)arg3;	// IMP=0x000000000002f3aa
- (_Bool)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2;	// IMP=0x000000000002f398
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;	// IMP=0x000000000002ef39
- (id)rtcReportingServiceIdentifier;	// IMP=0x000000000002eecc
@property(readonly, nonatomic) NSData *trackInfoData;
- (id)mpcReporting_trackInfo;	// IMP=0x000000000002ed2e
- (id)mpcReporting_siriInitiated;	// IMP=0x000000000002ed1c
- (id)mpcReporting_privateListeningEnabled;	// IMP=0x000000000002ed0a
- (_Bool)mpcReporting_shouldReportPlayEventsToStore;	// IMP=0x000000000002ecf8
- (_Bool)mpcReporting_shouldUseRelativeTimePositions;	// IMP=0x000000000002ece6
- (id)mpcReporting_requestingBundleVersion;	// IMP=0x000000000002ecc9
- (id)mpcReporting_requestingBundleIdentifier;	// IMP=0x000000000002ecac
- (id)mpcReporting_jingleTimedMetadata;	// IMP=0x000000000002ec9a
- (id)mpcReporting_identityPropertiesLoader;	// IMP=0x000000000002ec3e
- (unsigned long long)mpcReporting_itemType;	// IMP=0x000000000002ebf5
- (long long)mpcReporting_equivalencySourceAdamID;	// IMP=0x000000000002ebe3
- (CDUnknownBlockType)artworkCatalogBlock;	// IMP=0x000000000002eaa7
- (long long)_keyServerAdamID;	// IMP=0x000000000002e870
- (void)_didBecomeActivePlayerItem;	// IMP=0x000000000002e66d
- (void)_didResignActivePlayerItem;	// IMP=0x000000000002e3cf
- (void)_willResignActivePlayerItem;	// IMP=0x000000000002e2a8
- (void)_willBecomeActivePlayerItem;	// IMP=0x000000000002e22d
- (long long)_persistedLikedState;	// IMP=0x000000000002e133
- (void)_handleUpdatedLikedState:(long long)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002e003
- (void)_currentPlaybackRateDidChange:(float)arg1;	// IMP=0x000000000002dfc2
- (_Bool)usesSubscriptionLease;	// IMP=0x000000000002dee6
- (id)useListeningHistory;	// IMP=0x000000000002ddf1
- (id)storeFrontIdentifier;	// IMP=0x000000000002dd96
- (id)storeAccountID;	// IMP=0x000000000002dd0f
- (_Bool)shouldPreventPlayback;	// IMP=0x000000000002dcfa
- (void)setPlaybackStoppedTime:(double)arg1;	// IMP=0x000000000002da45
- (void)setPlaybackFinishedTime:(double)arg1;	// IMP=0x000000000002d9e3
- (void)setPlaybackCheckpointCurrentTime:(double)arg1;	// IMP=0x000000000002d996
- (void)resolvePlaybackError:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002d168
- (_Bool)requiresLoadedAssetForAirPlayProperties;	// IMP=0x000000000002d160
- (id)bookmarkTime;	// IMP=0x000000000002d14e
- (_Bool)allowsExternalPlayback;	// IMP=0x000000000002d146
- (_Bool)allowsAirPlayFromCloud;	// IMP=0x000000000002d136
- (_Bool)canUseLoadedAsset;	// IMP=0x000000000002d0c9
- (void)_updateAudioFormatInfoForContentItem:(id)arg1;	// IMP=0x000000000002c9aa
- (float)userRating;	// IMP=0x000000000002c912
- (_Bool)useEmbeddedChapterData;	// IMP=0x000000000002c90a
- (id)urlTimeMarkers;	// IMP=0x000000000002c902
- (long long)type;	// IMP=0x000000000002c82e
- (void)setupWithPlaybackInfo;	// IMP=0x000000000002c5b6
- (id)playbackInfo;	// IMP=0x000000000002c018
- (id)containerUniqueID;	// IMP=0x000000000002bf97
- (_Bool)hasTimeSyncedLyrics;	// IMP=0x000000000002bedc
- (_Bool)hasStoreLyrics;	// IMP=0x000000000002be21
- (id)libraryLyrics;	// IMP=0x000000000002bd5a
- (_Bool)supportsLikedState;	// IMP=0x000000000002bd52
- (long long)storeSubscriptionAdamID;	// IMP=0x000000000002bc53
- (long long)storeItemInt64ID;	// IMP=0x000000000002bae5
- (long long)stationProviderID;	// IMP=0x000000000002ba79
- (id)stationStringID;	// IMP=0x000000000002b9d8
- (id)stationName;	// IMP=0x000000000002b89e
- (id)stationHash;	// IMP=0x000000000002b7fd
- (long long)stationID;	// IMP=0x000000000002b768
@property(readonly, nonatomic) _Bool shouldReportPlayEventsToStore;
- (void)setRating:(float)arg1;	// IMP=0x000000000002b4fc
- (void)prepareForRate:(float)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b1d8
- (_Bool)prefersSeekOverSkip;	// IMP=0x000000000002b0c3
- (_Bool)shouldShowComposer;	// IMP=0x000000000002b037
- (id)playbackError;	// IMP=0x000000000002ac2f
- (void)notePlaybackFinishedByHittingEnd;	// IMP=0x000000000002abd4
- (long long)storePurchasedAdamID;	// IMP=0x000000000002ab35
- (unsigned long long)composerPersistentID;	// IMP=0x000000000002aa2c
- (unsigned long long)genrePersistentID;	// IMP=0x000000000002a923
- (unsigned long long)artistPersistentID;	// IMP=0x000000000002a7e0
- (unsigned long long)albumArtistPersistentID;	// IMP=0x000000000002a6b7
- (unsigned long long)albumPersistentID;	// IMP=0x000000000002a574
- (id)cloudAlbumID;	// IMP=0x000000000002a45e
- (id)cloudUniversalLibraryID;	// IMP=0x000000000002a3b3
- (id)personID;	// IMP=0x000000000002a308
- (unsigned long long)cloudID;	// IMP=0x000000000002a269
- (id)databaseID;	// IMP=0x000000000002a1be
- (unsigned long long)persistentID;	// IMP=0x000000000002a11f
- (unsigned long long)mediaType;	// IMP=0x000000000002a064
- (id)modelGenericObject;	// IMP=0x000000000002a020
- (_Bool)mediaItemNeedsLoading;	// IMP=0x000000000002a010
- (id)mediaItem;	// IMP=0x0000000000029f46
- (id)mainTitle;	// IMP=0x0000000000029e84
- (void)updatePlayerItemMetadata;	// IMP=0x0000000000029e7e
- (void)_emitAudioAssetTypeSelection:(id)arg1;	// IMP=0x0000000000029bcd
- (void)_emitAudioFormatChangeEvent;	// IMP=0x00000000000297c3
- (void)_updateActiveFormatJustification:(long long)arg1;	// IMP=0x0000000000029706
- (void)configureAVPlayerItemWithAudioFormat:(id)arg1 forceSpatial:(_Bool)arg2;	// IMP=0x000000000002966e
- (_Bool)updateActiveFormat:(id)arg1 justification:(long long)arg2;	// IMP=0x0000000000029440
- (_Bool)updatePreferredFormat:(id)arg1;	// IMP=0x00000000000292bd
- (_Bool)updateAudioFormatsDictionary:(id)arg1;	// IMP=0x0000000000029187
- (id)audioFormatForStableVariantID:(id)arg1;	// IMP=0x0000000000029104
- (id)currentPlayerAudioFormat;	// IMP=0x0000000000029077
- (_Bool)_linkAssetIfNeededAtURL:(id)arg1 toDestinationURL:(id)arg2 shareCacheURL:(id)arg3;	// IMP=0x0000000000028b68
- (void)_checkDownloadErrorAndValidityOfDownloadedHLSAsset:(id)arg1 downloadLocationURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000028835
- (void)_downloadHLSAsset:(id)arg1 destinationURL:(id)arg2 sharedCacheURL:(id)arg3 assetLoadProperties:(id)arg4 loadResult:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x0000000000028534
- (id)_createOrUpdateDatabaseEntry:(id)arg1 loadResult:(id)arg2 urlBag:(id)arg3 destinationURL:(id)arg4 purgeable:(_Bool)arg5;	// IMP=0x0000000000028179
- (id)_hlsDownloadOptionsDictionary:(id)arg1;	// IMP=0x0000000000027e57
- (void)_getHLSServerDataForLoadResults:(id)arg1 bag:(id)arg2 keyCertificateURL:(id *)arg3 keyServerURL:(id *)arg4 keyServerAdamID:(id *)arg5 keyServerProtocolType:(long long *)arg6;	// IMP=0x0000000000027b06
- (void)_downloadHLSAssetWhilePlaying:(id)arg1 assetLoadProperties:(id)arg2 assetLoadResult:(id)arg3 destinationURL:(id)arg4 sharedCacheURL:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x0000000000027790
- (void)_prepareAssetForHLSPlayback:(id)arg1 loadResult:(id)arg2 destinationURL:(id)arg3 storeRequestContext:(id)arg4 urlBag:(id)arg5 identityProperties:(id)arg6;	// IMP=0x0000000000026e41
- (_Bool)_isAssetLoadResultValidForPlayback:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000026ba5
- (id)_decorateAssetLoadResult:(id)arg1 withURLBag:(id)arg2;	// IMP=0x000000000002671a
- (void)loadAssetAndPlayerItem;	// IMP=0x000000000001f370
- (float)_volumeAdjustment;	// IMP=0x000000000001f2d1
- (id)_loudnessInfoMediaKind;	// IMP=0x000000000001f1f8
@property(readonly, nonatomic) MPGaplessInfo *gaplessInfo;
- (id)_iTunesStorePurchasedMediaKind;	// IMP=0x000000000001f06e
- (long long)_suzeLeaseMediaType;	// IMP=0x000000000001efb6
- (id)_assetLoadPropertiesWithUserIdentityProperties:(id)arg1 delegatedUserIdentityProperties:(id)arg2 subscriptionPlaybackInfo:(id)arg3;	// IMP=0x000000000001e808
- (_Bool)_shouldPreloadSubscriptionStatus;	// IMP=0x000000000001e757
@property(readonly, nonatomic) _Bool hasVideo;
- (_Bool)_prefersHighQualityContent;	// IMP=0x000000000001e4be
- (id)_delegatedUserIdentityProperties:(id *)arg1;	// IMP=0x000000000001e2f1
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;	// IMP=0x000000000001e1ff
- (_Bool)isStreamable;	// IMP=0x000000000001e1f7
- (_Bool)isRadioItem;	// IMP=0x000000000001e1e5
- (_Bool)isLikedStateEnabled;	// IMP=0x000000000001e1dd
- (id)explicitBadge;	// IMP=0x000000000001e0da
- (_Bool)isExplicitTrack;	// IMP=0x000000000001dff0
- (_Bool)isAssetURLValid;	// IMP=0x000000000001dfe8
- (_Bool)isAlwaysLive;	// IMP=0x000000000001de56
- (id)genre;	// IMP=0x000000000001dd8f
- (id)externalContentIdentifier;	// IMP=0x000000000001dcc5
- (double)durationFromExternalMetadata;	// IMP=0x000000000001dc08
- (id)copyrightText;	// IMP=0x000000000001db6e
- (id)chapterTimeMarkers;	// IMP=0x000000000001db66
- (id)composer;	// IMP=0x000000000001da9f
- (id)artworkTimeMarkers;	// IMP=0x000000000001da97
- (_Bool)isArtistUploadedContent;	// IMP=0x000000000001da0b
- (id)artist;	// IMP=0x000000000001d8f8
- (void)applyVolumeNormalizationWithSoundCheckEnabled:(_Bool)arg1;	// IMP=0x000000000001d7dd
- (_Bool)allowsEQ;	// IMP=0x000000000001d7d5
- (unsigned long long)albumTrackCount;	// IMP=0x000000000001d740
- (unsigned long long)albumTrackNumber;	// IMP=0x000000000001d6ab
- (long long)artistStoreID;	// IMP=0x000000000001d50d
- (long long)albumStoreID;	// IMP=0x000000000001d36f
- (id)albumArtist;	// IMP=0x000000000001d225
- (long long)albumYear;	// IMP=0x000000000001d16a
- (id)album;	// IMP=0x000000000001d0a3
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000000001ca28
- (id)initWithGenericObject:(id)arg1 itemProperties:(id)arg2 playbackRequestEnvironment:(id)arg3 identityPropertySet:(id)arg4;	// IMP=0x000000000001c732
@property(readonly, nonatomic) long long rtcReportingAssetType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

