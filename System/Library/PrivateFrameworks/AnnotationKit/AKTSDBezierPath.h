//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface AKTSDBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x00100000000442c9
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x00100000000442bb
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x00100000000442ae
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x00100000000442a1
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x0010000000044294
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000044287
+ (unsigned long long)defaultWindingRule;	// IMP=0x001000000004427a
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x001000000004426d
+ (double)defaultFlatness;	// IMP=0x001000000004425f
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000044251
+ (double)defaultMiterLimit;	// IMP=0x0010000000044243
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000044235
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x001000000004419a
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000044174
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x0010000000043fba
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x0010000000043f94
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x0010000000043e0f
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0010000000043e07
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000043db2
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0010000000043d5d
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0010000000043ce4
+ (id)bezierPath;	// IMP=0x0010000000043cd2
+ (void)initialize;	// IMP=0x0010000000043c92
+ (double)lineWidth;	// IMP=0x0010000000048648
+ (void)setLineWidth:(double)arg1;	// IMP=0x0010000000048636
+ (unsigned long long)lineJoinStyle;	// IMP=0x0010000000048624
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000048612
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000048600
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x00100000000485ee
+ (unsigned long long)windingRule;	// IMP=0x00100000000485dc
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00100000000485ca
+ (double)flatness;	// IMP=0x00100000000485b8
+ (void)setFlatness:(double)arg1;	// IMP=0x00100000000485a6
+ (double)miterLimit;	// IMP=0x0010000000048594
+ (void)setMiterLimit:(double)arg1;	// IMP=0x0010000000048582
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000047df4
- (const char *)cString;	// IMP=0x0000000000047bcc
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000004734e
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000046d14
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x0000000000046c90
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x00000000000468d1
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x00000000000468ba
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x00000000000465c6
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x00000000000464a5
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x00000000000462d0
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x0000000000046225
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000046114
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000045f7c
- (void)_appendToPath:(id)arg1;	// IMP=0x0000000000045e54
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x0000000000045d64
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000045c6e
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000045b93
- (unsigned long long)elementAtIndex:(long long)arg1;	// IMP=0x0000000000045b7f
- (long long)elementCount;	// IMP=0x0000000000045b75
- (double)lengthToElement:(long long)arg1;	// IMP=0x0000000000045b28
- (double)lengthOfElement:(long long)arg1;	// IMP=0x0000000000045af3
- (double)length;	// IMP=0x0000000000045ac5
- (void)calculateLengths;	// IMP=0x00000000000459f6
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x0000000000045958
- (_Bool)isClockwise;	// IMP=0x0000000000045735
- (_Bool)isFlat;	// IMP=0x00000000000456a9
- (struct CGRect)bounds;	// IMP=0x000000000004563a
- (struct CGRect)controlPointBounds;	// IMP=0x00000000000454d6
- (struct CGPoint)currentPoint;	// IMP=0x0000000000045476
- (_Bool)isEmpty;	// IMP=0x0000000000045468
- (struct CGPath *)CGPath;	// IMP=0x0000000000045444
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000045364
- (id)bezierPathByReversingPath;	// IMP=0x000000000004518f
- (id)_copyFlattenedPath;	// IMP=0x000000000004515a
- (id)bezierPathByFlatteningPath;	// IMP=0x0000000000045100
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000044fc1
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x0000000000044d52
- (void)addClip;	// IMP=0x0000000000044cef
- (void)fill;	// IMP=0x0000000000044c8c
- (void)stroke;	// IMP=0x0000000000044ae0
- (void)_doPath;	// IMP=0x00000000000449c5
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x0000000000044970
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000000448a8
- (void)setFlatness:(double)arg1;	// IMP=0x000000000004489d
- (double)flatness;	// IMP=0x0000000000044892
- (void)setMiterLimit:(double)arg1;	// IMP=0x0000000000044887
- (double)miterLimit;	// IMP=0x000000000004487c
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0000000000044860
- (unsigned long long)windingRule;	// IMP=0x000000000004484e
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0000000000044832
- (unsigned long long)lineJoinStyle;	// IMP=0x0000000000044820
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0000000000044806
- (unsigned long long)lineCapStyle;	// IMP=0x00000000000447f4
- (void)setLineWidth:(double)arg1;	// IMP=0x00000000000447e9
- (double)lineWidth;	// IMP=0x00000000000447de
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x000000000004475c
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000044712
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000000446c8
- (void)removeAllPoints;	// IMP=0x0000000000044667
- (void)closePath;	// IMP=0x0000000000044655
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000000445bc
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x000000000004454e
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x000000000004453c
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000004442d
- (void)dealloc;	// IMP=0x00000000000443bd
- (id)init;	// IMP=0x00000000000442d7
- (void)_deviceClosePath;	// IMP=0x00000000000484e3
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000048357
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x000000000004831f
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000048292
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x00000000000480a7
- (id)description;	// IMP=0x000000000004865a
- (id)chisel;	// IMP=0x00000000000e34dc
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;	// IMP=0x00000000000e2cfd
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;	// IMP=0x00000000000e2c66
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;	// IMP=0x00000000000e2bdb
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;	// IMP=0x00000000000e1463
- (float)curvatureAt:(float)arg1;	// IMP=0x00000000000e13e4
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e1372
- (struct CGPoint)myGradientAt:(float)arg1;	// IMP=0x00000000000e12d8
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e1135
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e1066
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;	// IMP=0x00000000000e0ecb
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;	// IMP=0x00000000000e0da9
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;	// IMP=0x00000000000e0c77
- (struct CGPoint)gradientAt:(float)arg1;	// IMP=0x00000000000e0c28
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e0bd8
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e09f0
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e086c
- (id)pressure;	// IMP=0x00000000000e0864
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e028b
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e0033
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;	// IMP=0x00000000000dff50
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;	// IMP=0x00000000000df95c
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;	// IMP=0x00000000000df820
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;	// IMP=0x00000000000df6dd
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;	// IMP=0x00000000000df6c2
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;	// IMP=0x00000000000dede1
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;	// IMP=0x00000000000ded3e

@end

