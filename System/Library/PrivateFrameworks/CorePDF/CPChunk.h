//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x0060000000005b5b
- (double)rotationAngle;	// IMP=0x000000000000731f
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x000000000000730f
- (unsigned int)chunkPosition;	// IMP=0x00000000000072ff
- (void)translateObjectYBy:(double)arg1;	// IMP=0x00000000000072e6
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x000000000000717e
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x000000000000716e
- (_Bool)shrinksWithChildren;	// IMP=0x000000000000715e
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x00000000000070f4
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x000000000000706d
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x0000000000006f90
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x0000000000006f0e
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x0000000000006e70
- (int)clusterLevelHint;	// IMP=0x0000000000006e68
- (struct CGSize)advance;	// IMP=0x0000000000006e4f
- (float)fontSize;	// IMP=0x0000000000006e46
- (double)bottom;	// IMP=0x0000000000006dfd
- (double)top;	// IMP=0x0000000000006db4
- (double)center;	// IMP=0x0000000000006d5c
- (double)right;	// IMP=0x0000000000006d13
- (double)left;	// IMP=0x0000000000006cca
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x0000000000006c82
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x0000000000006bf2
- (long long)compareYDescending:(id)arg1;	// IMP=0x0000000000006b9a
- (long long)compareTopDescending:(id)arg1;	// IMP=0x0000000000006b42
- (long long)compareYBounds:(id)arg1;	// IMP=0x0000000000006a87
- (long long)compareY:(id)arg1;	// IMP=0x0000000000006a18
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x0000000000006922
- (long long)compareXBounds:(id)arg1;	// IMP=0x00000000000068a6
- (long long)compareZDescending:(id)arg1;	// IMP=0x0000000000006858
- (long long)compareZ:(id)arg1;	// IMP=0x000000000000680e
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x00000000000067c4
- (long long)compareX:(id)arg1;	// IMP=0x00000000000067b2
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x000000000000675a
- (long long)compareAnchorX:(id)arg1;	// IMP=0x0000000000006748
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x00000000000066e9
- (long long)compareAnchorY:(id)arg1;	// IMP=0x000000000000668a
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x000000000000666a
- (long long)insertionOrder;	// IMP=0x0000000000006659
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x0000000000006634
- (void)resizeWith:(id)arg1;	// IMP=0x0000000000006521
- (void)fitBoundsToChildren;	// IMP=0x00000000000063b2
- (float)referenceAdvanceWidth;	// IMP=0x0000000000006372
- (float)absoluteGapTo:(id)arg1;	// IMP=0x00000000000062cf
- (float)advanceDeltaAfterSpace;	// IMP=0x00000000000062c6
- (float)clusterGapTo:(id)arg1;	// IMP=0x000000000000624f
- (struct CGPoint)anchor;	// IMP=0x0000000000006237
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x00000000000061d7
- (id)describeBounds;	// IMP=0x00000000000061ab
- (struct CGRect)renderedBounds;	// IMP=0x000000000000602a
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x0000000000005fa2
- (struct CGRect)bounds;	// IMP=0x0000000000005f57
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000005f2e
- (void)setChildren:(id)arg1;	// IMP=0x0000000000005e67
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x0000000000005dff
- (id)newTakeChildren;	// IMP=0x0000000000005d96
- (void)removeAll;	// IMP=0x0000000000005d2d
- (void)remove:(id)arg1;	// IMP=0x0000000000005ce4
- (void)addChildrenOf:(id)arg1;	// IMP=0x0000000000005ca3
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x0000000000005c33
- (void)add:(id)arg1;	// IMP=0x0000000000005bc3
- (float)opticalLeading;	// IMP=0x0000000000005bba
- (void)accept:(id)arg1;	// IMP=0x0000000000005b40
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x0000000000005a98
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000005a69
- (id)init;	// IMP=0x0000000000005a0c

@end

