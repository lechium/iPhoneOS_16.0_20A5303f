//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIKeyboardLayout.h"

@class CADisplayLink, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, TUIKeyplaneView, UIButton, UIDelayedAction, UIGestureKeyboardIntroduction, UIImageView, UIKBBackgroundView, UIKBKeyViewAnimator, UIKBKeyplaneView, UIKBRenderConfig, UIKBResizingKeyplaneCoordinator, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIKeyboardPathEffectView, UIKeyboardPinchGestureRecognizer, UIKeyboardSplitTransitionView, UISelectionFeedbackGenerator, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;
@protocol UIKeyboardKeyplaneTransitionDelegate, UIKeyboardLayoutStarDelegate, UITextCursorAssertion;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;	// 248 = 0xf8
    UIKBTree *_keyplane;	// 256 = 0x100
    NSString *_keyboardName;	// 264 = 0x108
    NSString *_keyplaneName;	// 272 = 0x110
    long long _appearance;	// 280 = 0x118
    UIKBTree *_activeKey;	// 288 = 0x120
    UIKBTree *_inactiveLanguageIndicator;	// 296 = 0x128
    UIKBKeyplaneView *_keyplaneView;	// 304 = 0x130
    UIKBBackgroundView *_backgroundView;	// 312 = 0x138
    UIKBKeyViewAnimator *_keyViewAnimator;	// 320 = 0x140
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 328 = 0x148
    double _prevTouchUpTime;	// 336 = 0x150
    double _prevTouchUpFinishedTime;	// 344 = 0x158
    double _prevTouchDownTime;	// 352 = 0x160
    unsigned long long _prevUpActions;	// 360 = 0x168
    NSMutableDictionary *_keyboards;	// 368 = 0x170
    NSMutableDictionary *_allKeyplaneViews;	// 376 = 0x178
    NSMutableSet *_allKeyplaneKeycaps;	// 384 = 0x180
    NSMutableSet *_validInputStrings;	// 392 = 0x188
    NSString *_localizedInputKey;	// 400 = 0x190
    int _preferredTrackingChangeCount;	// 408 = 0x198
    int _shiftTrackingChangeCount;	// 412 = 0x19c
    NSMutableSet *_accentInfo;	// 416 = 0x1a0
    NSMutableSet *_hasAccents;	// 424 = 0x1a8
    id _spaceTarget;	// 432 = 0x1b0
    SEL _spaceAction;	// 440 = 0x1b8
    SEL _spaceLongAction;	// 448 = 0x1c0
    id _returnTarget;	// 456 = 0x1c8
    SEL _returnAction;	// 464 = 0x1d0
    SEL _returnLongAction;	// 472 = 0x1d8
    id _deleteTarget;	// 480 = 0x1e0
    SEL _deleteAction;	// 488 = 0x1e8
    SEL _deleteLongAction;	// 496 = 0x1f0
    _Bool _shift;	// 504 = 0x1f8
    _Bool _autoshift;	// 505 = 0x1f9
    _Bool _settingShift;	// 506 = 0x1fa
    _Bool _holdingShift;	// 507 = 0x1fb
    _Bool _didLongPress;	// 508 = 0x1fc
    NSString *_preTouchKeyplaneName;	// 512 = 0x200
    _Bool _revertKeyplaneAfterTouch;	// 520 = 0x208
    _Bool _wasShifted;	// 521 = 0x209
    _Bool _swipeDetected;	// 522 = 0x20a
    _Bool _showIntlKey;	// 523 = 0x20b
    _Bool _showDictationKey;	// 524 = 0x20c
    _Bool _suppressDeactivateKeys;	// 525 = 0x20d
    _Bool _suppressShiftKeyplaneAnimation;	// 526 = 0x20e
    _Bool _isTrackpadMode;	// 527 = 0x20f
    _Bool _shiftLockReady;	// 528 = 0x210
    double _shiftLockFirstTapTime;	// 536 = 0x218
    UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 544 = 0x220
    UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 552 = 0x228
    UISwipeGestureRecognizer *_upSwipeRecognizer;	// 560 = 0x230
    UIKeyboardPinchGestureRecognizer *_pinchGestureRecognizer;	// 568 = 0x238
    UIKeyboardSplitTransitionView *_transitionView;	// 576 = 0x240
    double _initialSplitProgress;	// 584 = 0x248
    double _finalSplitProgress;	// 592 = 0x250
    double _autoSplitLastUpdate;	// 600 = 0x258
    double _autoSplitElapsedTime;	// 608 = 0x260
    CADisplayLink *_displayLink;	// 616 = 0x268
    _Bool _ghostKeysEnabled;	// 624 = 0x270
    UIDelayedAction *_delayedCentroidUpdate;	// 632 = 0x278
    _Bool _isRebuilding;	// 640 = 0x280
    long long _currentHandBias;	// 648 = 0x288
    NSString *_layoutTag;	// 656 = 0x290
    _Bool _preRotateShift;	// 664 = 0x298
    NSString *_preRotateKeyplaneName;	// 672 = 0x2a0
    _Bool _preRotateTrackpadMode;	// 680 = 0x2a8
    UIDelayedAction *_multitapAction;	// 688 = 0x2b0
    _Bool _unshiftAfterMultitap;	// 696 = 0x2b8
    int _multitapCount;	// 700 = 0x2bc
    UIKBTree *_multitapKey;	// 704 = 0x2c0
    UIView *_flickPopupView;	// 712 = 0x2c8
    NSMutableDictionary *_compositeImages;	// 720 = 0x2d0
    NSTimer *_flickPopuptimer;	// 728 = 0x2d8
    id _touchInfo;	// 736 = 0x2e0
    UIView *_dimKeyboardImageView;	// 744 = 0x2e8
    _Bool _keyboardImageViewIsDim;	// 752 = 0x2f0
    _Bool _isOutOfBounds;	// 753 = 0x2f1
    _Bool _inDealloc;	// 754 = 0x2f2
    NSMutableSet *_keysUnderIndicator;	// 760 = 0x2f8
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;	// 768 = 0x300
    UIKBRenderConfig *_passcodeRenderConfig;	// 776 = 0x308
    long long _setKeyplaneViewCount;	// 784 = 0x310
    _Bool _inputTraitsPreventInitialReuse;	// 792 = 0x318
    _Bool _settingFloat;	// 793 = 0x319
    NSMutableSet *_leftKeySet;	// 800 = 0x320
    NSMutableSet *_rightKeySet;	// 808 = 0x328
    struct CGPoint _leftDriftOffset;	// 816 = 0x330
    struct CGPoint _rightDriftOffset;	// 832 = 0x340
    NSMutableArray *_leftSideReachability;	// 848 = 0x350
    NSMutableArray *_rightSideReachability;	// 856 = 0x358
    NSNumber *_homeRowHint;	// 864 = 0x360
    double _touchDownTimeSpan;	// 872 = 0x368
    NSDate *_prevTouchMoreKeyTime;	// 880 = 0x370
    NSDate *_prevProgressiveCandidateRequestTime;	// 888 = 0x378
    NSTimer *_progressiveCandidateUpdateTimer;	// 896 = 0x380
    NSString *_lastInputMode;	// 904 = 0x388
    _Bool _pendingDictationReload;	// 912 = 0x390
    _Bool _hasPeekedGestureKey;	// 913 = 0x391
    _Bool _lastInputIsGestureKey;	// 914 = 0x392
    UIGestureKeyboardIntroduction *_gestureKeyboardIntroduction;	// 920 = 0x398
    _Bool _dictationUsingServerManualEndpointing;	// 928 = 0x3a0
    _Bool _splitTransitionNeedsRebuild;	// 929 = 0x3a1
    NSMutableDictionary *_extendedTouchInfoMap;	// 936 = 0x3a8
    UIKBResizingKeyplaneCoordinator *_resizingKeyplaneCoordinator;	// 944 = 0x3b0
    UIButton *_biasEscapeButton;	// 952 = 0x3b8
    NSLayoutConstraint *_biasEscapeButtonLeftConstraint;	// 960 = 0x3c0
    NSLayoutConstraint *_biasEscapeButtonRightConstraint;	// 968 = 0x3c8
    NSMutableSet *_keyplaneTransformations;	// 976 = 0x3d0
    UIImageView *_pathEffectGlowView;	// 984 = 0x3d8
    UIKeyboardPathEffectView *_pathEffectView;	// 992 = 0x3e0
    NSArray *_pathEffectViewConstraints;	// 1000 = 0x3e8
    _Bool _isContinuousPathUnderway;	// 1008 = 0x3f0
    UIView *_keyplaneTransformationAreaView;	// 1016 = 0x3f8
    _Bool _externalDictationAndInternationalKeys;	// 1024 = 0x400
    _Bool _showsPunctuationKeysOnPrimaryKeyplane;	// 1025 = 0x401
    TUIKeyplaneView *_liveKeyplaneView;	// 1032 = 0x408
    _Bool _layoutSupportsCrescendo;	// 1040 = 0x410
    NSArray *_liveKeyplaneConstraints;	// 1048 = 0x418
    _Bool _preventPaddlesForPointerTouches;	// 1056 = 0x420
    _Bool _muteNextKeyClickSound;	// 1057 = 0x421
    int playKeyClickSoundOn;	// 1060 = 0x424
    UIKBRenderConfig *_renderConfig;	// 1064 = 0x428
    UIView *_modalDisplayView;	// 1072 = 0x430
    UISelectionFeedbackGenerator *_slideBehaviour;	// 1080 = 0x438
    id <UIKeyboardLayoutStarDelegate> _delegate;	// 1088 = 0x440
    double _lastTwoFingerTapTimestamp;	// 1096 = 0x448
    id <UITextCursorAssertion> _blinkAssertion;	// 1104 = 0x450
    id <UIKeyboardKeyplaneTransitionDelegate> _splitKeyplaneTransitionDelegate;	// 1112 = 0x458
}

+ (id)sharedPunctuationCharacterSet;	// IMP=0x0010000000a9ae8b
+ (id)sharedRivenKeyplaneGenerator;	// IMP=0x0010000000a78c80
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000a734af
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000a73261
+ (id)keyboardFromFactoryWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000a72f99
+ (void)accessibilitySensitivityChanged;	// IMP=0x0010000000a7269f
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x0010000000a72057
- (void).cxx_destruct;	// IMP=0x0000000000aad69a
@property(nonatomic) __weak id <UIKeyboardKeyplaneTransitionDelegate> splitKeyplaneTransitionDelegate; // @synthesize splitKeyplaneTransitionDelegate=_splitKeyplaneTransitionDelegate;
@property(retain, nonatomic) id <UITextCursorAssertion> blinkAssertion; // @synthesize blinkAssertion=_blinkAssertion;
@property(nonatomic) _Bool muteNextKeyClickSound; // @synthesize muteNextKeyClickSound=_muteNextKeyClickSound;
@property(nonatomic) _Bool preventPaddlesForPointerTouches; // @synthesize preventPaddlesForPointerTouches=_preventPaddlesForPointerTouches;
@property(nonatomic) double lastTwoFingerTapTimestamp; // @synthesize lastTwoFingerTapTimestamp=_lastTwoFingerTapTimestamp;
@property(nonatomic) id <UIKeyboardLayoutStarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UISelectionFeedbackGenerator *slideBehaviour; // @synthesize slideBehaviour=_slideBehaviour;
@property(retain, nonatomic) UIView *modalDisplayView; // @synthesize modalDisplayView=_modalDisplayView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)typingStyleEstimator:(id)arg1 didChangeTypingStyleEstimate:(unsigned long long)arg2;	// IMP=0x0000000000aad2ed
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x0000000000aad1ae
- (_Bool)is10KeyRendering;	// IMP=0x0000000000aad136
- (_Bool)isEmojiKeyplane;	// IMP=0x0000000000aad0f1
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x0000000000aad070
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x0000000000aad02b
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x0000000000aacebd
- (id)currentKeyplaneView;	// IMP=0x0000000000aacea8
- (id)currentKeyplane;	// IMP=0x0000000000aace93
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x0000000000aacd6a
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x0000000000aaca00
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x0000000000aac86c
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;	// IMP=0x0000000000aac618
- (void)switchKeyplane:(id)arg1;	// IMP=0x0000000000aac54c
- (void)changeToKeyplane:(id)arg1;	// IMP=0x0000000000aac47e
- (id)keyplaneNamed:(id)arg1;	// IMP=0x0000000000aac3fb
- (id)keyplaneForKey:(id)arg1;	// IMP=0x0000000000aac378
- (id)baseKeyForString:(id)arg1;	// IMP=0x0000000000aabade
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x0000000000aaba04
- (_Bool)shouldRetestTouchDraggedFromKey:(id)arg1;	// IMP=0x0000000000aab9ef
- (void)didRotate;	// IMP=0x0000000000aab7f6
- (void)willRotate;	// IMP=0x0000000000aab6ed
- (void)updateKeyCentroids;	// IMP=0x0000000000aaad73
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;	// IMP=0x0000000000aaa6b1
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x0000000000aaa688
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x0000000000aaa64a
- (void)updateUndoKeyState;	// IMP=0x0000000000aaa570
- (void)setMultitapReverseKeyState;	// IMP=0x0000000000aaa3ce
- (void)updateShiftKeyState;	// IMP=0x0000000000aa9b5a
- (int)stateForShiftKey:(id)arg1;	// IMP=0x0000000000aa98bf
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000aa9898
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000aa9871
- (_Bool)isKanaPlane;	// IMP=0x0000000000aa9854
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000aa982d
- (_Bool)ignoresShiftState;	// IMP=0x0000000000aa9806
- (_Bool)usesAutoShift;	// IMP=0x0000000000aa97df
- (void)upActionShift;	// IMP=0x0000000000aa96c1
- (void)downActionShiftWithKey:(id)arg1;	// IMP=0x0000000000aa93a7
- (void)refreshDualStringKeys;	// IMP=0x0000000000aa9210
- (unsigned long long)upActionFlagsForKey:(id)arg1;	// IMP=0x0000000000aa8e5c
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000aa88cc
- (_Bool)keyHasAccentedVariants:(id)arg1;	// IMP=0x0000000000aa84c3
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x0000000000aa8315
- (id)activeTouchInfoForShift;	// IMP=0x0000000000aa80ea
- (id)touchInfoForKey:(id)arg1;	// IMP=0x0000000000aa7ef6
- (void)clearAllTouchInfo;	// IMP=0x0000000000aa7d9b
- (void)clearInfoForTouch:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000aa7cbc
- (void)clearInfoForTouch:(id)arg1;	// IMP=0x0000000000aa7ca8
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000aa79ac
- (id)generateInfoForTouch:(id)arg1;	// IMP=0x0000000000aa78d3
- (id)infoForTouch:(id)arg1;	// IMP=0x0000000000aa7871
- (id)infoForTouchUUID:(id)arg1;	// IMP=0x0000000000aa7838
- (void)swipeDetected:(id)arg1;	// IMP=0x0000000000aa7788
- (void)uninstallGestureRecognizers;	// IMP=0x0000000000aa75e9
- (void)installGestureRecognizers;	// IMP=0x0000000000aa7448
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000aa7421
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000aa7354
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000aa7223
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000aa70c4
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x0000000000aa6c0b
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000aa6bf4
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000aa5c2f
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000aa4b9d
- (_Bool)shouldSendStringForFlick:(id)arg1;	// IMP=0x0000000000aa49dd
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;	// IMP=0x0000000000aa48d5
- (void)presentModalDisplayForKey:(id)arg1;	// IMP=0x0000000000aa460d
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;	// IMP=0x0000000000aa1c61
- (void)_recordKeystrokeStatisticForKeyPress;	// IMP=0x0000000000aa1c04
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;	// IMP=0x0000000000aa1ae0
- (void)handleKeyboardMenusForTouch:(id)arg1;	// IMP=0x0000000000aa16fa
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000aa0a0a
- (_Bool)shouldRetestTouchUp:(id)arg1;	// IMP=0x0000000000aa04bd
- (void)handleDelayedCentroidUpdate;	// IMP=0x0000000000aa033d
- (void)cancelDelayedCentroidUpdate;	// IMP=0x0000000000aa0305
- (void)refreshGhostKeyState;	// IMP=0x0000000000aa023f
- (_Bool)performSpaceAction;	// IMP=0x0000000000aa01de
- (_Bool)performReturnAction;	// IMP=0x0000000000aa017d
- (void)resetPanAlternativesForEndedTouch:(id)arg1;	// IMP=0x0000000000aa00ea
- (void)updatePanAlternativesForTouchInfo:(id)arg1;	// IMP=0x0000000000a9fd31
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;	// IMP=0x0000000000a9f90e
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x0000000000a9f7d2
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;	// IMP=0x0000000000a9e207
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000a9cbf2
- (void)touchDragged:(id)arg1;	// IMP=0x0000000000a9cae3
- (_Bool)touchPassesDragThreshold:(id)arg1;	// IMP=0x0000000000a9c770
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x0000000000a9c669
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x0000000000a9c552
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000a9b7ac
- (_Bool)showGestureKeyboardIntroductionIfNeeded;	// IMP=0x0000000000a9b4e8
- (_Bool)shouldShowGestureKeyboardIntroduction;	// IMP=0x0000000000a9b3f5
- (id)synthesizeTouchUpEventForKey:(id)arg1;	// IMP=0x0000000000a9b2cc
- (id)keyplaneNameForRevertAfterTouch;	// IMP=0x0000000000a9b259
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000a9b02d
- (void)incrementPunctuationIfNeeded:(id)arg1;	// IMP=0x0000000000a9aef0
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;	// IMP=0x0000000000a9ae3b
- (void)touchDownWithKey:(id)arg1 withTouchInfo:(id)arg2 atPoint:(struct CGPoint)arg3 executionContext:(id)arg4;	// IMP=0x0000000000a9994c
- (void)_cleanUpBlinkAssertionIfNecessary;	// IMP=0x0000000000a998f2
- (_Bool)isKeyScriptSwitchKey:(id)arg1;	// IMP=0x0000000000a9986c
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000a997a7
- (void)playKeyClickSoundOnUpForKey:(id)arg1;	// IMP=0x0000000000a99795
- (void)playKeyClickSoundOnDownForKey:(id)arg1;	// IMP=0x0000000000a9974a
- (void)playKeyClickSoundForKey:(id)arg1;	// IMP=0x0000000000a99507
- (void)playKeyReleaseSoundForKey:(id)arg1;	// IMP=0x0000000000a993bd
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000a98cb4
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000a98416
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x0000000000a97e5d
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000a97e0d
- (_Bool)_pointAllowedInStaticHitBuffer:(struct CGPoint)arg1;	// IMP=0x0000000000a97b48
- (double)hitBuffer;	// IMP=0x0000000000a97ab7
- (struct CGRect)_paddedKeyUnionFrame;	// IMP=0x0000000000a977f8
- (_Bool)_handleTouchForEmojiInputView;	// IMP=0x0000000000a976e8
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000a975ff
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000a9744f
- (void)_autoSplit:(id)arg1;	// IMP=0x0000000000a9730d
- (void)setSplitProgress:(double)arg1;	// IMP=0x0000000000a97189
- (void)pinchHandler:(id)arg1;	// IMP=0x0000000000a970f3
- (void)pinchDidConsumeTouch:(id)arg1;	// IMP=0x0000000000a97050
- (void)didDetectPinchWithSeparation:(double)arg1;	// IMP=0x0000000000a96fab
- (_Bool)pinchCanBeginWithTouches:(id)arg1 andScale:(double)arg2;	// IMP=0x0000000000a96cb2
- (_Bool)pinchSplitGestureEnabled;	// IMP=0x0000000000a96c50
- (_Bool)pinchDetected;	// IMP=0x0000000000a96c33
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x0000000000a96c15
- (void)finishSplitTransitionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000a96918
- (void)finishSplitTransition;	// IMP=0x0000000000a96904
- (void)finishSplitWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000a964a5
- (void)showSplitTransitionView:(_Bool)arg1;	// IMP=0x0000000000a962ec
- (void)prepareForSplitTransition;	// IMP=0x0000000000a9618e
- (id)splitTransitionDelegate;	// IMP=0x0000000000a96088
- (id)hostViewForResizingKeyplane:(id)arg1;	// IMP=0x0000000000a9607f
- (void)resizeKeyplaneAndRedraw:(_Bool)arg1;	// IMP=0x0000000000a95b30
- (_Bool)keyplaneSupportsResizingGesture;	// IMP=0x0000000000a95af7
- (_Bool)keyplaneUsesResizingOffset;	// IMP=0x0000000000a959e1
- (void)_didTapBiasEscapeButton:(id)arg1;	// IMP=0x0000000000a95934
- (void)_setBiasEscapeButtonVisible:(_Bool)arg1;	// IMP=0x0000000000a9520a
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x0000000000a9512a
- (long long)currentHandBias;	// IMP=0x0000000000a9502a
- (double)biasedKeyboardWidthRatio;	// IMP=0x0000000000a94fab
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint)arg2;	// IMP=0x0000000000a949ee
- (void)resetHRRLayoutState;	// IMP=0x0000000000a949ad
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x0000000000a94958
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x0000000000a9493b
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000a9453b
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000a943db
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000a9427b
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000a94135
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000a9411b
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x0000000000a93eaa
- (id)handRestRecognizerGetHomeRowHint;	// IMP=0x0000000000a93ce4
- (id)getSortedKeysForDisplayRowHint:(int)arg1;	// IMP=0x0000000000a939f5
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000a93531
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000a932db
- (void)layoutSubviews;	// IMP=0x0000000000a9325a
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000a93229
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000a93221
- (void)fadeActivationIndicatorWithDuration:(double)arg1 withDelay:(double)arg2;	// IMP=0x0000000000a9321b
- (id)activationIndicatorView;	// IMP=0x0000000000a9134d
- (void)setHideKeysUnderIndicator:(_Bool)arg1;	// IMP=0x0000000000a9129e
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000a9122c
- (void)showPopupVariantsForKey:(id)arg1;	// IMP=0x0000000000a8f950
- (id)_variantsOfCurrencyKey:(id)arg1 language:(id)arg2;	// IMP=0x0000000000a8f6ad
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;	// IMP=0x0000000000a8f310
- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;	// IMP=0x0000000000a8f229
- (id)_keyplaneVariantsKeyForString:(id)arg1;	// IMP=0x0000000000a8f195
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x0000000000a8eecb
- (void)longPressAction;	// IMP=0x0000000000a8e05e
- (void)showMenu:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000a8df8f
- (_Bool)shouldShowInternationalMenuForKey:(id)arg1;	// IMP=0x0000000000a8df1d
- (_Bool)isLongPressedKey:(id)arg1;	// IMP=0x0000000000a8de70
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x0000000000a8dd00
- (void)restoreDefaultsForAllKeys;	// IMP=0x0000000000a8dcb6
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x0000000000a8dbee
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000a8dbb9
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000a8db84
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000a8dafb
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000a8d3f9
- (void)updateLayoutTags;	// IMP=0x0000000000a8cccb
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;	// IMP=0x0000000000a8cc14
- (void)touchMultitapTimer;	// IMP=0x0000000000a8cb34
- (void)cancelMultitapTimer;	// IMP=0x0000000000a8cafc
- (_Bool)isMultitapKey:(id)arg1;	// IMP=0x0000000000a8ca21
- (void)handleMultitapTimerFired;	// IMP=0x0000000000a8c8a1
- (void)multitapExpired;	// IMP=0x0000000000a8c84f
- (void)endMultitapForKey:(id)arg1;	// IMP=0x0000000000a8c82e
- (void)multitapInterrupted;	// IMP=0x0000000000a8c638
- (_Bool)canMultitap;	// IMP=0x0000000000a8c58d
- (id)multitapForwardKeys;	// IMP=0x0000000000a8c569
- (id)multitapCompleteKeys;	// IMP=0x0000000000a8c545
- (id)activeMultitapCompleteKey;	// IMP=0x0000000000a8c218
- (_Bool)hasAccentKey;	// IMP=0x0000000000a8c1d3
- (_Bool)hasCandidateKeys;	// IMP=0x0000000000a8c18e
- (id)candidateList;	// IMP=0x0000000000a8c0d4
- (void)logHandwritingData;	// IMP=0x0000000000a8c006
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x0000000000a8bf21
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;	// IMP=0x0000000000a8be3c
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 inputFlags:(int)arg3;	// IMP=0x0000000000a8b7e1
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 touchInfo:(id)arg3 inputFlags:(int)arg4;	// IMP=0x0000000000a8b70f
- (id)currentRepresentedStringForDualDisplayKey:(id)arg1;	// IMP=0x0000000000a8b578
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;	// IMP=0x0000000000a8b28b
- (_Bool)isDeadkeyInput:(id)arg1;	// IMP=0x0000000000a8b21e
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;	// IMP=0x0000000000a8a647
- (void)playKeyFeedbackIfNecessaryForTouchDownOnKey:(id)arg1 touchInfo:(id)arg2;	// IMP=0x0000000000a8a52b
- (id)unprocessedTouchEventsForTouchInfo:(id)arg1 touchStage:(int)arg2 forcedKeyCode:(int)arg3;	// IMP=0x0000000000a8a1cd
- (int)keycodeForKey:(id)arg1;	// IMP=0x0000000000a8a14e
- (_Bool)shouldIgnoreDistantKey;	// IMP=0x0000000000a8a0bb
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x0000000000a8a0a6
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x0000000000a89f9e
- (id)keyHitTest:(struct CGPoint)arg1;	// IMP=0x0000000000a89f17
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;	// IMP=0x0000000000a89df8
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x0000000000a89b0f
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000a89a8e
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;	// IMP=0x0000000000a8989e
- (id)keyViewHitTestForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000a89641
- (_Bool)shouldHitTestKey:(id)arg1;	// IMP=0x0000000000a895c8
- (void)finishSliderBehaviorFeedback;	// IMP=0x0000000000a8956e
- (void)provideSliderBehaviorFeedback;	// IMP=0x0000000000a89531
- (void)prepareSliderBehaviorFeedback;	// IMP=0x0000000000a8947e
- (_Bool)isTrackpadMode;	// IMP=0x0000000000a8946e
- (void)deactivateActiveKey;	// IMP=0x0000000000a893dc
- (void)deactivateActiveKeys;	// IMP=0x0000000000a89305
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x0000000000a89153
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;	// IMP=0x0000000000a890b5
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;	// IMP=0x0000000000a88b93
- (_Bool)shouldUseDefaultShiftStateFromLayout;	// IMP=0x0000000000a88b8b
- (void)setToInitialKeyplane;	// IMP=0x0000000000a88b0f
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000a88ae8
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000a88ac1
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5 reload:(_Bool)arg6;	// IMP=0x0000000000a88653
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5;	// IMP=0x0000000000a88637
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000a8862f
- (void)updateCachedKeyplaneKeycaps;	// IMP=0x0000000000a8837f
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(_Bool)arg2;	// IMP=0x0000000000a880f0
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;	// IMP=0x0000000000a88018
@property(readonly, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
- (Class)keyViewAnimatorClassForCurrentKeyboardLayout;	// IMP=0x0000000000a87f99
- (id)keyViewAnimator;	// IMP=0x0000000000a87f4c
- (void)updateState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000a87ee8
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000a87e76
- (int)stateForKey:(id)arg1;	// IMP=0x0000000000a87e07
- (id)viewForKey:(id)arg1;	// IMP=0x0000000000a87d8a
- (id)keyplaneFactory;	// IMP=0x0000000000a87d36
- (void)refreshForDictationAvailablityDidChange;	// IMP=0x0000000000a87c37
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000a8781a
- (id)inputModeToMergeCapsLockKey;	// IMP=0x0000000000a877a9
- (_Bool)canAddRomanSwitchKey;	// IMP=0x0000000000a87692
- (void)relayoutForWriteboardKey;	// IMP=0x0000000000a874c5
- (void)transitionToModalContinuousPathKeyplane;	// IMP=0x0000000000a87398
- (void)updateReturnKeysIfNeeded;	// IMP=0x0000000000a872cf
- (void)updateMoreAndInternationalKeys;	// IMP=0x0000000000a86902
- (void)_transformCarPlayIfNecessary;	// IMP=0x0000000000a86805
- (void)_transformFloatingKeyboardIfNecessary;	// IMP=0x0000000000a86718
- (void)_addResizeTransformationIfNecessary;	// IMP=0x0000000000a8662b
- (void)_addExtraControlKeysIfNecessary;	// IMP=0x0000000000a8653e
- (id)_currentKeyplaneTransformationContext;	// IMP=0x0000000000a8640e
- (_Bool)_shouldAttemptToAddSupplementaryControlKeys;	// IMP=0x0000000000a8625f
- (void)_updateSupplementaryKeys;	// IMP=0x0000000000a85e40
- (void)_swapGlobeAndMoreKeysIfNecessary;	// IMP=0x0000000000a858bc
- (void)mergeKeysIfNeeded;	// IMP=0x0000000000a857e9
- (id)keylistContainingKey:(id)arg1;	// IMP=0x0000000000a854b1
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000a85280
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x0000000000a84cde
- (unsigned long long)textEditingKeyMask;	// IMP=0x0000000000a84acd
- (int)stateForManipulationKey:(id)arg1;	// IMP=0x0000000000a84863
- (id)highlightedVariantListForStylingKey:(id)arg1;	// IMP=0x0000000000a84774
- (int)stateForStylingKey:(id)arg1;	// IMP=0x0000000000a84661
- (_Bool)supportStylingWithKey:(id)arg1;	// IMP=0x0000000000a8453b
- (int)stateForDictationKey:(id)arg1;	// IMP=0x0000000000a8437d
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000a84372
- (int)stateForMultitapForwardKey:(id)arg1;	// IMP=0x0000000000a84360
- (int)stateForMultitapReverseKey:(id)arg1;	// IMP=0x0000000000a84274
- (int)displayTypeHintForShiftKey;	// IMP=0x0000000000a841e4
- (int)displayTypeHintForMoreKey;	// IMP=0x0000000000a84132
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000a8398c
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000a83321
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;	// IMP=0x0000000000a8308c
- (_Bool)_stringContainsCurrencyCharacters:(id)arg1;	// IMP=0x0000000000a82eb6
- (void)_setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000a82af7
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000a82a24
- (void)updateTransitionWithFlags:(unsigned long long)arg1;	// IMP=0x0000000000a8299c
- (void)clearKeyAnnotationsIfNecessary;	// IMP=0x0000000000a825a2
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;	// IMP=0x0000000000a8225d
- (_Bool)useUndoForMessagesWriteboard;	// IMP=0x0000000000a821d3
- (_Bool)useDismissForMessagesWriteboard;	// IMP=0x0000000000a81d66
- (_Bool)ignoreWriteboard;	// IMP=0x0000000000a81ca4
- (void)annotateKeysWithDeveloperPunctuation;	// IMP=0x0000000000a816d3
- (void)updateStateForKey:(id)arg1;	// IMP=0x0000000000a81244
- (void)updateAllKeyStates;	// IMP=0x0000000000a80b0d
- (void)createLayoutFromName:(id)arg1;	// IMP=0x0000000000a7bc6a
- (_Bool)useCrescendoLayout;	// IMP=0x0000000000a7bc5a
- (void)reloadCurrentKeyplane;	// IMP=0x0000000000a7bbe6
- (_Bool)_allowPaddle;	// IMP=0x0000000000a7bb48
- (_Bool)_allowContinuousPathUI;	// IMP=0x0000000000a7b9ba
- (_Bool)shouldIgnoreContinuousPathRequirements;	// IMP=0x0000000000a7b8d6
- (_Bool)_allowStartingContinuousPathForTouchInfo:(id)arg1 alreadyActiveKeyExisting:(_Bool)arg2;	// IMP=0x0000000000a7b61f
- (unsigned long long)keyplaneShiftState;	// IMP=0x0000000000a7b521
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x0000000000a7b4c6
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x0000000000a7b424
- (struct CGSize)stretchFactor;	// IMP=0x0000000000a7b255
- (double)stretchFactorHeight;	// IMP=0x0000000000a7b0bb
- (_Bool)stretchKeyboardToFitKeyplane:(id)arg1;	// IMP=0x0000000000a7af8c
- (_Bool)stretchKeyboardToFit;	// IMP=0x0000000000a7af6f
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x0000000000a7ae40
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x0000000000a7a944
- (void)updateGlobeKeyDisplayString;	// IMP=0x0000000000a7a8ae
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x0000000000a7a89c
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x0000000000a7a3ff
- (_Bool)isResized;	// IMP=0x0000000000a7a3b3
- (_Bool)isResizing;	// IMP=0x0000000000a7a396
- (_Bool)supportsEmoji;	// IMP=0x0000000000a7a38e
- (_Bool)canReuseKeyplaneView;	// IMP=0x0000000000a7a179
- (_Bool)shouldShowDictationKey;	// IMP=0x0000000000a79e1e
- (void)updateBackgroundIfNeeded;	// IMP=0x0000000000a79bed
- (void)updateBackgroundCorners;	// IMP=0x0000000000a79b4b
- (_Bool)isHandwritingPlane;	// IMP=0x0000000000a79aa0
- (void)setTrackpadMode:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000a794e5
- (void)didEndTrackpadModeForServerSideDictation;	// IMP=0x0000000000a794cf
- (void)willBeginTrackpadModeForServerSideDictation;	// IMP=0x0000000000a794b6
- (void)didEndIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000a79469
- (_Bool)isDeveloperGestureKeybaord;	// IMP=0x0000000000a79413
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000a793fc
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000a793b1
- (void)willBeginIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000a79361
- (void)willBeginIndirectSelectionGesture;	// IMP=0x0000000000a7934a
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000a791fd
- (void)didTriggerDestructiveRenderConfigChange;	// IMP=0x0000000000a7918c
- (void)setRenderConfig:(id)arg1 updateKeyplane:(_Bool)arg2;	// IMP=0x0000000000a78eda
- (void)traitCollectionDidChange;	// IMP=0x0000000000a78cd5
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;	// IMP=0x0000000000a78bf0
- (struct CGImage *)renderedImageWithToken:(id)arg1;	// IMP=0x0000000000a7886a
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;	// IMP=0x0000000000a7877b
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;	// IMP=0x0000000000a7842b
- (void)rebuildSplitTransitionView;	// IMP=0x0000000000a780dd
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000a780d5
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(_Bool)arg2;	// IMP=0x0000000000a77dca
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000a77d92
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000a77213
- (void)updateLocalizedDisplayStringsForKeys:(id)arg1;	// IMP=0x0000000000a76683
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000a76546
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;	// IMP=0x0000000000a75cf9
- (void)nextToUseInputModeDidChange:(id)arg1;	// IMP=0x0000000000a75c1c
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000a75ba4
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;	// IMP=0x0000000000a7570f
- (_Bool)canProduceString:(id)arg1;	// IMP=0x0000000000a7500a
@property(readonly, nonatomic) _Bool hasActiveKeys;
- (double)lastTouchDownTimestamp;	// IMP=0x0000000000a74f86
- (double)lastTouchUpTimestamp;	// IMP=0x0000000000a74f74
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x0000000000a74b1e
- (id)keyForKeyboardName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0000000000a74a9f
- (void)updateKeyboardForKeyplane:(id)arg1;	// IMP=0x0000000000a74937
- (struct CGSize)sizeForKeyplane:(id)arg1;	// IMP=0x0000000000a74633
- (_Bool)allKeyplanesHaveSameHeight;	// IMP=0x0000000000a7442c
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000a74187
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;	// IMP=0x0000000000a740c9
- (void)refreshForRivenPreferences;	// IMP=0x0000000000a73f2d
- (void)tearDownSplitTransitionView;	// IMP=0x0000000000a73e8c
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000a73c26
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;	// IMP=0x0000000000a73b99
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x0000000000a73966
- (id)defaultKeyplaneForKeyplane:(id)arg1;	// IMP=0x0000000000a738d5
- (id)splitNameForKeyplane:(id)arg1;	// IMP=0x0000000000a73837
- (id)splitNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000a737e0
- (id)defaultNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000a737bd
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x0000000000a72f26
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000a72c95
- (void)removeFromSuperview;	// IMP=0x0000000000a72c04
- (void)clearTransientState;	// IMP=0x0000000000a72b2f
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000a7277e
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000a72708
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000a726b8
- (void)accessibilitySensitivityChanged;	// IMP=0x0000000000a72682
- (void)removePathEffectViewConstraintsIfNeeded;	// IMP=0x0000000000a72639
- (void)dealloc;	// IMP=0x0000000000a72408
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000a720eb
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;	// IMP=0x0000000000aae6dc
- (id)popupKeyViews;	// IMP=0x0000000000aae46c
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000aae21c
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000aadd7a
- (id)keyWithRepresentedString:(id)arg1;	// IMP=0x0000000000aadb1a
- (id)keyplaneView:(id)arg1 containingViewForActiveKey:(id)arg2;	// IMP=0x0000000000ab0343
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x0000000000ab02bd
- (void)showPopupView:(long long)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;	// IMP=0x0000000000ab0122
- (void)setKeyboardDim:(_Bool)arg1;	// IMP=0x0000000000aafee5
- (void)setPreferredHeight:(double)arg1;	// IMP=0x0000000000aafd6f
- (void)setDisableInteraction:(_Bool)arg1;	// IMP=0x0000000000aafd24
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;	// IMP=0x0000000000aaf964
- (void)dismissGestureKeyboardIntroduction;	// IMP=0x0000000000aaf922
- (void)handleDismissFlickView;	// IMP=0x0000000000aaf8b0
- (void)handleDismissFlickView:(id)arg1;	// IMP=0x0000000000aaf693
- (void)handlePopupView;	// IMP=0x0000000000aaf576
- (void)handlePopupView:(id)arg1;	// IMP=0x0000000000aaf401
- (void)showFlickView:(long long)arg1 withKey:(id)arg2 flickString:(id)arg3;	// IMP=0x0000000000aaf382
- (_Bool)handleFlick:(id)arg1;	// IMP=0x0000000000aaee89
- (void)populateFlickPopupsForKey:(id)arg1;	// IMP=0x0000000000aae935
- (id)flickStringForInputKey:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000000aae772
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;	// IMP=0x0000000000aae6f4
- (void)finishContinuousPathView:(_Bool)arg1;	// IMP=0x0000000000ab12ed
- (void)clearContinuousPathView;	// IMP=0x0000000000ab11f8
- (void)addContinuousPathPoint:(struct CGPoint)arg1 withTimestamp:(double)arg2;	// IMP=0x0000000000ab1063
- (void)didBeginContinuousPath;	// IMP=0x0000000000ab0cd3
- (void)transitionToPunctuationKeysVisible:(_Bool)arg1;	// IMP=0x0000000000ab0ccd
- (void)_transitionToContinuousPathState:(long long)arg1 forTouchInfo:(id)arg2;	// IMP=0x0000000000ab0c30
@property(retain, nonatomic) UIKeyboardPathEffectView *pathEffectView;
- (void)didMoveToWindow;	// IMP=0x0000000000ab0576
- (_Bool)_continuousPathModalPunctuationPlaneEnabled;	// IMP=0x0000000000ab04c8
- (_Bool)_continuousPathSpotlightEffectEnabled;	// IMP=0x0000000000ab0473

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

