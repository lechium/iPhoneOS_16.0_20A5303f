//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FBSScene, NSHashTable, NSString, NSXPCConnection, UIInputWindowController, UIView, _UIAssertionController, _UIKeyboardChangedInformation, _UIKeyboardUIInformation, _UIRemoteKeyboardsEventObserver;
@protocol _UIKBArbiterClientKeyboardChangeDelegate, _UIKeyboardUIStateDelegate;

__attribute__((visibility("hidden")))
@interface _UIKeyboardArbiterClient : NSObject
{
    int _ignoreLayoutSubviews;	// 8 = 0x8
    int _externalSuppression;	// 12 = 0xc
    NSHashTable *_windowControllers;	// 16 = 0x10
    int _recursionCheck;	// 24 = 0x18
    _UIAssertionController *_assertionController;	// 32 = 0x20
    _Bool _shouldFence;	// 40 = 0x28
    _Bool _snapshotting;	// 41 = 0x29
    _Bool _handlingRemoteEvent;	// 42 = 0x2a
    _Bool _disableBecomeFirstResponder;	// 43 = 0x2b
    _Bool _expectingInitialState;	// 44 = 0x2c
    _Bool _currentInputDestination;	// 45 = 0x2d
    _Bool _keyboardUIHost;	// 46 = 0x2e
    _Bool _expectedSuppression;	// 47 = 0x2f
    _Bool _enqueuedWillEnterForegroundActions;	// 48 = 0x30
    _Bool _windowEnabled;	// 49 = 0x31
    _Bool _updatingHeight;	// 50 = 0x32
    _Bool _didSignalKeyboardChangedForCurrentKeyboard;	// 51 = 0x33
    _Bool _deactivatedByControlCenter;	// 52 = 0x34
    _Bool _deactivatedBySystemGesture;	// 53 = 0x35
    _Bool _handlingKeyboardTransition;	// 54 = 0x36
    _UIKeyboardChangedInformation *_currentClientState;	// 56 = 0x38
    _UIKeyboardUIInformation *_currentUIState;	// 64 = 0x40
    id <_UIKeyboardUIStateDelegate> _kbUIStateDelegate;	// 72 = 0x48
    UIInputWindowController *_inputWindowRootViewController;	// 80 = 0x50
    long long _lastEventSource;	// 88 = 0x58
    double _iavHeight;	// 96 = 0x60
    id <_UIKBArbiterClientKeyboardChangeDelegate> _changeInfoDelegate;	// 104 = 0x68
    NSXPCConnection *_connection;	// 112 = 0x70
    UIView *_keyboardSnapshot;	// 120 = 0x78
    _UIKeyboardChangedInformation *_backupState;	// 128 = 0x80
    long long _keyboardSource;	// 136 = 0x88
    unsigned long long _hostedCount;	// 144 = 0x90
    _UIRemoteKeyboardsEventObserver *_eventObserver;	// 152 = 0x98
    FBSScene *_requiredScene;	// 160 = 0xa0
}

+ (id)mainBundleIdentifier;	// IMP=0x0010000000612dc9
+ (id)keyboardClientFBSSceneIdentityStringOrIdentifierFromScene:(id)arg1;	// IMP=0x00100000006128b0
+ (id)serviceName;	// IMP=0x001000000060f166
+ (id)automaticSharedArbiterClient;	// IMP=0x001000000060ee74
+ (_Bool)enabled;	// IMP=0x001000000060ee46
- (void).cxx_destruct;	// IMP=0x00000000006130f3
@property(nonatomic) _Bool handlingKeyboardTransition; // @synthesize handlingKeyboardTransition=_handlingKeyboardTransition;
@property(retain, nonatomic) FBSScene *requiredScene; // @synthesize requiredScene=_requiredScene;
@property(nonatomic) _Bool deactivatedBySystemGesture; // @synthesize deactivatedBySystemGesture=_deactivatedBySystemGesture;
@property(nonatomic) _Bool deactivatedByControlCenter; // @synthesize deactivatedByControlCenter=_deactivatedByControlCenter;
@property(retain, nonatomic) _UIRemoteKeyboardsEventObserver *eventObserver; // @synthesize eventObserver=_eventObserver;
@property(nonatomic) unsigned long long hostedCount; // @synthesize hostedCount=_hostedCount;
@property(nonatomic) long long keyboardSource; // @synthesize keyboardSource=_keyboardSource;
@property(retain, nonatomic) _UIKeyboardChangedInformation *backupState; // @synthesize backupState=_backupState;
@property(nonatomic) _Bool didSignalKeyboardChangedForCurrentKeyboard; // @synthesize didSignalKeyboardChangedForCurrentKeyboard=_didSignalKeyboardChangedForCurrentKeyboard;
@property _Bool updatingHeight; // @synthesize updatingHeight=_updatingHeight;
@property(nonatomic) _Bool windowEnabled; // @synthesize windowEnabled=_windowEnabled;
@property(retain, nonatomic) UIView *keyboardSnapshot; // @synthesize keyboardSnapshot=_keyboardSnapshot;
@property(nonatomic) _Bool enqueuedWillEnterForegroundActions; // @synthesize enqueuedWillEnterForegroundActions=_enqueuedWillEnterForegroundActions;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) _Bool expectedSuppression; // @synthesize expectedSuppression=_expectedSuppression;
@property(nonatomic) _Bool keyboardUIHost; // @synthesize keyboardUIHost=_keyboardUIHost;
@property(nonatomic) _Bool currentInputDestination; // @synthesize currentInputDestination=_currentInputDestination;
@property _Bool expectingInitialState; // @synthesize expectingInitialState=_expectingInitialState;
@property(nonatomic) _Bool disableBecomeFirstResponder; // @synthesize disableBecomeFirstResponder=_disableBecomeFirstResponder;
@property(nonatomic) __weak id <_UIKBArbiterClientKeyboardChangeDelegate> changeInfoDelegate; // @synthesize changeInfoDelegate=_changeInfoDelegate;
@property(nonatomic) _Bool handlingRemoteEvent; // @synthesize handlingRemoteEvent=_handlingRemoteEvent;
@property(nonatomic) double iavHeight; // @synthesize iavHeight=_iavHeight;
@property(nonatomic) _Bool snapshotting; // @synthesize snapshotting=_snapshotting;
@property(nonatomic) long long lastEventSource; // @synthesize lastEventSource=_lastEventSource;
@property(retain, nonatomic) UIInputWindowController *inputWindowRootViewController; // @synthesize inputWindowRootViewController=_inputWindowRootViewController;
@property(nonatomic) __weak id <_UIKeyboardUIStateDelegate> kbUIStateDelegate; // @synthesize kbUIStateDelegate=_kbUIStateDelegate;
@property(nonatomic) _Bool shouldFence; // @synthesize shouldFence=_shouldFence;
@property(retain, nonatomic) _UIKeyboardUIInformation *currentUIState; // @synthesize currentUIState=_currentUIState;
@property(retain, nonatomic) _UIKeyboardChangedInformation *currentClientState; // @synthesize currentClientState=_currentClientState;
- (id)prepareForHostedWindowWithScene:(id)arg1;	// IMP=0x0000000000612e7a
- (void)finishWithHostedWindow;	// IMP=0x0000000000612e74
- (void)removeWindowHostingPID:(int)arg1;	// IMP=0x0000000000612e6e
- (void)addWindowHostingPID:(int)arg1;	// IMP=0x0000000000612e68
- (void)setSuppressingKeyboard:(_Bool)arg1 forScene:(id)arg2;	// IMP=0x0000000000612e62
- (void)peekApplicationEvent:(id)arg1;	// IMP=0x0000000000612e5c
- (void)willResume:(id)arg1;	// IMP=0x0000000000612cc3
- (void)applicationResume:(id)arg1;	// IMP=0x0000000000612ca9
- (void)didSuspend:(id)arg1;	// IMP=0x00000000006129f8
- (_Bool)allowedToShowKeyboard;	// IMP=0x0000000000612955
- (_Bool)_didHandleKeyboardClientChange:(id)arg1 shouldConsiderSnapshottingKeyboard:(_Bool)arg2 isLocalEvent:(_Bool)arg3;	// IMP=0x0000000000612791
- (_Bool)keyboardClientDidChange:(id)arg1;	// IMP=0x000000000061267a
- (void)_preserveInputViewsForClientChange:(_Bool)arg1 clientInfo:(id)arg2 snapshotIfNecessary:(_Bool)arg3;	// IMP=0x0000000000612674
- (void)queue_keyboardUIDidChange:(id)arg1 onComplete:(CDUnknownBlockType)arg2;	// IMP=0x0000000000612593
- (void)resetSnapshotWithWindowCheck:(_Bool)arg1;	// IMP=0x000000000061258d
- (void)snapsShotKeyboard;	// IMP=0x0000000000612587
- (_Bool)shouldSnapshot;	// IMP=0x000000000061256a
- (void)reloadForSnapshotting;	// IMP=0x0000000000612564
- (void)sceneUpdated;	// IMP=0x000000000061252d
- (void)keyboardChangedCompleted;	// IMP=0x00000000006124f0
- (unsigned long long)localSceneCount;	// IMP=0x00000000006124e5
- (void)signalToProxyKeyboardChanged:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000006124d3
- (void)releaseIgnoreLayoutNotificationsAssertion;	// IMP=0x00000000006124ca
- (void)assertIgnoreLayoutNotifications;	// IMP=0x00000000006124c1
- (void)ignoreLayoutNotifications:(CDUnknownBlockType)arg1;	// IMP=0x00000000006124a5
- (void)controllerDidLayoutSubviews:(id)arg1;	// IMP=0x00000000006121fc
- (void)_layoutKeyboardViews:(id)arg1;	// IMP=0x00000000006121f6
- (_Bool)shouldAllowInputViewsRestoredForId:(id)arg1;	// IMP=0x0000000000612021
- (void)restorePreservedInputViewsIfNecessary;	// IMP=0x0000000000611fe0
- (void)performOnDistributedControllers:(CDUnknownBlockType)arg1;	// IMP=0x0000000000611f94
- (void)_performOnDistributedControllersExceptSelf:(CDUnknownBlockType)arg1;	// IMP=0x0000000000611ebc
- (void)performOnExistingControllers:(CDUnknownBlockType)arg1;	// IMP=0x0000000000611d19
- (void)performOnControllers:(CDUnknownBlockType)arg1;	// IMP=0x0000000000611b76
- (void)unregisterController:(id)arg1;	// IMP=0x0000000000611b21
- (void)registerController:(id)arg1;	// IMP=0x0000000000611a88
- (void)cleanSuppression;	// IMP=0x00000000006119de
- (void)updateEventSource:(long long)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000006119cc
- (void)_updateEventSource:(long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000611890
- (void)_postInputSourceDidChangeNotification;	// IMP=0x00000000006116f3
- (void)queue_sceneBecameFocused:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000006116e1
- (void)queue_getDebugInfoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000006116cb
- (void)queue_keyboardTransition:(id)arg1 event:(unsigned long long)arg2 withInfo:(id)arg3 onComplete:(CDUnknownBlockType)arg4;	// IMP=0x0000000000610e7b
- (void)queue_keyboardIAVChanged:(double)arg1 onComplete:(CDUnknownBlockType)arg2;	// IMP=0x0000000000610d06
- (void)queue_keyboardChangedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000610c14
- (void)_handleKeyboardChanged:(id)arg1 isLocal:(_Bool)arg2 onComplete:(CDUnknownBlockType)arg3;	// IMP=0x0000000000610b01
- (void)queue_keyboardChanged:(id)arg1 onComplete:(CDUnknownBlockType)arg2;	// IMP=0x00000000006109f0
- (void)queue_keyboardSuppressed:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000006108b5
- (void)queue_setLastEventSource:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000006107b1
- (void)didFailArbiterConnection;	// IMP=0x0000000000610747
- (void)queue_failedConnection:(id)arg1;	// IMP=0x00000000006104cf
- (id)existingInputWindowRootViewController;	// IMP=0x0000000000610478
- (void)resignFirstResponderIfNeeded;	// IMP=0x00000000006103cb
- (void)assertionActivationStateChangedToState:(_Bool)arg1 forType:(unsigned long long)arg2;	// IMP=0x00000000006103af
- (_Bool)assertionActivationStateForType:(unsigned long long)arg1;	// IMP=0x0000000000610394
- (id)vendKeyboardSuppressionAssertionForReason:(id)arg1;	// IMP=0x0000000000610371
- (_Bool)isSpotlight:(id)arg1;	// IMP=0x0000000000610355
- (_Bool)remoteKeyboardUndocked:(_Bool)arg1;	// IMP=0x00000000006102ac
@property(readonly) _Bool remoteKeyboardUndocked;
@property(readonly) _Bool keyboardActive;
- (_Bool)hasWindowHostingPID:(int)arg1;	// IMP=0x0000000000610257
- (_Bool)hasAnyHostedViews;	// IMP=0x000000000061020f
- (_Bool)isOnScreenRotating;	// IMP=0x0000000000610134
@property(readonly) _Bool keyboardVisible;
- (void)checkState;	// IMP=0x000000000061007d
- (void)checkConnection;	// IMP=0x000000000061001a
- (void)stopConnection;	// IMP=0x000000000060ff5f
- (void)startConnectionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000060f5d7
- (void)startConnection;	// IMP=0x000000000060f5c3
- (id)arbiterProxy;	// IMP=0x000000000060f4aa
- (id)arbiterConnection;	// IMP=0x000000000060f2b8
- (void)configureArbiterCommunication:(id)arg1;	// IMP=0x000000000060f200
- (id)currentHostedPIDs;	// IMP=0x000000000060f159
- (void)dealloc;	// IMP=0x000000000060f0c8
- (id)initWithShouldConnect:(_Bool)arg1;	// IMP=0x000000000060ef42
- (id)init;	// IMP=0x000000000060ef2b
- (void)setPlacement:(id)arg1 quietly:(_Bool)arg2 animated:(_Bool)arg3 generateSplitNotification:(_Bool)arg4;	// IMP=0x000000000061332c
- (void)completeTransition:(id)arg1 withInfo:(id)arg2;	// IMP=0x00000000006132a1
- (void)updateTransition:(id)arg1 withInfo:(id)arg2;	// IMP=0x0000000000613216
- (void)startTransition:(id)arg1 withInfo:(id)arg2;	// IMP=0x000000000061318e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

