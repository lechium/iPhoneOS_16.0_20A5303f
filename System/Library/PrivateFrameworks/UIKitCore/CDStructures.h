//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CADisplay, CADynamicFrameRateSource, NSMutableDictionary, NSMutableSet, UIView, _UICommandIdentifierDictionary;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CAColorMatrix {
    float m11;
    float m12;
    float m13;
    float m14;
    float m15;
    float m21;
    float m22;
    float m23;
    float m24;
    float m25;
    float m31;
    float m32;
    float m33;
    float m34;
    float m35;
    float m41;
    float m42;
    float m43;
    float m44;
    float m45;
};

struct CACornerRadii {
    struct CGSize minXMaxY;
    struct CGSize maxXMaxY;
    struct CGSize maxXMinY;
    struct CGSize minXMinY;
};

struct CAFrameRateRange {
    float minimum;
    float maximum;
    float preferred;
};

struct CAPoint3D {
    double x;
    double y;
    double z;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPathElement {
    int _field1;
    struct CGPoint *_field2;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct NSDirectionalEdgeInsets {
    double top;
    double leading;
    double bottom;
    double trailing;
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UIPeripheralAnimationGeometry {
    struct CGPoint outPosition;
    struct CGPoint inPosition;
    struct CGRect bounds;
    struct CGAffineTransform transform;
    double targetFrameHeightDelta;
};

struct UIRectCornerRadii {
    double topLeft;
    double bottomLeft;
    double bottomRight;
    double topRight;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _UIBoundingPathBitmapData {
    unsigned long long width;
    unsigned long long height;
    struct _UIBoundingPathBitmapDataSkipRegion skipRegion;
    unsigned long long nodeCount;
    unsigned long long maximumNodesPerRow;
    unsigned short *rows;
};

struct _UIBoundingPathBitmapDataCorner {
    unsigned long long location;
    unsigned long long radius;
    unsigned long long size;
    _Bool edgePositionsUseLargeValues;
    void *referenceEdgePositionsByRow;
    void *referenceEdgePositionsByCol;
};

struct _UIBoundingPathBitmapDataSkipRegion {
    unsigned long long y;
    unsigned long long height;
};

struct _UIInstrumentedCADisplay {
    CADisplay *direct;
};

struct _UIInstrumentedCADynamicFrameRateSource {
    CADynamicFrameRateSource *direct;
};

struct _UIIntegralCornerRadii {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct _UIIntegralPoint {
    long long _field1;
    long long _field2;
};

struct _UIIntegralRect {
    struct _UIIntegralPoint _field1;
    struct _UIIntegralSize _field2;
};

struct _UIIntegralSize {
    long long _field1;
    long long _field2;
};

struct _UIItemSolveResult;

struct _UIOrderedRangeIndexerImpl;

struct _UIOutlineNode {
    struct _NSRange _field1;
    long long _field2;
};

struct _UIPressTrigger {
    long long _field1;
    long long _field2;
    double _field3;
    _Bool _field4;
};

struct _UIRTreeContainerNode;

struct _UIRegionSolveResult;

struct _UIRenderingSurface {
    struct CGRect _field1;
    double _field2;
};

struct _UISEGestureFeatureSample {
    unsigned long long _field1;
    unsigned long long _field2;
    _Bool _field3;
    long long _field4;
    unsigned long long _field5;
    struct CGPoint _field6;
    double _field7;
};

struct _UIScrollViewVFDLookupState {
    struct CAFrameRateRange *staticRateRangePrevious;
    struct CAFrameRateRange *staticRateRangeCurrent;
    unsigned short staticRateRangeFramesPrevious;
    unsigned short staticRateRangeFramesCurrent;
};

struct _UIStateMachineDebugging;

struct _UIStateMachineMeta {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct _UIStateTransition {
    CDUnknownBlockType _field1;
    CDUnknownBlockType _field2;
    unsigned int :16;
    unsigned int :8;
    unsigned int :8;
};

struct _UITableConstantsBackgroundProperties {
    _Bool _field1;
    id _field2;
    id _field3;
    _Bool _field4;
    long long _field5;
    long long _field6;
    double _field7;
    double _field8;
    _Bool _field9;
    id _field10;
    long long _field11;
    double _field12;
    struct NSDirectionalEdgeInsets _field13;
};

struct _UITraitCollectionChangeDescription {
    id _field1;
    id _field2;
    _Bool _field3;
    struct _UITraitCollectionTraitChanges _field4;
};

struct _UITraitCollectionTraitChanges {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct _UIUpdateInputInternal {
    struct _UIUpdateInputState _state;
    unsigned int _flags;
    struct _UIUpdateInputSet *_set;
    struct {
        struct _UIUpdateInputInternal *le_next;
        struct _UIUpdateInputInternal **le_prev;
    } _setEntry;
    CDUnknownFunctionPointerType _readyForModelTimeCallback;
    void *_context;
    char *_name;
};

struct _UIUpdateInputSet;

struct _UIUpdateInputState {
    int mode;
    unsigned long long earliestModelTime;
    unsigned long long latestModelTime;
};

struct _UIUpdateRequest {
    unsigned int flags;
    unsigned int minRate;
    unsigned int preferredRate;
    unsigned int maxRate;
    unsigned long long phase;
    unsigned long long load;
};

struct _UIUpdateRequestRecord {
    struct _UIUpdateRequest *request;
    unsigned int reason;
};

struct _UIUpdateTiming {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct __UISignedRange {
    long long _field1;
    unsigned long long _field2;
};

struct __shared_weak_count;

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct shared_ptr<_UIOrderedRangeIndexerImpl> {
    struct _UIOrderedRangeIndexerImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<_UIRTreeContainerNode> {
    struct _UIRTreeContainerNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct ui_size_cache {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<ui_size_cache_value *, std::allocator<ui_size_cache_value>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct unique_ptr<_UIItemSolveResult, std::default_delete<_UIItemSolveResult>> {
    struct __compressed_pair<_UIItemSolveResult *, std::default_delete<_UIItemSolveResult>> {
        struct _UIItemSolveResult *__value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<long, UICollectionViewLayoutAttributes *, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<const long, UICollectionViewLayoutAttributes *>>> {
    struct __hash_table<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, std::__unordered_map_hasher<long, std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, std::hash<long>, std::equal_to<long>, true>, std::__unordered_map_equal<long, std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, std::equal_to<long>, std::hash<long>, true>, std::allocator<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<long, std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, std::hash<long>, std::equal_to<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<long, std::__hash_value_type<long, UICollectionViewLayoutAttributes *>, std::equal_to<long>, std::hash<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<_NSRange, std::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<_UIOutlineNode, std::allocator<_UIOutlineNode>> {
    struct _UIOutlineNode *__begin_;
    struct _UIOutlineNode *__end_;
    struct __compressed_pair<_UIOutlineNode *, std::allocator<_UIOutlineNode>> {
        struct _UIOutlineNode *__value_;
    } __end_cap_;
};

struct vector<_UIRegionSolveResult, std::allocator<_UIRegionSolveResult>> {
    struct _UIRegionSolveResult *__begin_;
    struct _UIRegionSolveResult *__end_;
    struct __compressed_pair<_UIRegionSolveResult *, std::allocator<_UIRegionSolveResult>> {
        struct _UIRegionSolveResult *__value_;
    } __end_cap_;
};

struct vector<long, std::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    NSMutableSet *keyCommands;
    NSMutableDictionary *menus;
    NSMutableDictionary *actions;
    _UICommandIdentifierDictionary *commands;
    NSMutableDictionary *parentMenuIdentifiers;
    _UICommandIdentifierDictionary *commandParentMenuIdentifiers;
} CDStruct_de35aa0b;

typedef struct {
    UIView *left;
    UIView *right;
} CDStruct_d9f758ae;

typedef struct {
    id _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
} CDStruct_b73e569c;

typedef struct {
    id _field1;
    unsigned long long _field2;
} CDStruct_856ef1b3;

typedef struct {
    _Bool animateContentRotation;
    _Bool preserveHeight;
    _Bool avoidFadingBottomOfContent;
    _Bool skipSnapshotOfEndState;
    _Bool preventAdditveAnimations;
    double contentStretchRightEdgeInset;
    int edgeClip;
} CDStruct_8bdd0ba6;

typedef struct {
    _Bool _field1;
    _Bool _field2;
} CDStruct_3d581f42;

typedef struct {
    unsigned long long direction;
    _Bool primaryActionIsDestructive;
    _Bool primaryActionCanBeTriggeredBySwipe;
    double openThreshold;
    double confirmationThreshold;
} CDStruct_324b76a9;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    _Bool _field3;
    double _field4;
    double _field5;
    double _field6;
} CDStruct_b06b0113;

typedef struct {
    unsigned long long attachment;
    unsigned long long alignment;
    double attachmentOffset;
    double alignmentOffset;
    long long gravity;
} CDStruct_17a0fc55;

typedef struct {
    unsigned long long senderID;
    double controllerState[16];
    double normalizedLeftStickState[4];
    double normalizedRightStickState[4];
    double normalizedShoulderButtonState[4];
} CDStruct_a7a14e3b;

typedef struct {
    _Bool itemIsEnabled[45];
    char timeString[64];
    char shortTimeString[64];
    char dateString[256];
    int gsmSignalStrengthRaw;
    int secondaryGsmSignalStrengthRaw;
    int gsmSignalStrengthBars;
    int secondaryGsmSignalStrengthBars;
    char serviceString[100];
    char secondaryServiceString[100];
    char serviceCrossfadeString[100];
    char secondaryServiceCrossfadeString[100];
    char serviceImages[2][100];
    char operatorDirectory[1024];
    unsigned int serviceContentType;
    unsigned int secondaryServiceContentType;
    unsigned int cellLowDataModeActive:1;
    unsigned int secondaryCellLowDataModeActive:1;
    int wifiSignalStrengthRaw;
    int wifiSignalStrengthBars;
    unsigned int wifiLowDataModeActive:1;
    unsigned int dataNetworkType;
    unsigned int secondaryDataNetworkType;
    int batteryCapacity;
    unsigned int batteryState;
    char batteryDetailString[150];
    int bluetoothBatteryCapacity;
    int thermalColor;
    unsigned int thermalSunlightMode:1;
    unsigned int slowActivity:1;
    unsigned int syncActivity:1;
    char activityDisplayId[256];
    unsigned int bluetoothConnected:1;
    unsigned int displayRawGSMSignal:1;
    unsigned int displayRawWifiSignal:1;
    unsigned int locationIconType:2;
    unsigned int voiceControlIconType:2;
    unsigned int quietModeInactive:1;
    unsigned int tetheringConnectionCount;
    unsigned int batterySaverModeActive:1;
    unsigned int deviceIsRTL:1;
    unsigned int lock:1;
    char breadcrumbTitle[256];
    char breadcrumbSecondaryTitle[256];
    char personName[100];
    unsigned int electronicTollCollectionAvailable:1;
    unsigned int radarAvailable:1;
    unsigned int announceNotificationsAvailable:1;
    unsigned int wifiLinkWarning:1;
    unsigned int wifiSearching:1;
    double backgroundActivityDisplayStartDate;
    unsigned int shouldShowEmergencyOnlyStatus:1;
    unsigned int secondaryCellularConfigured:1;
    char primaryServiceBadgeString[100];
    char secondaryServiceBadgeString[100];
    char quietModeImage[256];
    char quietModeName[256];
} CDStruct_8eacfc04;

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

typedef struct {
    unsigned int idiom:6;
    unsigned int landscape:1;
    unsigned int split:1;
    unsigned int appearance:8;
    unsigned int rendering:8;
    unsigned int padding:8;
} CDStruct_227bb23d;

typedef struct {
    double dampingRatio;
    double response;
    _Bool initialDampingRatioSpecified;
    _Bool initialResponseSpecified;
    double initialDampingRatio;
    double initialResponse;
    double dampingRatioSmoothing;
    double responseSmoothing;
    double targetSmoothing;
    double projectionDeceleration;
    double impulse;
} CDStruct_6c8af1d9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    _Bool _field4;
    long long _field5;
} CDStruct_e4bf3e73;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    unsigned long long _field5;
} CDStruct_f413d7fe;

typedef struct {
    double rotationX;
    double rotationY;
    double rotationZ;
    double scaleX;
    double scaleY;
    double scaleZ;
    double translationX;
    double translationY;
    double translationZ;
} CDStruct_e79446ac;

typedef struct {
    double targetValue;
    double tension;
    double friction;
    long long displacementFunction;
} CDStruct_b7daa86d;

typedef struct {
    double _field1;
    double _field2;
    long long _field3;
} CDStruct_99fbabfb;

typedef struct {
    int commonRowHorizontalAlignment;
    int lastRowHorizontalAlignment;
    int rowVerticalAlignment;
} CDStruct_2f5e8405;

typedef struct {
    int policy;
    long long receiveDeadline;
} CDStruct_1d7448cc;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    struct CGSize _field6;
} CDStruct_0ba2c6ed;

typedef struct {
    _Bool overrideItemIsEnabled[45];
    unsigned int overrideTimeString:1;
    unsigned int overrideDateString:1;
    unsigned int overrideGsmSignalStrengthRaw:1;
    unsigned int overrideSecondaryGsmSignalStrengthRaw:1;
    unsigned int overrideGsmSignalStrengthBars:1;
    unsigned int overrideSecondaryGsmSignalStrengthBars:1;
    unsigned int overrideServiceString:1;
    unsigned int overrideSecondaryServiceString:1;
    unsigned int overrideServiceImages:2;
    unsigned int overrideOperatorDirectory:1;
    unsigned int overrideServiceContentType:1;
    unsigned int overrideSecondaryServiceContentType:1;
    unsigned int overrideWifiSignalStrengthRaw:1;
    unsigned int overrideWifiSignalStrengthBars:1;
    unsigned int overrideDataNetworkType:1;
    unsigned int overrideSecondaryDataNetworkType:1;
    unsigned int disallowsCellularDataNetworkTypes:1;
    unsigned int overrideBatteryCapacity:1;
    unsigned int overrideBatteryState:1;
    unsigned int overrideBatteryDetailString:1;
    unsigned int overrideBluetoothBatteryCapacity:1;
    unsigned int overrideThermalColor:1;
    unsigned int overrideSlowActivity:1;
    unsigned int overrideActivityDisplayId:1;
    unsigned int overrideBluetoothConnected:1;
    unsigned int overrideBreadcrumb:1;
    unsigned int overrideLock;
    unsigned int overrideDisplayRawGSMSignal:1;
    unsigned int overrideDisplayRawWifiSignal:1;
    unsigned int overridePersonName:1;
    unsigned int overrideWifiLinkWarning:1;
    unsigned int overrideSecondaryCellularConfigured:1;
    unsigned int overridePrimaryServiceBadgeString:1;
    unsigned int overrideSecondaryServiceBadgeString:1;
    unsigned int overrideQuietModeImage:1;
    CDStruct_8eacfc04 values;
} CDStruct_b90c07c4;

typedef struct {
    int _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGSize _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
} CDStruct_ac6e8047;

typedef struct {
    CDStruct_b7daa86d dampingRatioParameters;
    CDStruct_b7daa86d responseParameters;
    CDStruct_b7daa86d targetParameters;
    _Bool dampingRatioSmoothingDisabled;
    _Bool responseSmoothingDisabled;
    _Bool targetSmoothingDisabled;
} CDStruct_500c0369;

typedef struct {
    CDStruct_f2a5f274 dampingRatioState;
    CDStruct_f2a5f274 responseState;
    double tension;
    double friction;
} CDStruct_289c5ec3;

typedef struct {
    CDStruct_21fd8efb beginTime;
    CDStruct_21fd8efb endTime;
} CDStruct_cfb9664d;

typedef struct {
    struct CGPoint _field1;
    unsigned long long _field2;
} CDStruct_912d1c89;

typedef struct {
    struct CGPoint _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    _Bool _field5;
} CDStruct_f8445847;

typedef struct {
    struct _NSRange _field1;
    struct _NSRange _field2;
    struct _NSRange _field3;
    struct _NSRange _field4;
} CDStruct_a33ff3ce;

typedef struct {
    id _field1;
    double _field2;
    double _field3;
    CDStruct_0ba2c6ed _field4;
    CDStruct_0ba2c6ed _field5;
    CDStruct_0ba2c6ed _field6;
    CDStruct_0ba2c6ed _field7;
    _Bool _field8;
} CDStruct_41b0f204;

typedef struct {
    _Bool _field1;
    double _field2;
    struct CGRect _field3;
    struct CGSize _field4;
    struct UIEdgeInsets _field5;
    double _field6;
    _Bool _field7;
    _Bool _field8;
    struct CGSize _field9;
} CDStruct_758ece87;

typedef struct {
    double _field1;
    double _field2;
    struct CGRect _field3;
    long long _field4;
    struct CGRect _field5;
} CDStruct_3ae44ac1;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
    CDStruct_289c5ec3 _field3;
} CDStruct_484bde22;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_b7523c42;

typedef struct {
    struct CGRect _field1;
    struct CGSize _field2;
    double _field3;
    double _field4;
} CDStruct_6024001e;

// Ambiguous groups
typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_d3566df9;

typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_8a1bf2a3;

typedef struct {
    unsigned int :1;
} CDStruct_65389fcd;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double _x;
    double _y;
} CDStruct_5e2aa800;

typedef struct {
    double minimum;
    double maximum;
} CDStruct_ef18196a;

typedef struct {
    double value;
    double velocity;
} CDStruct_f2a5f274;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    long long hour;
    long long minute;
} CDStruct_21fd8efb;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct {
    struct CGPoint _field1;
    double _field2;
} CDStruct_19cde01f;

typedef struct {
    struct CGPoint point;
    double force;
} CDStruct_23d8ee2f;

typedef struct vector<_UIOutlineNode, std::allocator<_UIOutlineNode>> {
    struct _UIOutlineNode *__begin_;
    struct _UIOutlineNode *__end_;
    struct __compressed_pair<_UIOutlineNode *, std::allocator<_UIOutlineNode>> {
        struct _UIOutlineNode *__value_;
    } __end_cap_;
} vector_a91a301d;

#pragma mark Named Unions

union _GLKQuaternion {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        union _GLKVector3 v;
        float s;
    } ;
    float q[4];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _UIStateContext {
    id _field1;
    void *_field2;
    void *_field3;
};

#pragma mark Typedef'd Unions

typedef union {
    CDStruct_227bb23d styling;
    int intValue;
} CDUnion_bf7716c0;

