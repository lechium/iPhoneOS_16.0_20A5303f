//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAudioMix, AVCustomVideoCompositorSession, AVMediaSelection, AVPlayerConnection, AVPlayerItem, AVPlayerItemInterstitialEventCollector, AVPlayerPlaybackCoordinator, AVVideoComposition, AVWeakReference, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSString, NSURL;
@protocol AVLoggingIdentifier, AVPlayerItemDelegate, NSObject><NSCopying, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface AVPlayerItemInternal : NSObject
{
    NSURL *URL;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *ivarAccessQueue;	// 16 = 0x10
    AVWeakReference *weakReference;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *figConfigurationQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *figPlaybackItemAccessorQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *figPlaybackItemSetterQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *seekQueue;	// 56 = 0x38
    struct OpaqueFigSimpleMutex *seekIDMutex;	// 64 = 0x40
    struct OpaqueVTPixelBufferAttributesMediator *pixelBufferAttributeMediator;	// 72 = 0x48
    struct OpaqueCMTimebase *proxyUnfoldedTimebase;	// 80 = 0x50
    struct OpaqueCMTimebase *proxyFoldedTimebase;	// 88 = 0x58
    NSArray *automaticallyLoadedAssetKeys;	// 96 = 0x60
    _Bool wasInitializedWithURL;	// 104 = 0x68
    AVAsset *asset;	// 112 = 0x70
    struct OpaqueFigPlaybackItem *figPlaybackItem;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *stateDispatchQueue;	// 128 = 0x80
    NSArray *cachedTracks;	// 136 = 0x88
    NSArray *tracks;	// 144 = 0x90
    NSMutableArray *syncLayers;	// 152 = 0x98
    NSArray *itemOutputs;	// 160 = 0xa0
    NSMutableArray *itemVideoOutputs;	// 168 = 0xa8
    NSMutableDictionary *itemLegibleOutputsForKeys;	// 176 = 0xb0
    NSMutableDictionary *itemMetadataOutputsForKeys;	// 184 = 0xb8
    _Bool suppressesVideoLayers;	// 192 = 0xc0
    struct OpaqueCMTimebase *foldedTimebase;	// 200 = 0xc8
    struct OpaqueCMTimebase *unfoldedFigTimebase;	// 208 = 0xd0
    _Bool didBecomeReadyForInspectionOfTracks;	// 216 = 0xd8
    _Bool didBecomeReadyForInspectionOfPresentationSize;	// 217 = 0xd9
    _Bool didBecomeReadyForInspectionOfDuration;	// 218 = 0xda
    _Bool figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions;	// 219 = 0xdb
    _Bool didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive;	// 220 = 0xdc
    AVAsset *assetWithFigPlaybackItem;	// 224 = 0xe0
    NSArray *trackIDsForAssetWithFigPlaybackItem;	// 232 = 0xe8
    _Bool needTimedMetadataNotification;	// 240 = 0xf0
    _Bool didBecomeReadyForBasicInspection;	// 241 = 0xf1
    id <AVPlayerItemDelegate> delegate;	// 248 = 0xf8
    AVAudioMix *audioMix;	// 256 = 0x100
    long long status;	// 264 = 0x108
    NSError *error;	// 272 = 0x110
    CDStruct_1b6d18a9 forwardPlaybackEndTime;	// 280 = 0x118
    CDStruct_1b6d18a9 reversePlaybackEndTime;	// 304 = 0x130
    CDStruct_1b6d18a9 timeToPauseBuffering;	// 328 = 0x148
    CDStruct_1b6d18a9 timeToPausePlayback;	// 352 = 0x160
    CDStruct_1b6d18a9 advanceTimeForOverlappedPlayback;	// 376 = 0x178
    _Bool advanceTimeForOverlappedPlaybackWasSet;	// 400 = 0x190
    CDStruct_1b6d18a9 maximumTimePlayedToDuringOverlappedPlayback;	// 404 = 0x194
    _Bool snapTimeToPausePlayback;	// 428 = 0x1ac
    _Bool preservesTimeOffsetFromLive;	// 429 = 0x1ad
    CDStruct_1b6d18a9 configuredTimeOffsetFromLive;	// 432 = 0x1b0
    CDStruct_1b6d18a9 recommendedTimeOffsetFromLive;	// 456 = 0x1c8
    CDStruct_1b6d18a9 duration;	// 480 = 0x1e0
    _Bool seekingWaitsForVideoCompositionRendering;	// 504 = 0x1f8
    NSArray *textStyleRules;	// 512 = 0x200
    NSArray *textHighlightArray;	// 520 = 0x208
    struct __CFString *initialFigTimePitchAlgorithm;	// 528 = 0x210
    _Bool canUseNetworkResourcesForLiveStreamingWhilePaused;	// 536 = 0x218
    CDStruct_1b6d18a9 maximumForwardBufferDuration;	// 540 = 0x21c
    CDStruct_1b6d18a9 maximumTrailingBufferDuration;	// 564 = 0x234
    double preferredPeakBitRate;	// 592 = 0x250
    double preferredPeakBitRateForExpensiveNetworks;	// 600 = 0x258
    int startsOnFirstEligibleVariant;	// 608 = 0x260
    NSArray *itemCollectors;	// 616 = 0x268
    NSMutableArray *itemMetadataCollectors;	// 624 = 0x270
    AVPlayerItemInterstitialEventCollector *interstitialEventCollector;	// 632 = 0x278
    unsigned int RTCReportingFlags;	// 640 = 0x280
    NSDictionary *gaplessInfo;	// 648 = 0x288
    float soundCheckVolumeNormalization;	// 656 = 0x290
    float volumeAdjustment;	// 660 = 0x294
    NSDictionary *loudnessInfo;	// 664 = 0x298
    struct opaqueMTAudioProcessingTap *audioProcessingTap;	// 672 = 0x2a0
    _Bool initialLimitReadAhead;	// 680 = 0x2a8
    unsigned long long restrictions;	// 688 = 0x2b0
    NSString *mediaKind;	// 696 = 0x2b8
    _Bool reversesMoreVideoFramesInMemory;	// 704 = 0x2c0
    _Bool reversesMoreVideoFramesInMemoryWasSet;	// 705 = 0x2c1
    _Bool aggressivelyCachesVideoFrames;	// 706 = 0x2c2
    _Bool aggressivelyCachesVideoFramesWasSet;	// 707 = 0x2c3
    _Bool decodesAllFramesDuringOrdinaryPlayback;	// 708 = 0x2c4
    _Bool decodesAllFramesDuringOrdinaryPlaybackWasSet;	// 709 = 0x2c5
    _Bool initialContinuesPlayingDuringPrerollForSeek;	// 710 = 0x2c6
    _Bool initialContinuesPlayingDuringPrerollForRateChange;	// 711 = 0x2c7
    _Bool usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;	// 712 = 0x2c8
    _Bool usesIFrameOnlyPlaybackForHighRateScaledEdits;	// 713 = 0x2c9
    CDStruct_1b6d18a9 minimumIntervalForIFrameOnlyPlayback;	// 716 = 0x2cc
    _Bool minimumIntervalForIFrameOnlyPlaybackWasSet;	// 740 = 0x2e4
    float speedThresholdForIFrameOnlyPlayback;	// 744 = 0x2e8
    _Bool speedThresholdForIFrameOnlyPlaybackWasSet;	// 748 = 0x2ec
    _Bool refreshesClosedCaptionsImmediatelyAfterSeeking;	// 749 = 0x2ed
    NSDate *initialDate;	// 752 = 0x2f0
    NSDate *initialEstimatedDate;	// 760 = 0x2f8
    _Bool requiresAccessLog;	// 768 = 0x300
    _Bool suppressesAudioOnlyVariants;	// 769 = 0x301
    _Bool prefersOfflinePlayableVariants;	// 770 = 0x302
    _Bool autoSwitchAtmosStreamVariants;	// 771 = 0x303
    unsigned long long variantPreferences;	// 776 = 0x308
    double preferredMaximumAudioSampleRate;	// 784 = 0x310
    NSArray *imageQueueInterpolationCurve;	// 792 = 0x318
    _Bool imageQueueInterpolationCurveWasSet;	// 800 = 0x320
    _Bool blendsVideoFrames;	// 801 = 0x321
    _Bool blendsVideoFramesWasSet;	// 802 = 0x322
    _Bool appliesPerFrameHDRDisplayMetadata;	// 803 = 0x323
    _Bool appliesPerFrameHDRDisplayMetadataWasSet;	// 804 = 0x324
    NSString *videoApertureMode;	// 808 = 0x328
    _Bool usesMinimalLatencyForVideoCompositionRendering;	// 816 = 0x330
    _Bool initialAlwaysMonitorsPlayability;	// 817 = 0x331
    long long initialPlaybackLikelyToKeepUpTrigger;	// 824 = 0x338
    _Bool savesDownloadedDataToDiskWhenDone;	// 832 = 0x340
    _Bool networkUsuallyExceedsMaxBitRate;	// 833 = 0x341
    _Bool allowProgressiveSwitchUp;	// 834 = 0x342
    _Bool allowProgressiveStartup;	// 835 = 0x343
    _Bool allowProgressiveResume;	// 836 = 0x344
    struct CGSize IFramePrefetchTargetDimensions;	// 840 = 0x348
    id <NSObject><NSCopying> AVKitData;	// 856 = 0x358
    struct CGSize preferredMaximumResolution;	// 864 = 0x360
    struct CGSize preferredMaximumResolutionForExpensiveNetworks;	// 880 = 0x370
    struct CGSize preferredMinimumResolution;	// 896 = 0x380
    _Bool canPlayFastForward;	// 912 = 0x390
    _Bool canPlayFastReverse;	// 913 = 0x391
    _Bool canPlayReverse;	// 914 = 0x392
    _Bool canPlaySlowReverse;	// 915 = 0x393
    _Bool canPlaySlowForward;	// 916 = 0x394
    _Bool canStepForward;	// 917 = 0x395
    _Bool canStepBackward;	// 918 = 0x396
    struct CGSize presentationSize;	// 920 = 0x398
    _Bool playbackBufferEmpty;	// 936 = 0x3a8
    _Bool playbackBufferFull;	// 937 = 0x3a9
    _Bool playbackLikelyToKeepUp;	// 938 = 0x3aa
    _Bool restrictsAutomaticMediaSelectionToAvailableOfflineOptions;	// 939 = 0x3ab
    _Bool nonForcedSubtitlesEnabled;	// 940 = 0x3ac
    _Bool hasEnabledVideo;	// 941 = 0x3ad
    _Bool hasVideo;	// 942 = 0x3ae
    _Bool hasEnabledAudio;	// 943 = 0x3af
    _Bool hasEnqueuedVideoFrame;	// 944 = 0x3b0
    _Bool externalProtectionRequested;	// 945 = 0x3b1
    _Bool automaticallyHandlesInterstitialEvents;	// 946 = 0x3b2
    NSArray *seekableTimeRanges;	// 952 = 0x3b8
    double seekableTimeRangesLastModifiedTime;	// 960 = 0x3c0
    NSArray *loadedTimeRanges;	// 968 = 0x3c8
    CDStruct_e83c9415 loopTimeRange;	// 976 = 0x3d0
    id <AVLoggingIdentifier> loggingIdentifier;	// 1024 = 0x400
    AVMediaSelection *currentMediaSelection;	// 1032 = 0x408
    NSString *videoEnhancementMode;	// 1040 = 0x410
    _Bool isRenderingSpatialAudio;	// 1048 = 0x418
    AVPlayerPlaybackCoordinator *playerPlaybackCoordinator;	// 1056 = 0x420
    id coordinatedPlaybackIdentifierChangeNotificationToken;	// 1064 = 0x428
    NSString *serviceIdentifier;	// 1072 = 0x430
    _Bool needToSeekAfterCreatingFigPlaybackItem;	// 1080 = 0x438
    CDStruct_1b6d18a9 initialTime;	// 1084 = 0x43c
    unsigned int initialSetTimeFlags;	// 1108 = 0x454
    CDStruct_1b6d18a9 initialMinSnapTime;	// 1112 = 0x458
    CDStruct_1b6d18a9 initialMaxSnapTime;	// 1136 = 0x470
    unsigned int nextSeekIDToGenerate;	// 1160 = 0x488
    int pendingSeekID;	// 1164 = 0x48c
    CDUnknownBlockType seekCompletionHandler;	// 1168 = 0x490
    AVPlayerItem *previousItem;	// 1176 = 0x498
    AVPlayerItem *nextItem;	// 1184 = 0x4a0
    AVPlayerConnection *playerConnection;	// 1192 = 0x4a8
    _Bool initialWillNeverSeekBackwardsHint;	// 1200 = 0x4b0
    AVVideoComposition *videoComposition;	// 1208 = 0x4b8
    AVWeakReference *clientsOriginalVideoComposition;	// 1216 = 0x4c0
    AVCustomVideoCompositorSession *customVideoCompositorSession;	// 1224 = 0x4c8
    void *figVideoCompositor;	// 1232 = 0x4d0
    AVPlayerItem *interstitialTemplate;	// 1240 = 0x4d8
    int eqPreset;	// 1248 = 0x4e0
    NSDictionary *rampInOutInfo;	// 1256 = 0x4e8
    NSDictionary *audibleDRMInfo;	// 1264 = 0x4f0
    long long initialVariantIndex;	// 1272 = 0x4f8
    NSString *currentStableVariantID;	// 1280 = 0x500
    NSMutableDictionary *mediaOptionsSelectedByClient;	// 1288 = 0x508
    NSArray *timedMetadata;	// 1296 = 0x510
    NSMutableArray *handlersToCallWhenReadyForEnqueueing;	// 1304 = 0x518
    _Bool haveInitialSamples;	// 1312 = 0x520
    _Bool haveCPEProtector;	// 1313 = 0x521
    _Bool didInformObserversAboutAvailabilityOfTracks;	// 1314 = 0x522
    _Bool didFireKVOForAssetForNonStreamingItem;	// 1315 = 0x523
    AVAudioMix *mostRecentlyAppliedAudioMix;	// 1320 = 0x528
    _Bool audioSpatializationAllowed;	// 1328 = 0x530
    _Bool audioSpatializationAllowedWasSet;	// 1329 = 0x531
    unsigned long long allowedAudioSpatializationFormats;	// 1336 = 0x538
    _Bool allowedAudioSpatializationFormatsWasSet;	// 1344 = 0x540
    AVWeakReference *playerReference;	// 1352 = 0x548
    _Bool didSetAssetToAssetWithFigPlaybackItem;	// 1360 = 0x550
    struct OpaqueFigCPEProtector *figCPEProtector;	// 1368 = 0x558
}

@end

