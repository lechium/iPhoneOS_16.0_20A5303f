//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/NSObject-Protocol.h>

@class NSArray, NSData, NSDictionary, NSMapTable, NSString, NSURL, PKAccount, PKApplePayTrustKeyRequest, PKPass, PKPaymentPass, PKPaymentWebServiceBackgroundContext, PKPaymentWebServiceContext, PKPushProvisioningTarget;

@protocol PKPaymentWebServiceProxyObjectExportedInterface <NSObject>
- (void)invalidateRemoteProxyTargetDevice;
- (void)archiveBackgroundContext:(PKPaymentWebServiceBackgroundContext *)arg1;
- (void)archiveContext:(PKPaymentWebServiceContext *)arg1;
- (void)passOwnershipTokenWithIdentifier:(NSString *)arg1 completion:(void (^)(NSString *))arg2;
- (void)storePassOwnershipToken:(NSString *)arg1 withIdentifier:(NSString *)arg2;
- (void)prepareProvisioningTarget:(PKPushProvisioningTarget *)arg1 checkFamilyCircle:(_Bool)arg2 completion:(void (^)(PKEncryptedPushProvisioningTarget *, _Bool, NSError *))arg3;
- (void)statusForShareableCredentials:(NSArray *)arg1 completion:(void (^)(unsigned long long, NSArray *, NSError *))arg2;
- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(NSString *)arg1 reuseExisting:(_Bool)arg2 completion:(void (^)(NSData *, NSError *))arg3;
- (void)addISO18013Blobs:(NSMapTable *)arg1 cardType:(long long)arg2 completion:(void (^)(NSError *))arg3;
- (_Bool)areUnifiedAccessPassesSupported;
- (void)generateISOEncryptionCertificateForSubCredentialId:(NSString *)arg1 completion:(void (^)(NSArray *, NSData *, NSError *))arg2;
- (void)generateSEEncryptionCertificateForSubCredentialId:(NSString *)arg1 completion:(void (^)(NSData *, NSError *))arg2;
- (void)signWithFidoKeyForRelyingParty:(NSString *)arg1 relyingPartyAccountHash:(NSString *)arg2 fidoKeyHash:(NSData *)arg3 challenge:(NSData *)arg4 publicKeyIdentifier:(NSString *)arg5 externalizedAuth:(NSData *)arg6 completion:(void (^)(NSData *, NSError *))arg7;
- (void)checkFidoKeyPresenceForRelyingParty:(NSString *)arg1 relyingPartyAccountHash:(NSString *)arg2 fidoKeyHash:(NSData *)arg3 completion:(void (^)(_Bool))arg4;
- (void)createFidoKeyForRelyingParty:(NSString *)arg1 relyingPartyAccountHash:(NSString *)arg2 challenge:(NSData *)arg3 externalizedAuth:(NSData *)arg4 completion:(void (^)(NSData *, NSData *, NSError *))arg5;
- (void)availableHomeKeyPassesWithCompletionHandler:(void (^)(NSArray *, NSError *))arg1;
- (void)provisionHomeKeyPassForSerialNumbers:(NSArray *)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;
- (void)generateTransactionKeyWithParameters:(NSDictionary *)arg1 withCompletion:(void (^)(NSString *, NSArray *, NSData *, NSError *))arg2;
- (void)familyMembersWithCompletion:(void (^)(NSArray *))arg1;
- (void)performDeviceRegistrationForReason:(NSString *)arg1 brokerURL:(NSURL *)arg2 completion:(void (^)(unsigned long long, NSError *))arg3;
- (void)performDeviceCheckInWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)deleteApplePayTrustKeyWithIdentifier:(NSString *)arg1 completion:(void (^)(_Bool))arg2;
- (void)createApplePayTrustKeyWithRequest:(PKApplePayTrustKeyRequest *)arg1 completion:(void (^)(PKApplePayTrustKey *, NSError *))arg2;
- (void)applePayTrustKeyForIdentifier:(NSString *)arg1 completion:(void (^)(PKApplePayTrustKey *))arg2;
- (void)deviceMetadataWithFields:(unsigned long long)arg1 completion:(void (^)(PKPaymentDeviceMetadata *))arg2;
- (void)triggerCloudStoreZoneCreationForAccount:(PKAccount *)arg1 withCompletion:(void (^)(_Bool))arg2;
- (void)featureApplicationsForProvisioningWithCompletion:(void (^)(NSArray *))arg1;
- (void)cachedFeatureApplicationsForProvisioningWithCompletion:(void (^)(NSArray *))arg1;
- (void)updatedAccountsForProvisioningWithCompletion:(void (^)(NSArray *, NSArray *))arg1;
- (void)supportedFeatureIdentifiersForAccountProvisioningWithCompletion:(void (^)(NSSet *))arg1;
- (void)supportedFeatureIdentifiersWithCompletion:(void (^)(NSSet *))arg1;
- (void)supportsAccountsWithCompletion:(void (^)(_Bool))arg1;
- (void)updateAccountWithIdentifier:(NSString *)arg1 completion:(void (^)(PKAccount *, NSError *))arg2;
- (void)endRequiringUpgradedPasscodeIfNecessary;
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(_Bool)arg1;
- (void)enforceUpgradedPasscodePolicyWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)notePasscodeUpgradeFlowDidEnd;
- (void)notePasscodeUpgradeFlowWillBeginWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)setDefaultPaymentPassUniqueIdentifier:(NSString *)arg1;
- (void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(NSString *)arg1 completion:(void (^)(_Bool))arg2;
- (void)appleAccountInformationWithCompletion:(void (^)(PKAppleAccountInformation *))arg1;
- (void)renewAppleAccountWithCompletionHandler:(void (^)(long long, PKAppleAccountInformation *))arg1;
- (void)supportsPeerPaymentRegistrationWithCompletion:(void (^)(_Bool))arg1;
- (void)removePass:(PKPass *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)addPassData:(NSData *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)handlePotentialExpressPass:(PKPaymentPass *)arg1 withCompletion:(void (^)(NSSet *))arg2;
- (void)validateTransferPreconditionsWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)secureElementOwnershipStateForCurrentUserWithCompletion:(void (^)(unsigned long long))arg1;
- (void)claimSecureElementForCurrentUserWithCompletion:(void (^)(_Bool))arg1;
- (void)downloadAllPaymentPasses;
- (void)validateAddPreconditionsWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)canProvisionPaymentPassWithPrimaryAccountIdentifier:(NSString *)arg1 completion:(void (^)(_Bool))arg2;
- (void)passesOfType:(unsigned long long)arg1 completion:(void (^)(NSArray *))arg2;
- (void)hasPassesOfType:(unsigned long long)arg1 completion:(void (^)(_Bool))arg2;
- (void)setNewAuthRandom:(void (^)(_Bool))arg1;
- (void)setNewAuthRandomIfNecessaryReturningPairingState:(void (^)(_Bool, NSData *, NSData *))arg1;
- (void)noteProvisioningDidEnd;
- (void)noteProvisioningDidBegin;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)registrationSupportedInCurrentRegionWithCompletion:(void (^)(unsigned long long))arg1;
- (void)paymentSupportedInCurrentRegion:(void (^)(unsigned long long))arg1;
- (void)didRegisterWithRegionMap:(NSDictionary *)arg1 primaryRegionTopic:(NSString *)arg2;
- (void)deleteKeyMaterialForSubCredentialId:(NSString *)arg1;
- (void)deleteApplicationWithAID:(NSString *)arg1;
- (void)getProvisioningDataIncludingDeviceMetadata:(_Bool)arg1 withCompletion:(void (^)(PKPaymentDeviceProvisioningData *, NSError *))arg2;
- (void)signData:(NSData *)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletion:(void (^)(NSData *, PKSecureElementSignatureInfo *, NSError *))arg3;
- (void)getTrustedDeviceEnrollmentInfoWithCompletion:(void (^)(PKTrustedDeviceEnrollmentInfo *))arg1;
- (void)getRegistrationDataWithCompletion:(void (^)(PKPaymentDeviceRegistrationData *, NSError *))arg1;
- (void)getConfigurationDataWithCompletion:(void (^)(PKPaymentDeviceConfigurationData *, NSError *))arg1;
- (void)queueConnectionToTrustedServiceManagerForPushTopic:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)getContextWithCompletion:(void (^)(PKPaymentWebServiceContext *))arg1;
@end

