//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCServiceExportedInterface-Protocol.h>

@class NSArray, NSData, NSOrderedSet, NSString, PKAddSecureElementPassConfiguration, PKCatalog, PKDisplayProfile, PKGroupsControllerSnapshotFetchOptions, PKMapsTransitRouteInfo, PKPaymentMarket, PKPaymentSetupConfiguration;

@protocol PDPassLibraryExportedInterface <PDXPCServiceExportedInterface>
- (void)signData:(NSData *)arg1 forPassUniqueID:(NSString *)arg2 completion:(void (^)(NSData *, NSData *, NSError *))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(PKAddSecureElementPassConfiguration *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)invalidateVehicleConnectionSessionIdentifier:(NSString *)arg1;
- (void)sendRKEPassThroughMessage:(NSData *)arg1 forSessionIdentifier:(NSString *)arg2 withCompletion:(void (^)(_Bool, NSError *))arg3;
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(NSString *)arg1 completion:(void (^)(NSString *))arg2;
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(NSString *)arg2 handler:(void (^)(PKPass *))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(NSString *)arg2 uniqueID:(NSString *)arg3 completion:(void (^)(NSString *))arg4;
- (void)postUpgradedPassNotificationForMarket:(PKPaymentMarket *)arg1 passUniqueID:(NSString *)arg2;
- (void)checkForTransitNotification;
- (void)supportsSearchForPassUniqueID:(NSString *)arg1 completion:(void (^)(_Bool))arg2;
- (void)supportsDisbursements:(void (^)(_Bool, NSError *))arg1;
- (void)peerPaymentPassUniqueIDWithHandler:(void (^)(NSString *))arg1;
- (void)migrateDataWithHandler:(void (^)(_Bool))arg1;
- (void)setBackupMetadata:(NSData *)arg1 handler:(void (^)(void))arg2;
- (void)backupMetadataWithHandler:(void (^)(NSData *))arg1;
- (void)passWithDPANIdentifier:(NSString *)arg1 handler:(void (^)(PKPaymentPass *))arg2;
- (void)passWithFPANIdentifier:(NSString *)arg1 handler:(void (^)(PKPaymentPass *))arg2;
- (void)paymentSetupFeaturesForConfiguration:(PKPaymentSetupConfiguration *)arg1 completion:(void (^)(NSArray *))arg2;
- (void)transitMessageForRouteInfo:(PKMapsTransitRouteInfo *)arg1 handler:(void (^)(PKMapsTransitMessage *))arg2;
- (void)supportedTransitPartnersForDigitalIssuance:(void (^)(NSArray *))arg1;
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(void (^)(NSDictionary *))arg1;
- (void)sortedTransitPassesForAppletDataFormat:(NSString *)arg1 handler:(void (^)(NSArray *))arg2;
- (void)expressTransitPassWithHandler:(void (^)(PKPass *))arg1;
- (void)canAddFelicaPassWithHandler:(void (^)(_Bool))arg1;
- (void)defaultPaymentPassWithHandler:(void (^)(PKPaymentPass *))arg1;
- (void)countPassesOfType:(unsigned long long)arg1 handler:(void (^)(unsigned long long))arg2;
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(void (^)(_Bool))arg2;
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(void (^)(_Bool))arg2;
- (void)submitVerificationCode:(NSString *)arg1 verificationData:(NSData *)arg2 forPassWithUniqueID:(NSString *)arg3 handler:(void (^)(_Bool, NSError *))arg4;
- (void)isPaymentPassActivationAvailableWithHandler:(void (^)(_Bool))arg1;
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(NSString *)arg2 completion:(void (^)(NSData *, NSError *))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 getEncryptedServiceProviderDataForUniqueID:(NSString *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;
- (void)getArchivedObjectWithUniqueID:(NSString *)arg1 handler:(void (^)(NSData *))arg2;
- (void)getDataForBundleResourceNamed:(NSString *)arg1 withExtension:(NSString *)arg2 objectUniqueIdentifier:(NSString *)arg3 handler:(void (^)(NSData *))arg4;
- (void)getImageSetForUniqueID:(NSString *)arg1 ofType:(long long)arg2 displayProfile:(PKDisplayProfile *)arg3 suffix:(NSString *)arg4 handler:(void (^)(PKImageSet *))arg5;
- (void)getContentForUniqueID:(NSString *)arg1 handler:(void (^)(PKContent *))arg2;
- (void)hasRemoteLibraryWithHandler:(void (^)(_Bool))arg1;
- (void)getPassWithUniqueID:(NSString *)arg1 handler:(void (^)(PKPass *))arg2;
- (void)getPassWithPassTypeID:(NSString *)arg1 serialNumber:(NSString *)arg2 handler:(void (^)(PKPass *))arg3;
- (void)getManifestHashAndSettingsForPassTypeID:(NSString *)arg1 serialNumber:(NSString *)arg2 handler:(void (^)(NSData *, unsigned long long))arg3;
- (void)getPassesOfType:(unsigned long long)arg1 handler:(void (^)(NSSet *))arg2;
- (void)getPassesWithHandler:(void (^)(NSSet *))arg1;
- (void)sendUserEditedCatalog:(PKCatalog *)arg1;
- (void)getGroupsControllerSnapshotWithOptions:(PKGroupsControllerSnapshotFetchOptions *)arg1 handler:(void (^)(PKGroupsControllerSnapshot *))arg2;
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(void (^)(NSSet *, PKCatalog *))arg3;
- (void)removePassesWithUniqueIDs:(NSArray *)arg1 diagnosticReason:(NSString *)arg2 handler:(void (^)(void))arg3;
- (void)removePassWithUniqueID:(NSString *)arg1 diagnosticReason:(NSString *)arg2 handler:(void (^)(void))arg3;
- (void)recoverPassWithUniqueID:(NSString *)arg1 handler:(void (^)(void))arg2;
- (void)addPassesWithData:(NSOrderedSet *)arg1 handler:(void (^)(unsigned long long))arg2;
- (void)replacePassWithPassData:(NSData *)arg1 handler:(void (^)(_Bool))arg2;
@end

