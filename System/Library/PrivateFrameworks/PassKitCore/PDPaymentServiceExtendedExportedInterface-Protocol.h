//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDPaymentServiceExportedInterface-Protocol.h>

@class NSData, NSDate, NSDictionary, NSSet, NSString, PKApplicationMessageKey, PKExpressTransactionState, PKPaymentApplication, PKPaymentBalanceReminder, PKPaymentCommutePlanReminder, PKPaymentPass, PKPaymentTransaction, PKTransitAppletHistory, PKValueAddedServiceTransaction, PKVerificationChannel;

@protocol PDPaymentServiceExtendedExportedInterface <PDPaymentServiceExportedInterface>
- (void)handleStandaloneTransaction:(long long)arg1 forCredentialIdentifier:(NSString *)arg2 appletIdentifier:(NSString *)arg3 handler:(void (^)(_Bool))arg4;
- (void)simulateExpressTransactionForPassUniqueIdentifier:(NSString *)arg1 withCompletion:(void (^)(void))arg2;
- (void)startBackgroundVerificationObserverForPass:(PKPaymentPass *)arg1 verificationMethod:(PKVerificationChannel *)arg2;
- (void)passbookUIServiceDidLaunch:(void (^)(void))arg1;
- (void)userNotificationActionPerformed:(unsigned long long)arg1 applicationMessageContentIdentifier:(NSString *)arg2 completion:(void (^)(void))arg3;
- (void)requestNotificationAuthorizationWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)requestNotificationAuthorizationIfNecessaryWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)removeProductsCache;
- (void)setDeviceUpgradeTasksContextBuildVersion:(NSString *)arg1 upgradeTaskVersion:(long long)arg2 retryCount:(long long)arg3;
- (void)scheduleDeviceUpgradeTasksIfNecessaryWithRandomizeStartDate:(_Bool)arg1;
- (void)unscheduleDeviceUpgradeTaskActivity;
- (void)unscheduleDeviceCheckIn;
- (void)scheduleDeviceCheckInWithStartTimeOffset:(double)arg1;
- (void)scheduleSetupReminders:(void (^)(void))arg1;
- (void)consistencyCheckWithHandler:(void (^)(void))arg1;
- (void)simulateNotificationOfType:(unsigned long long)arg1 userInfo:(NSDictionary *)arg2 handler:(void (^)(void))arg3;
- (void)simulatePaymentPushTopic:(NSString *)arg1 handler:(void (^)(void))arg2;
- (void)outstandingExpressTransactionState:(void (^)(PKExpressTransactionState *))arg1;
- (void)transitStateWithPassUniqueIdentifier:(NSString *)arg1 paymentApplication:(PKPaymentApplication *)arg2 handler:(void (^)(PKTransitAppletState *))arg3;
- (void)simulateDefaultExpressTransitPassIdentifier:(NSString *)arg1 forExpressMode:(NSString *)arg2 handler:(void (^)(void))arg3;
- (void)setDefaultExpressFelicaTransitPassIdentifier:(NSString *)arg1 withCredential:(NSData *)arg2 completion:(void (^)(_Bool, NSString *))arg3;
- (void)processTransitTransactionEventWithHistory:(PKTransitAppletHistory *)arg1 transactionDate:(NSDate *)arg2 forPaymentApplication:(PKPaymentApplication *)arg3 withPassUniqueIdentifier:(NSString *)arg4 expressTransactionState:(PKExpressTransactionState *)arg5;
- (void)setDefaultExpressTransitPassIdentifier:(NSString *)arg1 withCredential:(NSData *)arg2 completion:(void (^)(_Bool, NSString *))arg3;
- (void)sanitizeExpressPasses;
- (void)defaultPaymentPassIngestionSpecificIdentifier:(void (^)(NSString *))arg1;
- (void)defaultPaymentApplicationForPassUniqueIdentifier:(NSString *)arg1 handler:(void (^)(PKPaymentApplication *))arg2;
- (void)setDefaultPaymentApplication:(PKPaymentApplication *)arg1 forPassUniqueIdentifier:(NSString *)arg2 handler:(void (^)(PKPass *))arg3;
- (void)archiveMessageWithIdentifier:(NSString *)arg1 handler:(void (^)(void))arg2;
- (void)deleteAllMessagesForPaymentPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(void))arg2;
- (void)deleteAllTransactionsForTransactionSourceIdentifiers:(NSSet *)arg1 handler:(void (^)(void))arg2;
- (void)deletePaymentTransactionWithIdentifier:(NSString *)arg1 handler:(void (^)(void))arg2;
- (void)insertOrUpdateValueAddedServiceTransaction:(PKValueAddedServiceTransaction *)arg1 forPassUniqueIdentifier:(NSString *)arg2 paymentTransaction:(PKPaymentTransaction *)arg3 handler:(void (^)(void))arg4;
- (void)valueAddedServiceTransactionWithIdentifier:(NSString *)arg1 handler:(void (^)(PKValueAddedServiceTransaction *))arg2;
- (void)valueAddedServiceTransactionsForPaymentTransaction:(PKPaymentTransaction *)arg1 handler:(void (^)(NSSet *))arg2;
- (void)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(NSString *)arg1 limit:(long long)arg2 handler:(void (^)(NSSet *))arg3;
- (void)setCommutePlanReminder:(PKPaymentCommutePlanReminder *)arg1 forCommutePlanIdentifier:(NSString *)arg2 withPassUniqueIdentifier:(NSString *)arg3 handler:(void (^)(_Bool))arg4;
- (void)commutePlanReminderForCommutePlanIdentifier:(NSString *)arg1 withPassUniqueIdentifier:(NSString *)arg2 handler:(void (^)(PKPaymentCommutePlanReminder *))arg3;
- (void)setBalanceReminder:(PKPaymentBalanceReminder *)arg1 forBalanceIdentifier:(NSString *)arg2 withPassUniqueIdentifier:(NSString *)arg3 handler:(void (^)(_Bool))arg4;
- (void)balanceReminderThresholdForBalanceIdentifier:(NSString *)arg1 withPassUniqueIdentifier:(NSString *)arg2 handler:(void (^)(PKPaymentBalanceReminder *))arg3;
- (void)plansForPaymentPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(NSSet *))arg2;
- (void)balancesForPaymentPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(NSSet *))arg2;
- (void)messagesForPaymentPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(NSSet *))arg2;
- (void)submitVerificationCode:(NSString *)arg1 verificationData:(NSData *)arg2 forDPANIdentifier:(NSString *)arg3 handler:(void (^)(_Bool, NSError *))arg4;
- (void)usingSynchronousProxy:(_Bool)arg1 tilesForPassWithUniqueIdentifer:(NSString *)arg2 completion:(void (^)(NSArray *))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 updateFinanceKitApplicationMessagesWithCompletion:(void (^)(void))arg2;
- (void)usingSynchronousProxy:(_Bool)arg1 removeApplicationMessageWithKey:(PKApplicationMessageKey *)arg2 completion:(void (^)(void))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 tappedApplicationMessageWithKey:(PKApplicationMessageKey *)arg2 completion:(void (^)(void))arg3;
- (void)usingSynchronousProxy:(_Bool)arg1 applicationMessagesWithCompletion:(void (^)(NSArray *))arg2;
- (void)messagesAppLaunchTokenForPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(NSString *))arg2;
- (void)transactionsAppLaunchTokenForPassWithUniqueIdentifier:(NSString *)arg1 handler:(void (^)(NSString *))arg2;
- (void)paymentDeviceFieldPropertiesWithHandler:(void (^)(PKFieldProperties *))arg1;
@end

