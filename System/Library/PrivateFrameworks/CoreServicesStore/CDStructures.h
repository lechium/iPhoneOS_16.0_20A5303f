//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Named Structures

struct Data {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct Table _field8;
};

struct Pedigree {
    unsigned long long family;
    struct optional<unsigned int> generationAtCopyTime;
};

struct Store {
    id dataContainer;
    struct array<unsigned int, 64UL> tableOffsets;
    struct Table *arrayTable;
    struct Table *stringTable;
    struct Table *dictionaryTable;
    struct atomic<long long> enumerationState;
    struct atomic<long long> getNSDataCallCount;
    struct Pedigree pedigree;
};

struct Table {
    struct Unit _field1;
    char _field2[48];
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct Unit {
    unsigned int :30;
    unsigned int :2;
    unsigned int _field1;
    char _field2[0];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct array<unsigned int, 64UL> {
    unsigned int __elems_[64];
};

struct atomic<long long> {
    struct __cxx_atomic_impl<long long, std::__cxx_atomic_base_impl<long long>> {
        _Atomic long long __a_value;
    } __a_;
};

struct optional<unsigned int> {
    union {
        char __null_state_;
        unsigned int __val_;
    } ;
    _Bool __engaged_;
};

