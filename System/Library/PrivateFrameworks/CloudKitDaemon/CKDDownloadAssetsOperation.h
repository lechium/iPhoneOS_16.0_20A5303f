//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKDCancelTokenGroup, NSArray, NSMapTable, NSMutableArray, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface CKDDownloadAssetsOperation
{
    CDUnknownBlockType _downloadPreparationBlock;	// 8 = 0x8
    CDUnknownBlockType _downloadProgressBlock;	// 16 = 0x10
    CDUnknownBlockType _downloadCommandBlock;	// 24 = 0x18
    CDUnknownBlockType _downloadCompletionBlock;	// 32 = 0x20
    CDUnknownBlockType _urlFilledOutBlock;	// 40 = 0x28
    NSMutableDictionary *_keyOrErrorForHostname;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_queue;	// 56 = 0x38
    NSArray *_assetsToDownload;	// 64 = 0x40
    NSArray *_packageIndexSets;	// 72 = 0x48
    NSArray *_assetsToDownloadInMemory;	// 80 = 0x50
    NSArray *_assetURLInfosToFillOut;	// 88 = 0x58
    NSMutableArray *_MMCSItemsToDownload;	// 96 = 0x60
    NSMutableArray *_MMCSItemsToDownloadInMemory;	// 104 = 0x68
    NSMutableArray *_assetsToDownloadFromTranscoder;	// 112 = 0x70
    NSMutableArray *_assetsToDownloadFromTranscoderInMemory;	// 120 = 0x78
    NSMapTable *_downloadTasksByPackages;	// 128 = 0x80
    CKDCancelTokenGroup *_cancelTokens;	// 136 = 0x88
    unsigned long long _maxPackageDownloadsPerBatch;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x00000000000e1004
@property(nonatomic) unsigned long long maxPackageDownloadsPerBatch; // @synthesize maxPackageDownloadsPerBatch=_maxPackageDownloadsPerBatch;
@property(retain, nonatomic) CKDCancelTokenGroup *cancelTokens; // @synthesize cancelTokens=_cancelTokens;
@property(retain, nonatomic) NSMapTable *downloadTasksByPackages; // @synthesize downloadTasksByPackages=_downloadTasksByPackages;
@property(retain, nonatomic) NSMutableArray *assetsToDownloadFromTranscoderInMemory; // @synthesize assetsToDownloadFromTranscoderInMemory=_assetsToDownloadFromTranscoderInMemory;
@property(retain, nonatomic) NSMutableArray *assetsToDownloadFromTranscoder; // @synthesize assetsToDownloadFromTranscoder=_assetsToDownloadFromTranscoder;
@property(retain, nonatomic) NSMutableArray *MMCSItemsToDownloadInMemory; // @synthesize MMCSItemsToDownloadInMemory=_MMCSItemsToDownloadInMemory;
@property(retain, nonatomic) NSMutableArray *MMCSItemsToDownload; // @synthesize MMCSItemsToDownload=_MMCSItemsToDownload;
@property(retain, nonatomic) NSArray *assetURLInfosToFillOut; // @synthesize assetURLInfosToFillOut=_assetURLInfosToFillOut;
@property(retain, nonatomic) NSArray *assetsToDownloadInMemory; // @synthesize assetsToDownloadInMemory=_assetsToDownloadInMemory;
@property(retain, nonatomic) NSArray *packageIndexSets; // @synthesize packageIndexSets=_packageIndexSets;
@property(retain, nonatomic) NSArray *assetsToDownload; // @synthesize assetsToDownload=_assetsToDownload;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableDictionary *keyOrErrorForHostname; // @synthesize keyOrErrorForHostname=_keyOrErrorForHostname;
@property(copy, nonatomic) CDUnknownBlockType urlFilledOutBlock; // @synthesize urlFilledOutBlock=_urlFilledOutBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadCompletionBlock; // @synthesize downloadCompletionBlock=_downloadCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadCommandBlock; // @synthesize downloadCommandBlock=_downloadCommandBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadProgressBlock; // @synthesize downloadProgressBlock=_downloadProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadPreparationBlock; // @synthesize downloadPreparationBlock=_downloadPreparationBlock;
- (void)_downloadTranscodedAsset:(id)arg1 inMemory:(_Bool)arg2;	// IMP=0x00000000000df9f7
- (_Bool)shouldDownloadAssetFromTranscoder:(id)arg1;	// IMP=0x00000000000df90c
- (_Bool)supportsClearAssetEncryption;	// IMP=0x00000000000df904
- (void)main;	// IMP=0x00000000000df797
- (void)_finishOnCallbackQueueWithError:(id)arg1;	// IMP=0x00000000000df67b
- (void)cancel;	// IMP=0x00000000000df60e
- (_Bool)_postProcess;	// IMP=0x00000000000df222
- (void)_downloadMMCSItems:(id)arg1 downloadTasksByPackages:(id)arg2 shouldFetchAssetContentInMemory:(_Bool)arg3;	// IMP=0x00000000000ddf62
- (_Bool)_download;	// IMP=0x00000000000dda0e
- (void)_downloadPackageSectionsWithPendingTasks:(id)arg1 downloadingTasks:(id)arg2 completedTasks:(id)arg3;	// IMP=0x00000000000dd221
- (void)_downloadPackageSectionsWithTask:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000dc35d
- (void)_downloadPackageSectionsWithSectionEnumerator:(id)arg1 task:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000dc1bf
- (void)_downloadPackageSectionAtIndex:(long long)arg1 task:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000dad66
- (void)_didMakeProgressForMMCSSectionItem:(id)arg1 task:(id)arg2;	// IMP=0x00000000000dabca
- (void)_didDownloadMMCSSectionItems:(id)arg1 task:(id)arg2 error:(id)arg3;	// IMP=0x00000000000da92e
- (void)_didDownloadMMCSSectionItem:(id)arg1 task:(id)arg2 error:(id)arg3;	// IMP=0x00000000000d9d7b
- (void)_didCommandForMMCSItem:(id)arg1 command:(id)arg2;	// IMP=0x00000000000d9d03
- (void)_didMakeProgressForMMCSItem:(id)arg1 inMemory:(_Bool)arg2;	// IMP=0x00000000000d9b39
- (void)_didDownloadMMCSItems:(id)arg1 inMemory:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000000d987a
- (void)_collectMetricsFromCompletedItemGroupSet:(id)arg1;	// IMP=0x00000000000d97e3
- (void)_collectMetricsFromCompletedItemGroup:(id)arg1;	// IMP=0x00000000000d9730
- (void)_collectMetricsFromMMCSOperationMetrics:(id)arg1;	// IMP=0x00000000000d95ef
- (void)_didDownloadMMCSItem:(id)arg1 inMemory:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000000d8e8d
- (_Bool)_prepareForDownload;	// IMP=0x00000000000d6e81
- (id)_tryToFillInTheDerivativeTemplateWithAsset:(id)arg1;	// IMP=0x00000000000d649a
- (void)_didDownloadAsset:(id)arg1 error:(id)arg2;	// IMP=0x00000000000d62d0
- (void)_didCommandForAsset:(id)arg1 command:(id)arg2;	// IMP=0x00000000000d6034
- (void)_didMakeProgressForAsset:(id)arg1 progress:(double)arg2;	// IMP=0x00000000000d5e89
- (void)_didPrepareAsset:(id)arg1;	// IMP=0x00000000000d5cf3
- (void)_removeUntrackedMMCSItems:(id)arg1;	// IMP=0x00000000000d5aae
- (id)nameForState:(unsigned long long)arg1;	// IMP=0x00000000000d5a58
- (_Bool)makeStateTransition;	// IMP=0x00000000000d58a9
- (id)CKStatusReportLogGroups;	// IMP=0x00000000000d56b9
- (id)activityCreate;	// IMP=0x00000000000d5690
- (id)initWithOperationInfo:(id)arg1 container:(id)arg2;	// IMP=0x00000000000d54ef

// Remaining properties
@property(nonatomic) unsigned long long state; // @dynamic state;

@end

