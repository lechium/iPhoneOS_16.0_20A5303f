//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MCMXPCMessageOperationDelete, NSArray, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface MCMCommandOperationDelete
{
    _Bool _traverseLinks;	// 8 = 0x8
    _Bool _waitForDiskSpaceReclaim;	// 9 = 0x9
    _Bool _removeAllCodeSignInfo;	// 10 = 0xa
    _Bool _runFromManifests;	// 11 = 0xb
    NSArray *_concreteContainerIdentities;	// 16 = 0x10
    CDUnknownBlockType _onError;	// 24 = 0x18
    NSArray *_containerIdentities;	// 32 = 0x20
    MCMXPCMessageOperationDelete *_message;	// 40 = 0x28
    NSMutableDictionary *_referenceCounts;	// 48 = 0x30
}

+ (id)_materializeContainerIdentityFromManifestPlistV1:(id)arg1 userIdentityCache:(id)arg2 error:(id *)arg3;	// IMP=0x001000000000bede
+ (id)_materializeContainerIdentityFromManifestPlist:(id)arg1 userIdentityCache:(id)arg2 error:(id *)arg3;	// IMP=0x001000000000bd6b
+ (id)_materializeContainerIdentityFromManifestAtURL:(id)arg1 userIdentityCache:(id)arg2 error:(id *)arg3;	// IMP=0x001000000000bb61
+ (Class)incomingMessageClass;	// IMP=0x001000000000bb25
+ (unsigned long long)command;	// IMP=0x001000000000baef
+ (id)commandForOperationDeleteFromManifestsRemoveAllCodeSignInfo:(_Bool)arg1 context:(id)arg2 resultPromise:(id)arg3 onError:(CDUnknownBlockType)arg4;	// IMP=0x001000000000b391
+ (id)commandForOperationDeleteWithContainerIdentities:(id)arg1 removeAllCodeSignInfo:(_Bool)arg2 context:(id)arg3 resultPromise:(id)arg4 onError:(CDUnknownBlockType)arg5;	// IMP=0x001000000000b2b4
- (void).cxx_destruct;	// IMP=0x000000000000addb
@property(readonly, nonatomic) _Bool runFromManifests; // @synthesize runFromManifests=_runFromManifests;
@property(readonly, nonatomic) NSMutableDictionary *referenceCounts; // @synthesize referenceCounts=_referenceCounts;
@property(readonly, nonatomic) MCMXPCMessageOperationDelete *message; // @synthesize message=_message;
@property(readonly, nonatomic) _Bool removeAllCodeSignInfo; // @synthesize removeAllCodeSignInfo=_removeAllCodeSignInfo;
@property(readonly, nonatomic) NSArray *containerIdentities; // @synthesize containerIdentities=_containerIdentities;
@property(copy, nonatomic) CDUnknownBlockType onError; // @synthesize onError=_onError;
@property(readonly, nonatomic) _Bool waitForDiskSpaceReclaim; // @synthesize waitForDiskSpaceReclaim=_waitForDiskSpaceReclaim;
@property(readonly, nonatomic) _Bool traverseLinks; // @synthesize traverseLinks=_traverseLinks;
@property(readonly, nonatomic) NSArray *concreteContainerIdentities; // @synthesize concreteContainerIdentities=_concreteContainerIdentities;
- (id)_stableFileNameForDataOperationPlistWithContainerIdentity:(id)arg1;	// IMP=0x000000000000a91d
- (_Bool)_removeDeleteManifestIfExistsForContainerIdentity:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000a750
- (id)_urlForDeleteManifestWithContainerIdentity:(id)arg1;	// IMP=0x000000000000a650
- (_Bool)_writeDeleteManifestForItem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000a032
- (_Bool)_writeDeleteManifestsForItems:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000009d82
- (void)_setManifestURLsForItems:(id)arg1;	// IMP=0x0000000000009a92
- (id)_groupContainersToDeleteWhenReconcilingRemovalOfContainer:(id)arg1;	// IMP=0x00000000000096ac
- (unsigned long long)_preflightReferenceCountAfterRemovingRefererenceToIdentifier:(id)arg1 containerClass:(unsigned long long)arg2;	// IMP=0x00000000000095fc
- (id)_preflightReferenceCountsForContainerClass:(unsigned long long)arg1;	// IMP=0x00000000000094ce
- (id)_replyFromRelayToDaemonWithContainerIdentities:(id)arg1;	// IMP=0x0000000000008e95
- (void)_removeLinksTargetingItems:(id)arg1;	// IMP=0x0000000000008184
- (id)_deleteItems:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000007156
- (id)_containerIdentitiesToDeleteTransitivelyFromMetadata:(id)arg1;	// IMP=0x0000000000006634
- (id)_containersToDeleteRecursivelyStartingWithContainerIdentities:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000590b
- (void)execute;	// IMP=0x0000000000004a41
- (_Bool)preflightClientAllowed;	// IMP=0x00000000000046fb
- (id)initWithMessage:(id)arg1 context:(id)arg2 reply:(id)arg3;	// IMP=0x000000000000458e
- (id)initWithContainerIdentities:(id)arg1 traverseLinks:(_Bool)arg2 waitForDiskSpaceReclaim:(_Bool)arg3 removeAllCodeSignInfo:(_Bool)arg4 runFromManifests:(_Bool)arg5 context:(id)arg6 resultPromise:(id)arg7 onError:(CDUnknownBlockType)arg8;	// IMP=0x0000000000004439

@end

