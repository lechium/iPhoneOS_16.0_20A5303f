//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject;

#pragma mark Named Structures

struct Address {
    struct DynamicString _field1;
};

struct Allocator;

struct Config {
    struct IDSSessionService *idsSessionService;
    struct queue dispatchQueue;
    struct DynamicString serviceID;
};

struct DiscoveryInvite;

struct DiscoveryView;

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct Subscription *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SubscriptionLegacy *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct Subscription *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SubscriptionLegacy *m_data;
};

struct DynamicArray<re::IDSDiscoveryView *> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct IDSDiscoveryView **m_data;
};

struct DynamicArray<re::IDSInvite *> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct IDSInvite **m_data;
};

struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription, true>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy, true>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription, true>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy, true>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicArray<unsigned char> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    char *m_data;
};

struct DynamicString {
    struct Allocator *m_allocator;
    char *m_buffer;
    unsigned long long m_capacity;
    unsigned long long m_length;
};

struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription, true>> m_deferred;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> m_subscriptionsLegacy;
    struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy, true>> m_deferredLegacy;
    int m_raiseLevel;
};

struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription, true>> m_deferred;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy> m_subscriptionsLegacy;
    struct DynamicArray<re::Pair<bool, re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy, true>> m_deferredLegacy;
    int m_raiseLevel;
};

struct IDSDiscoveryIdentity;

struct IDSDiscoveryView;

struct IDSInvite;

struct IDSSessionService {
    CDUnknownFunctionPointerType *_field1;
};

struct SharedPtr<re::DiscoveryInvite> {
    struct DiscoveryInvite *_field1;
};

struct SharedPtr<re::DiscoveryView> {
    struct DiscoveryView *_field1;
};

struct SharedPtr<re::IDSDiscoveryIdentity> {
    struct IDSDiscoveryIdentity *_field1;
};

struct SharedPtr<re::IDSDiscoveryView> {
    struct IDSDiscoveryView *_field1;
};

struct Slice<re::DynamicString> {
    struct DynamicString *_field1;
    unsigned long long _field2;
};

struct Subscription;

struct SubscriptionLegacy;

struct object {
    NSObject *fObj;
};

struct queue {
    struct object fObj;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct DynamicArray<unsigned char> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    char *m_data;
} DynamicArray_8f05e591;

typedef struct SharedPtr<re::DiscoveryInvite> {
    struct DiscoveryInvite *_field1;
} SharedPtr_d68dfbcb;

typedef struct SharedPtr<re::DiscoveryView> {
    struct DiscoveryView *_field1;
} SharedPtr_c2d37bbb;

typedef struct SharedPtr<re::IDSDiscoveryIdentity> {
    struct IDSDiscoveryIdentity *_field1;
} SharedPtr_601ce9e9;

typedef struct SharedPtr<re::IDSDiscoveryView> {
    struct IDSDiscoveryView *_field1;
} SharedPtr_24b37889;

typedef struct Slice<re::DynamicString> {
    struct DynamicString *_field1;
    unsigned long long _field2;
} Slice_554aef03;

