//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <StatusKitAgentCore/NSObject-Protocol.h>

@class NSArray, NSData, NSDate, NSManagedObjectContext, NSString, SKADatabaseChannel, SKADatabaseInvitedUser, SKADatabasePendingPublishRequest, SKADatabaseReceivedInvitation, SKADatabaseRemovedUser, SKADatabaseStatus, SKADatabaseSubscriptionAssertion, SKAGeneratedEncryptionKey, SKHandle, SKInvitationPayload;

@protocol SKADatabaseManaging <NSObject>
- (void)deviceToDeviceEncryptedDatabaseCapableWithCompletion:(void (^)(_Bool))arg1;
- (void)cleanupOldChannelsForHandle:(SKHandle *)arg1 statusTypeIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (void)cleanupDecommisionedChannelsWithDatabaseContext:(NSManagedObjectContext *)arg1;
- (void)cleanupOldReceivedInvitationsForChannelIdentifier:(NSString *)arg1 excludingInvitation:(SKADatabaseReceivedInvitation *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (NSArray *)receivedInvitationsForChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseReceivedInvitation *)createReceivedInvitationForChannel:(SKADatabaseChannel *)arg1 senderHandle:(SKHandle *)arg2 invitedHandle:(SKHandle *)arg3 invitationIdentifier:(NSString *)arg4 dateInvitationCreated:(NSDate *)arg5 incomingRatchetState:(NSData *)arg6 presenceIdentifier:(NSString *)arg7 channelToken:(NSData *)arg8 serverKey:(NSData *)arg9 peerKey:(NSData *)arg10 invitationPayload:(NSData *)arg11 databaseContext:(NSManagedObjectContext *)arg12;
- (_Bool)setCurrentCheckpointForChannel:(SKADatabaseChannel *)arg1 checkpoint:(unsigned long long)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (unsigned long long)currentCheckpointForChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (_Bool)deleteRemovedUserWithHandle:(SKHandle *)arg1 presenceIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseRemovedUser *)existingRemovedUserWithHandle:(SKHandle *)arg1 presenceIdentifier:(NSString *)arg2 withDatabaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseRemovedUser *)createRemovedUserWithHandle:(SKHandle *)arg1 dateRemoved:(NSDate *)arg2 presenceIdentifier:(NSString *)arg3 databaseContext:(NSManagedObjectContext *)arg4;
- (_Bool)deleteRemovedUserWithHandle:(SKHandle *)arg1 statusTypeIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseRemovedUser *)existingRemovedUserWithHandle:(SKHandle *)arg1 statusTypeIdentifier:(NSString *)arg2 withDatabaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseRemovedUser *)createRemovedUserWithHandle:(SKHandle *)arg1 dateRemoved:(NSDate *)arg2 statusTypeIdentifier:(NSString *)arg3 databaseContext:(NSManagedObjectContext *)arg4;
- (_Bool)deletePendingPublishRequestWithWithUniqueIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (_Bool)incrementPendingPublishRequestRetryCountWithUniqueIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (NSArray *)existingPendingPublishRequestsForStatusTypeIdentifier:(NSString *)arg1 withDatabaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabasePendingPublishRequest *)existingPendingPublishRequestForUniqueIdentifier:(NSString *)arg1 withDatabaseContext:(NSManagedObjectContext *)arg2;
- (NSArray *)existingPendingPublishRequestsWithDatabaseContext:(NSManagedObjectContext *)arg1;
- (SKADatabasePendingPublishRequest *)createPendingPublishRequestWithUniqueIdentifier:(NSString *)arg1 dateCreated:(NSDate *)arg2 payloadData:(NSData *)arg3 statusTypeIdentifier:(NSString *)arg4 databaseContext:(NSManagedObjectContext *)arg5;
- (void)cleanupOldStatusUpdatesForChannelIdentifier:(NSString *)arg1 excludingStatusUniqueIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseStatus *)existingStatusForUniqueIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseStatus *)existingStatusForChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseStatus *)createStatusWithUniqueIdentifier:(NSString *)arg1 dateCreated:(NSDate *)arg2 datePublished:(NSDate *)arg3 dateReceived:(NSDate *)arg4 dateExpired:(NSDate *)arg5 rawData:(NSData *)arg6 channelIdentifier:(NSString *)arg7 databaseContext:(NSManagedObjectContext *)arg8;
- (NSArray *)existingInvitedUsersForPersonalChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (_Bool)deleteAllInvitedUsersForPersonalChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (_Bool)deleteInvitedUserForHandle:(SKHandle *)arg1 personalChannel:(SKADatabaseChannel *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (_Bool)copyInvitedUsersFromChannel:(SKADatabaseChannel *)arg1 toChannel:(SKADatabaseChannel *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseInvitedUser *)createInvitedUserWithHandle:(SKHandle *)arg1 senderHandle:(SKHandle *)arg2 invitationPayload:(SKInvitationPayload *)arg3 channel:(SKADatabaseChannel *)arg4 databaseContext:(NSManagedObjectContext *)arg5;
- (SKADatabaseInvitedUser *)updateInvitationPayload:(SKInvitationPayload *)arg1 onExistingInvitedUser:(SKADatabaseInvitedUser *)arg2 channel:(SKADatabaseChannel *)arg3 databaseContext:(NSManagedObjectContext *)arg4;
- (NSArray *)existingInvitedUsersForInvitedHandle:(SKHandle *)arg1 onChannel:(SKADatabaseChannel *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (NSArray *)existingRecentTransientSubscriptionHistoriesWithLimit:(long long)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseSubscriptionAssertion *)createOrUpdateTransientSubscriptionHistoryForChannelIdentifier:(NSString *)arg1 lastSubscriptionDate:(NSDate *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (_Bool)deleteSubscriptionAssertionWithSubscriptionIdentifier:(NSString *)arg1 applicationIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseSubscriptionAssertion *)createSubscriptionAssertionForSubscriptionIdentifier:(NSString *)arg1 applicationIdentifier:(NSString *)arg2 statusTypeIdentifier:(NSString *)arg3 databaseContext:(NSManagedObjectContext *)arg4;
- (SKADatabaseSubscriptionAssertion *)existingSubscriptionAssertionForSubscriptionIdentifier:(NSString *)arg1 applicationIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (NSArray *)existingSubscriptionAssertionsForStatusTypeIdentifier:(NSString *)arg1 applicationIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (NSArray *)allPersistentSubscriptionAssertionChannelIdentifiersWithDatabaseContext:(NSManagedObjectContext *)arg1;
- (NSArray *)generatedEncryptionKeysForPersonalChannel:(SKADatabaseChannel *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKAGeneratedEncryptionKey *)createGeneratedEncryptionKeyWithOriginalOutgoingRatchetState:(NSData *)arg1 personalChannel:(SKADatabaseChannel *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (_Bool)decomissionChannelWithIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (_Bool)decomissionAllPersonalChannelsWithStatusTypeIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseChannel *)updatePersonalChannel:(SKADatabaseChannel *)arg1 withCurrentOutgoingRatchetState:(NSData *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseChannel *)createChannelForStatusTypeIdentifier:(NSString *)arg1 channelIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (_Bool)deletePersonalChannelForStatusTypeIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseChannel *)createPresenceChannelForPresenceIdentifier:(NSString *)arg1 channelIdentifier:(NSString *)arg2 channelToken:(NSData *)arg3 peerKey:(NSData *)arg4 serverKey:(NSData *)arg5 membershipKey:(NSData *)arg6 databaseContext:(NSManagedObjectContext *)arg7;
- (SKADatabaseChannel *)createPersonalChannelForStatusTypeIdentifier:(NSString *)arg1 channelIdentifier:(NSString *)arg2 channelToken:(NSData *)arg3 databaseContext:(NSManagedObjectContext *)arg4;
- (NSArray *)allExistingChannelsForStatusTypeIdentifier:(NSString *)arg1 includingPersonalChannel:(_Bool)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (NSArray *)allExistingChannelsForHandle:(SKHandle *)arg1 statusTypeIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseChannel *)existingChannelForHandle:(SKHandle *)arg1 statusTypeIdentifier:(NSString *)arg2 databaseContext:(NSManagedObjectContext *)arg3;
- (SKADatabaseChannel *)existingChannelForPresenceIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseChannel *)existingChannelForSubscriptionIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (SKADatabaseChannel *)existingPersonalChannelForStatusTypeIdentifier:(NSString *)arg1 databaseContext:(NSManagedObjectContext *)arg2;
- (NSManagedObjectContext *)newBackgroundContext;
@end

