//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "ISSettings.h"

__attribute__((visibility("hidden")))
@interface ISPlayerSettings : ISSettings
{
    _Bool _easingEnabled;	// 8 = 0x8
    _Bool _scaleDuringPlayback;	// 9 = 0x9
    _Bool _loopingEnabled;	// 10 = 0xa
    _Bool _crossfadeEnabled;	// 11 = 0xb
    _Bool _audioEnabled;	// 12 = 0xc
    _Bool _playIsSticky;	// 13 = 0xd
    _Bool _longExposureVitality;	// 14 = 0xe
    _Bool _playDuringHint;	// 15 = 0xf
    _Bool _showStateOverlay;	// 16 = 0x10
    _Bool _prerollBeforePlaying;	// 17 = 0x11
    _Bool _useDedicatedQueues;	// 18 = 0x12
    _Bool _allowFrameBlending;	// 19 = 0x13
    _Bool _allowVideoPreRoll;	// 20 = 0x14
    float _vitalityEaseMinRate;	// 24 = 0x18
    double _vitalityEaseDuration;	// 32 = 0x20
    long long _startBehavior;	// 40 = 0x28
    double _forceScrubRewindFactor;	// 48 = 0x30
    double _forceScrubMinRateChange;	// 56 = 0x38
    double _forceScrubMinimumRate;	// 64 = 0x40
    double _forceScrubMaximumInteractiveRate;	// 72 = 0x48
}

+ (id)settingsControllerModule;	// IMP=0x006000000001e490
+ (id)sharedInstance;	// IMP=0x006000000001e439
@property(nonatomic) double forceScrubMaximumInteractiveRate; // @synthesize forceScrubMaximumInteractiveRate=_forceScrubMaximumInteractiveRate;
@property(nonatomic) double forceScrubMinimumRate; // @synthesize forceScrubMinimumRate=_forceScrubMinimumRate;
@property(nonatomic) double forceScrubMinRateChange; // @synthesize forceScrubMinRateChange=_forceScrubMinRateChange;
@property(nonatomic) double forceScrubRewindFactor; // @synthesize forceScrubRewindFactor=_forceScrubRewindFactor;
@property(nonatomic) _Bool allowVideoPreRoll; // @synthesize allowVideoPreRoll=_allowVideoPreRoll;
@property(nonatomic) _Bool allowFrameBlending; // @synthesize allowFrameBlending=_allowFrameBlending;
@property(nonatomic) _Bool useDedicatedQueues; // @synthesize useDedicatedQueues=_useDedicatedQueues;
@property(nonatomic) _Bool prerollBeforePlaying; // @synthesize prerollBeforePlaying=_prerollBeforePlaying;
@property(nonatomic) _Bool showStateOverlay; // @synthesize showStateOverlay=_showStateOverlay;
@property(nonatomic) _Bool playDuringHint; // @synthesize playDuringHint=_playDuringHint;
@property(nonatomic) _Bool longExposureVitality; // @synthesize longExposureVitality=_longExposureVitality;
@property(nonatomic) _Bool playIsSticky; // @synthesize playIsSticky=_playIsSticky;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) _Bool crossfadeEnabled; // @synthesize crossfadeEnabled=_crossfadeEnabled;
@property(nonatomic) _Bool loopingEnabled; // @synthesize loopingEnabled=_loopingEnabled;
@property(nonatomic) _Bool scaleDuringPlayback; // @synthesize scaleDuringPlayback=_scaleDuringPlayback;
@property(nonatomic) long long startBehavior; // @synthesize startBehavior=_startBehavior;
@property(nonatomic) float vitalityEaseMinRate; // @synthesize vitalityEaseMinRate=_vitalityEaseMinRate;
@property(nonatomic) double vitalityEaseDuration; // @synthesize vitalityEaseDuration=_vitalityEaseDuration;
@property(nonatomic) _Bool easingEnabled; // @synthesize easingEnabled=_easingEnabled;
- (void)setDefaultValues;	// IMP=0x000000000001e00d

@end

