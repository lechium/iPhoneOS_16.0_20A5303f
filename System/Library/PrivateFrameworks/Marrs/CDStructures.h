//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Named Structures

struct MentionDetectorRequest;

struct MentionResolverRequest;

struct QRHypothesis {
    struct Uuid _field1;
    basic_string_5886a005 _field2;
    double _field3;
    int _field4;
};

struct QRInteraction {
    struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> _field1;
    struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> _field2;
    struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> _field3;
    basic_string_5886a005 _field4;
    _Bool _field5;
    unsigned long long _field6;
};

struct QRRequest {
    int _field1;
    struct vector<marrs::qr::orchestration::QRInteraction, std::allocator<marrs::qr::orchestration::QRInteraction>> _field2;
};

struct QRResponse {
    struct vector<marrs::qr::orchestration::QRHypothesis, std::allocator<marrs::qr::orchestration::QRHypothesis>> _field1;
    int _field2;
    double _field3;
    double _field4;
    double _field5;
    int _field6;
};

struct QRToken {
    basic_string_5886a005 _field1;
    basic_string_5886a005 _field2;
    vector_74824a0a _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    double _field8;
    basic_string_5886a005 _field9;
    _Bool _field10;
};

struct QRUtterance {
    struct Uuid _field1;
    basic_string_5886a005 _field2;
    struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> _field3;
    struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> _field4;
    double _field5;
};

struct Reader {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    _Bool _field4;
};

struct Uuid {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct exception_ptr {
    void *_field1;
};

struct unique_ptr<marrs::qr::orchestration::QRRequest, std::default_delete<marrs::qr::orchestration::QRRequest>> {
    struct __compressed_pair<marrs::qr::orchestration::QRRequest *, std::default_delete<marrs::qr::orchestration::QRRequest>> {
        struct QRRequest *_field1;
    } _field1;
};

struct unique_ptr<sirinluinternalmention_detector::MentionDetectorRequest, std::default_delete<sirinluinternalmention_detector::MentionDetectorRequest>> {
    struct __compressed_pair<sirinluinternalmention_detector::MentionDetectorRequest *, std::default_delete<sirinluinternalmention_detector::MentionDetectorRequest>> {
        struct MentionDetectorRequest *_field1;
    } _field1;
};

struct unique_ptr<sirinluinternalmention_resolver::MentionResolverRequest, std::default_delete<sirinluinternalmention_resolver::MentionResolverRequest>> {
    struct __compressed_pair<sirinluinternalmention_resolver::MentionResolverRequest *, std::default_delete<sirinluinternalmention_resolver::MentionResolverRequest>> {
        struct MentionResolverRequest *_field1;
    } _field1;
};

struct vector<marrs::qr::orchestration::QRHypothesis, std::allocator<marrs::qr::orchestration::QRHypothesis>> {
    struct QRHypothesis *_field1;
    struct QRHypothesis *_field2;
    struct __compressed_pair<marrs::qr::orchestration::QRHypothesis *, std::allocator<marrs::qr::orchestration::QRHypothesis>> {
        struct QRHypothesis *_field1;
    } _field3;
};

struct vector<marrs::qr::orchestration::QRInteraction, std::allocator<marrs::qr::orchestration::QRInteraction>> {
    struct QRInteraction *_field1;
    struct QRInteraction *_field2;
    struct __compressed_pair<marrs::qr::orchestration::QRInteraction *, std::allocator<marrs::qr::orchestration::QRInteraction>> {
        struct QRInteraction *_field1;
    } _field3;
};

struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> {
    struct QRToken *_field1;
    struct QRToken *_field2;
    struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> {
        struct QRToken *_field1;
    } _field3;
};

struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> {
    struct QRUtterance *_field1;
    struct QRUtterance *_field2;
    struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> {
        struct QRUtterance *_field1;
    } _field3;
};

struct vector<std::string, std::allocator<std::string>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_5886a005;

typedef struct unique_ptr<marrs::qr::orchestration::QRRequest, std::default_delete<marrs::qr::orchestration::QRRequest>> {
    struct __compressed_pair<marrs::qr::orchestration::QRRequest *, std::default_delete<marrs::qr::orchestration::QRRequest>> {
        struct QRRequest *_field1;
    } _field1;
} unique_ptr_d07b5ea7;

typedef struct unique_ptr<sirinluinternalmention_detector::MentionDetectorRequest, std::default_delete<sirinluinternalmention_detector::MentionDetectorRequest>> {
    struct __compressed_pair<sirinluinternalmention_detector::MentionDetectorRequest *, std::default_delete<sirinluinternalmention_detector::MentionDetectorRequest>> {
        struct MentionDetectorRequest *_field1;
    } _field1;
} unique_ptr_db728b78;

typedef struct unique_ptr<sirinluinternalmention_resolver::MentionResolverRequest, std::default_delete<sirinluinternalmention_resolver::MentionResolverRequest>> {
    struct __compressed_pair<sirinluinternalmention_resolver::MentionResolverRequest *, std::default_delete<sirinluinternalmention_resolver::MentionResolverRequest>> {
        struct MentionResolverRequest *_field1;
    } _field1;
} unique_ptr_f525a9db;

typedef struct vector<std::string, std::allocator<std::string>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *_field1;
    } _field3;
} vector_74824a0a;

