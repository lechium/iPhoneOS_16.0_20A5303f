//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CalendarItemSource, ControlContainerViewController, FavoritesItemSource, IOSBasedChromeViewController, MISSING_TYPE, MKMapItem, MKMapView, MapQuickActionMenuPresenter, MapViewDragSource, MapsDragDestinationHandler, NSArray, NSString, ParkedCarItemSource, PlatformController, StatusBarBackgroundViewStyle, UIDragInteraction, UIDropInteraction, UIImpactFeedbackGenerator, UILongPressGestureRecognizer, UIView;
@protocol ActionCoordination, MapSelectionManagerDelegate, StatusBarSupplementaryView;

@interface BaseModeController : NSObject
{
    CDStruct_b7cb895d _previousRegion;	// 8 = 0x8
    ControlContainerViewController *_containerViewController;	// 40 = 0x28
    MKMapView *_mapView;	// 48 = 0x30
    CalendarItemSource *_calendarItemSource;	// 56 = 0x38
    FavoritesItemSource *_favoritesItemSource;	// 64 = 0x40
    ParkedCarItemSource *_parkedCarItemSource;	// 72 = 0x48
    UILongPressGestureRecognizer *_longPress;	// 80 = 0x50
    UILongPressGestureRecognizer *_feedbackPreWarmGestureRecognizer;	// 88 = 0x58
    UIImpactFeedbackGenerator *_feedbackBehavior;	// 96 = 0x60
    UIDragInteraction *_dragInteraction;	// 104 = 0x68
    MapViewDragSource *_mapViewDragSource;	// 112 = 0x70
    UIDropInteraction *_dropInteraction;	// 120 = 0x78
    MapsDragDestinationHandler *_mapsDragDestinationHandler;	// 128 = 0x80
    _Bool _includeExpensiveItemSources;	// 136 = 0x88
    NSArray *_cachedViewControllers;	// 144 = 0x90
    PlatformController *_platformController;	// 152 = 0x98
    IOSBasedChromeViewController *_chromeViewController;	// 160 = 0xa0
    MISSING_TYPE *_quickActionMenuPresenter;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x0020000000371f7d
@property(retain, nonatomic) MapQuickActionMenuPresenter *quickActionMenuPresenter; // @synthesize quickActionMenuPresenter=_quickActionMenuPresenter;
@property(nonatomic) __weak IOSBasedChromeViewController *chromeViewController; // @synthesize chromeViewController=_chromeViewController;
@property(retain, nonatomic) PlatformController *platformController; // @synthesize platformController=_platformController;
- (_Bool)permitsWeatherShowing;	// IMP=0x0010000000371f1a
- (_Bool)wantsWeatherShowing;	// IMP=0x0010000000371efd
- (_Bool)permitsLookAroundShowing;	// IMP=0x0010000000371e84
- (_Bool)wantsLookAroundShowing;	// IMP=0x0010000000371dc3
@property(readonly, nonatomic) MKMapItem *mapItemForLookAroundButton;
@property(readonly, nonatomic) UIView<StatusBarSupplementaryView> *statusBarSupplementaryView;
@property(readonly, nonatomic) StatusBarBackgroundViewStyle *statusBarBackgroundViewStyle;
- (long long)preferredStatusBarStyle;	// IMP=0x0010000000371c4b
- (_Bool)prefersStatusBarHidden;	// IMP=0x0010000000371b2a
- (_Bool)wantsStatusBarControl;	// IMP=0x0010000000371a30
- (int)currentMapViewTargetForAnalytics;	// IMP=0x00100000003719a2
- (int)currentUITargetForAnalytics;	// IMP=0x0010000000371914
- (void)quickActionMenuPresenter:(id)arg1 selectedDropPinAt:(id)arg2;	// IMP=0x00100000003718fa
- (_Bool)shouldQuickActionMenuPresenter:(id)arg1 showDirectionsToPlace:(id)arg2;	// IMP=0x0010000000371848
- (void)quickActionMenuWillPresent:(id)arg1;	// IMP=0x0010000000371739
- (void)quickActionMenuPresenter:(id)arg1 selectedViewTransitLinesOnMap:(id)arg2;	// IMP=0x00100000003716ad
- (void)quickActionMenuPresenter:(id)arg1 selectedRemoveDroppedPinOf:(id)arg2;	// IMP=0x0010000000371633
- (id)mapServiceTraitsForQuickActionPresenter:(id)arg1;	// IMP=0x00100000003715eb
- (_Bool)shouldQuickActionMenuPresenter:(id)arg1 presentAtLocation:(struct CGPoint)arg2 inView:(id)arg3;	// IMP=0x00100000003714d6
- (void)quickActionMenuPresenter:(id)arg1 selectedShowPlaceCard:(id)arg2;	// IMP=0x0010000000371359
- (void)quickActionMenuPresenter:(id)arg1 selectedShareLocationOf:(id)arg2;	// IMP=0x0010000000370ec6
- (void)quickActionMenuPresenter:(id)arg1 selectedViewWebsiteFor:(id)arg2;	// IMP=0x0010000000370e3d
- (void)quickActionMenuPresenter:(id)arg1 selectedCall:(id)arg2;	// IMP=0x0010000000370db4
- (void)quickActionMenuPresenter:(id)arg1 selectedDirectionsTo:(id)arg2;	// IMP=0x0010000000370af4
- (void)_addRecentPlaceForSearchResult:(id)arg1;	// IMP=0x0010000000370a46
- (_Bool)shouldShowAddStopForDirectionsInQuickActionMenuPresenter:(id)arg1;	// IMP=0x0010000000370a02
- (_Bool)mapQuickActionMenuPresenter:(id)arg1 shouldBeginOrbGestureForLabelMarkerOnMap:(id)arg2;	// IMP=0x00100000003708a4
- (void)getCurrentSceneTitleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000370832
- (void)_resignTopContextInChromeViewController:(id)arg1;	// IMP=0x0010000000370681
- (void)resignTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x001000000037055a
- (void)_becomeTopContextInChromeViewController:(id)arg1;	// IMP=0x001000000037019c
- (void)becomeTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000370075
- (_Bool)supportsDuplicationInStack;	// IMP=0x001000000037006d
- (_Bool)permitsPreviousCardsInStack;	// IMP=0x0010000000370065
- (id)personalizedItemSources;	// IMP=0x001000000036fd84
- (_Bool)shouldResizingCardDimFloatingControls;	// IMP=0x001000000036fd7c
- (long long)desiredFloatingControls;	// IMP=0x001000000036fd38
- (id)fullscreenViewController;	// IMP=0x001000000036fd26
- (_Bool)showsMapView;	// IMP=0x001000000036fd1e
@property(readonly, nonatomic) id <MapSelectionManagerDelegate> mapSelectionManagerDelegate;
- (id)mapViewDelegate;	// IMP=0x001000000036fc92
- (_Bool)usesDefaultTransitions;	// IMP=0x001000000036fc8a
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x001000000036fb99
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x001000000036f92a
- (void)_handleFeedbackPreWarmGesture:(id)arg1;	// IMP=0x001000000036f8ed
- (void)_handleLongPress:(id)arg1;	// IMP=0x001000000036f79c
- (int)floorOrdinalAtCoordinate:(struct CLLocationCoordinate2D)arg1;	// IMP=0x001000000036f6f6
- (void)cancelQuickActionMenuPresentation:(id)arg1;	// IMP=0x001000000036f6b6
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;	// IMP=0x001000000036f69d
- (void)mapCameraControllerWillChangeVisibleRect:(id)arg1;	// IMP=0x001000000036f65e
- (void)customSearchManager:(id)arg1 didModifyCustomSearchResult:(id)arg2 coordinateChanged:(_Bool)arg3;	// IMP=0x001000000036f640
- (void)customSearchManager:(id)arg1 didReplaceCustomSearchResult:(id)arg2 animated:(_Bool)arg3 shouldSelectOnMap:(id)arg4 context:(id)arg5;	// IMP=0x001000000036f620
- (void)_cleanupSharedTripIfNeeded;	// IMP=0x001000000036f56e
- (_Bool)isShowingSharedTrip:(id)arg1;	// IMP=0x001000000036f486
- (void)showSharedTrip:(id)arg1;	// IMP=0x001000000036f39b
- (_Bool)canDropPin;	// IMP=0x001000000036f318
- (void)createCustomSearchResultForDroppedPinAtCenterPoint;	// IMP=0x001000000036f25e
- (void)createCustomSearchResultForDroppedPinAtPoint:(struct CLLocationCoordinate2D)arg1 floorOrdinal:(int)arg2 animated:(_Bool)arg3;	// IMP=0x001000000036f1c4
- (void)_clearCustomSearchResult;	// IMP=0x001000000036f124
- (void)removeDroppedPin;	// IMP=0x001000000036f05e
- (_Bool)hasDroppedPin;	// IMP=0x001000000036efde
- (void)_showCustomSearchResult:(id)arg1 shouldSelectOnMap:(_Bool)arg2;	// IMP=0x001000000036eeba
- (void)setCustomSearchResult:(id)arg1 animated:(_Bool)arg2;	// IMP=0x001000000036ee20
- (void)setMapView:(id)arg1;	// IMP=0x001000000036eac7
@property(readonly, nonatomic) MKMapView *mapView;
- (void)_setupUserLocationAnnotation;	// IMP=0x001000000036ea49
- (void)viewReady;	// IMP=0x001000000036e95b
- (void)_setupMapView;	// IMP=0x001000000036e42b
- (void)updateViewMode:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x001000000036e3da
@property(readonly, nonatomic) id <ActionCoordination> actionCoordinator;
- (id)containerViewController;	// IMP=0x001000000036e232
- (id)initWithPlatformController:(id)arg1;	// IMP=0x001000000036e1c4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool shouldResetStateAfterResigning;
@property(readonly) Class superclass;

@end

