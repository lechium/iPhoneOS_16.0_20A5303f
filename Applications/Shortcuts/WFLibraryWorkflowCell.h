//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UICollectionViewCell.h>

@class NSString, NSTimer, UIBezierPath, UIViewPropertyAnimator, WFChicletView, WFLibraryEllipsisButton, WFLibraryLayoutMetrics, WFLibraryWorkflowCellSelectionView, WFWorkflowProgressView, WFWorkflowReference;
@protocol WFLibraryWorkflowCellDelegate;

@interface WFLibraryWorkflowCell : UICollectionViewCell
{
    _Bool _waiting;	// 8 = 0x8
    _Bool _enabled;	// 9 = 0x9
    _Bool _jiggling;	// 10 = 0xa
    id <WFLibraryWorkflowCellDelegate> _delegate;	// 16 = 0x10
    WFLibraryLayoutMetrics *_layoutMetrics;	// 24 = 0x18
    WFChicletView *_chicletView;	// 32 = 0x20
    WFWorkflowReference *_workflowReference;	// 40 = 0x28
    double _progress;	// 48 = 0x30
    WFLibraryEllipsisButton *_editButton;	// 56 = 0x38
    WFWorkflowProgressView *_progressView;	// 64 = 0x40
    WFLibraryWorkflowCellSelectionView *_selectionView;	// 72 = 0x48
    long long _dragState;	// 80 = 0x50
    NSTimer *_clearCompletedTimer;	// 88 = 0x58
    UIViewPropertyAnimator *_progressViewAnimator;	// 96 = 0x60
}

+ (id)jiggleRotationAnimation;	// IMP=0x002000000007f6e5
+ (id)jiggleYTranslationAnimation;	// IMP=0x001000000007f5b3
+ (id)jiggleXTranslationAnimation;	// IMP=0x001000000007f481
- (void).cxx_destruct;	// IMP=0x002000000007ed45
@property(retain, nonatomic) UIViewPropertyAnimator *progressViewAnimator; // @synthesize progressViewAnimator=_progressViewAnimator;
@property(retain, nonatomic) NSTimer *clearCompletedTimer; // @synthesize clearCompletedTimer=_clearCompletedTimer;
@property(nonatomic) long long dragState; // @synthesize dragState=_dragState;
@property(readonly, nonatomic) WFLibraryWorkflowCellSelectionView *selectionView; // @synthesize selectionView=_selectionView;
@property(readonly, nonatomic) WFWorkflowProgressView *progressView; // @synthesize progressView=_progressView;
@property(readonly, nonatomic) WFLibraryEllipsisButton *editButton; // @synthesize editButton=_editButton;
@property(nonatomic, getter=isJiggling) _Bool jiggling; // @synthesize jiggling=_jiggling;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic, getter=isWaiting) _Bool waiting; // @synthesize waiting=_waiting;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(copy, nonatomic) WFWorkflowReference *workflowReference; // @synthesize workflowReference=_workflowReference;
@property(readonly, nonatomic) WFChicletView *chicletView; // @synthesize chicletView=_chicletView;
@property(copy, nonatomic) WFLibraryLayoutMetrics *layoutMetrics; // @synthesize layoutMetrics=_layoutMetrics;
@property(nonatomic) __weak id <WFLibraryWorkflowCellDelegate> delegate; // @synthesize delegate=_delegate;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;	// IMP=0x001000000007e9eb
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;	// IMP=0x001000000007e88e
- (id)visibleButton;	// IMP=0x001000000007e87c
- (void)prepareForReuse;	// IMP=0x001000000007e815
- (void)dragStateDidChange:(long long)arg1;	// IMP=0x001000000007e58b
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x001000000007e3df
- (void)setSelected:(_Bool)arg1;	// IMP=0x001000000007e37b
- (void)setHighlighted:(_Bool)arg1;	// IMP=0x001000000007e317
- (void)updateSelectionState;	// IMP=0x001000000007e293
- (void)stopRunning;	// IMP=0x001000000007e1f6
- (void)setProgress:(double)arg1 animated:(_Bool)arg2;	// IMP=0x001000000007dd0e
- (_Bool)isProgressing;	// IMP=0x001000000007dcc6
- (void)editButtonPressed:(id)arg1;	// IMP=0x001000000007dc02
- (void)updateEditButtonVisibility;	// IMP=0x001000000007db6d
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x001000000007d8e3
@property(readonly, nonatomic) UIBezierPath *visiblePathForDragging;
- (void)updateIconImage;	// IMP=0x001000000007d40d
- (void)layoutSubviews;	// IMP=0x001000000007ca7e
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x001000000007c7a7

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

