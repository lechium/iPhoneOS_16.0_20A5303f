//
//     Generated by classdumpios 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CalendarDebugViewController, CalendarModel, EKEvent, MainWindowRootViewController, MobileCalWindow, NSArray, NSString, RootNavigationController, UIApplicationShortcutItem;

@interface CalendarSceneManager : NSObject
{
    CalendarModel *_model;	// 8 = 0x8
    MobileCalWindow *_mobileCalWindow;	// 16 = 0x10
    RootNavigationController *_rootNavigationController;	// 24 = 0x18
    MainWindowRootViewController *_rootViewController;	// 32 = 0x20
    _Bool _launchedFromURLOrActivity;	// 40 = 0x28
    _Bool _sceneHasCompletedExtendedLaunch;	// 41 = 0x29
    _Bool _finishedSetup;	// 42 = 0x2a
    _Bool _showingSplashScreen;	// 43 = 0x2b
    _Bool _maintainToday;	// 44 = 0x2c
    NSArray *_userActivitiesToContinueAfterConnection;	// 48 = 0x30
    UIApplicationShortcutItem *_shortcutItemToRunAfterConnection;	// 56 = 0x38
    EKEvent *_selectedOccurrenceToRestoreAfterConnection;	// 64 = 0x40
    CDUnknownBlockType _splashScreenCompletionAction;	// 72 = 0x48
    CalendarDebugViewController *_debugViewController;	// 80 = 0x50
}

+ (id)_encodeIdentifier:(id)arg1;	// IMP=0x002000000011e9c1
+ (id)_applicationLastActiveTime;	// IMP=0x001000000011882e
+ (id)_sharedState;	// IMP=0x00100000001187d9
+ (void)setApplicationLastActiveTimeProvider:(id)arg1;	// IMP=0x001000000011720d
+ (_Bool)isSceneCalendarAppScene:(id)arg1;	// IMP=0x00100000001171bf
- (void).cxx_destruct;	// IMP=0x0020000000120140
@property(retain, nonatomic) CalendarDebugViewController *debugViewController; // @synthesize debugViewController=_debugViewController;
@property(copy, nonatomic) CDUnknownBlockType splashScreenCompletionAction; // @synthesize splashScreenCompletionAction=_splashScreenCompletionAction;
@property(readonly, nonatomic) MainWindowRootViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void)_collectStats:(id)arg1;	// IMP=0x001000000011ff39
- (void)_receivedSplashScreenCompletedNotification;	// IMP=0x001000000011fdd0
- (void)_splashScreenDidDismissShouldNotify:(_Bool)arg1;	// IMP=0x001000000011fcb9
- (void)_constructAndPresentSplashScreenFromViewController:(id)arg1 window:(id)arg2;	// IMP=0x001000000011f641
- (void)windowScene:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011f1bd
- (void)scene:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;	// IMP=0x001000000011f0ff
- (void)scene:(id)arg1 continueUserActivity:(id)arg2;	// IMP=0x001000000011f0dc
- (void)_selectedIdentityDidUpdate:(id)arg1;	// IMP=0x001000000011f078
- (void)_updateSceneActivationConditions;	// IMP=0x001000000011eaba
- (id)_eventURLFromLaunchURL:(id)arg1 isTravel:(_Bool *)arg2;	// IMP=0x001000000011e721
- (void)_openURL:(id)arg1;	// IMP=0x001000000011df73
- (void)scene:(id)arg1 openURLContexts:(id)arg2;	// IMP=0x001000000011dbe4
- (void)_mainViewControllerDidRequestSceneTitleUpdate:(id)arg1;	// IMP=0x001000000011db97
- (_Bool)_isAnyWindowShowingDelegateCalendar;	// IMP=0x001000000011d949
- (void)_updateSceneTitle;	// IMP=0x001000000011d7a6
- (_Bool)_continueUserActivity:(id)arg1 restoreSelectedOccurrence:(_Bool)arg2 restoreSelectedDate:(_Bool)arg3 restorationHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000011c3ab
- (void)_restoreStateFromUserActivity:(id)arg1;	// IMP=0x001000000011b831
- (void)_restoreModelPersistedStateFromUserActivity:(id)arg1;	// IMP=0x001000000011b5fe
- (id)_extractNumberFromUserActivity:(id)arg1 forKey:(id)arg2;	// IMP=0x001000000011b543
- (_Bool)_isUserActivityForStateRestoration:(id)arg1;	// IMP=0x001000000011b4a8
- (void)_addPersistedStateFromCalendarModelToDictionary:(id)arg1;	// IMP=0x001000000011b254
- (id)stateRestorationActivityForScene:(id)arg1;	// IMP=0x001000000011ac04
- (void)sceneWillEnterForeground:(id)arg1;	// IMP=0x001000000011ab48
- (void)sceneDidEnterBackground:(id)arg1;	// IMP=0x001000000011aa78
- (void)sceneWillResignActive:(id)arg1;	// IMP=0x001000000011a9c9
- (void)sceneDidBecomeActive:(id)arg1;	// IMP=0x001000000011a5ac
- (void)sceneDidDisconnect:(id)arg1;	// IMP=0x0010000000119fc4
- (void)scene:(id)arg1 willConnectToSession:(id)arg2 options:(id)arg3;	// IMP=0x00100000001190cf
- (_Bool)_shouldMaintainToday;	// IMP=0x0010000000118f2d
- (_Bool)_shouldResumeToTodayOnBecomeActive;	// IMP=0x0010000000118c8b
- (_Bool)_areMultipleScenesOpen;	// IMP=0x0010000000118a90
- (void)_refreshAccountListAndViewContentsIfNeededForModel:(id)arg1;	// IMP=0x00100000001189a6
- (id)_setUpModel;	// IMP=0x0010000000118907
- (double)_resumeToTodayTimeout;	// IMP=0x00100000001188a8
- (void)_extendedLaunchDidComplete;	// IMP=0x0010000000118770
- (void)_topMainViewControllerCompletedExtendedLaunch:(id)arg1;	// IMP=0x0010000000118678
- (void)_displayedOccurrencesChangedForTheFirstTime:(id)arg1;	// IMP=0x00100000001183e9
- (void)_stateRestoreSelectedCalendarsFromUserActivity:(id)arg1;	// IMP=0x0010000000117d5d
- (void)__buildCalendarSyncHashesForCalendars:(id)arg1;	// IMP=0x0010000000117ce0
- (void)__restoreSelectedCalendarsFromPreferences;	// IMP=0x001000000011770d
- (void)_restoreSelectedCalendarsFromPreferenceIfNeeded;	// IMP=0x00100000001176e6
- (void)showDebugMenu;	// IMP=0x001000000011762d
- (void)_setupDebugMenu:(id)arg1;	// IMP=0x0010000000117594
- (void)debugViewControllerDidDismiss;	// IMP=0x0010000000117538
- (void)_showEvent:(id)arg1 inView:(unsigned long long)arg2;	// IMP=0x0010000000117514
- (void)_showDate:(id)arg1 inView:(unsigned long long)arg2;	// IMP=0x00100000001172d6
- (void)setLaunchedFromURLOrActivity;	// IMP=0x00100000001172cc
- (void)handleURL:(id)arg1 context:(id)arg2;	// IMP=0x00100000001172b2
@property(readonly, nonatomic) _Bool showingSplashScreen;
@property(readonly, nonatomic) MobileCalWindow *mobileCalWindow;
@property(readonly, nonatomic) RootNavigationController *rootNavigationController;
@property(readonly, nonatomic) CalendarModel *model;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

